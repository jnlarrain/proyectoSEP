
VersionFinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800100  00003ffa  0000408e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003ffa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000067  0080016c  0080016c  000040fa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000040fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004158  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  00004198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cd1  00000000  00000000  00004368  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000db7  00000000  00000000  00007039  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001661  00000000  00000000  00007df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000608  00000000  00000000  00009454  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000822  00000000  00000000  00009a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000027fc  00000000  00000000  0000a27e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000ca7a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__ctors_end>
       4:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
       8:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
       c:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      10:	0c 94 1e 13 	jmp	0x263c	; 0x263c <__vector_4>
      14:	0c 94 b3 12 	jmp	0x2566	; 0x2566 <__vector_5>
      18:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      1c:	0c 94 77 03 	jmp	0x6ee	; 0x6ee <__vector_7>
      20:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      24:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      28:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      2c:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      30:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      34:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      38:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      3c:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      40:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      44:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      48:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      4c:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      50:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      54:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      58:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      5c:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      60:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      64:	0c 94 c4 02 	jmp	0x588	; 0x588 <__bad_interrupt>
      68:	2c 05       	cpc	r18, r12
      6a:	f1 04       	cpc	r15, r1
      6c:	08 05       	cpc	r16, r8
      6e:	03 05       	cpc	r16, r3
      70:	1a 05       	cpc	r17, r10
      72:	4b 05       	cpc	r20, r11
      74:	5e 05       	cpc	r21, r14
      76:	59 08       	sbc	r5, r9
      78:	62 08       	sbc	r6, r2
      7a:	94 05       	cpc	r25, r4
      7c:	da 05       	cpc	r29, r10
      7e:	21 06       	cpc	r2, r17
      80:	68 06       	cpc	r6, r24
      82:	af 06       	cpc	r10, r31
      84:	f6 06       	cpc	r15, r22
      86:	3d 07       	cpc	r19, r29
      88:	84 07       	cpc	r24, r20
      8a:	cb 07       	cpc	r28, r27
      8c:	12 08       	sbc	r1, r2
      8e:	59 08       	sbc	r5, r9
      90:	67 08       	sbc	r6, r7
      92:	9d 05       	cpc	r25, r13
      94:	e3 05       	cpc	r30, r3
      96:	2a 06       	cpc	r2, r26
      98:	71 06       	cpc	r7, r17
      9a:	b8 06       	cpc	r11, r24
      9c:	ff 06       	cpc	r15, r31
      9e:	46 07       	cpc	r20, r22
      a0:	8d 07       	cpc	r24, r29
      a2:	d4 07       	cpc	r29, r20
      a4:	1b 08       	sbc	r1, r11
      a6:	3e 0b       	sbc	r19, r30
      a8:	47 0b       	sbc	r20, r23
      aa:	79 08       	sbc	r7, r9
      ac:	bf 08       	sbc	r11, r15
      ae:	06 09       	sbc	r16, r6
      b0:	4d 09       	sbc	r20, r13
      b2:	94 09       	sbc	r25, r4
      b4:	db 09       	sbc	r29, r11
      b6:	22 0a       	sbc	r2, r18
      b8:	69 0a       	sbc	r6, r25
      ba:	b0 0a       	sbc	r11, r16
      bc:	f7 0a       	sbc	r15, r23
      be:	3e 0b       	sbc	r19, r30
      c0:	4c 0b       	sbc	r20, r28
      c2:	82 08       	sbc	r8, r2
      c4:	c8 08       	sbc	r12, r8
      c6:	0f 09       	sbc	r16, r15
      c8:	56 09       	sbc	r21, r6
      ca:	9d 09       	sbc	r25, r13
      cc:	e4 09       	sbc	r30, r4
      ce:	2b 0a       	sbc	r2, r27
      d0:	72 0a       	sbc	r7, r18
      d2:	b9 0a       	sbc	r11, r25
      d4:	00 0b       	sbc	r16, r16
      d6:	e7 0b       	sbc	r30, r23
      d8:	36 0c       	add	r3, r6
      da:	c1 0b       	sbc	r28, r17
      dc:	36 0c       	add	r3, r6
      de:	0d 0c       	add	r0, r13
      e0:	36 0c       	add	r3, r6
      e2:	36 0c       	add	r3, r6
      e4:	36 0c       	add	r3, r6
      e6:	36 0c       	add	r3, r6
      e8:	ae 0b       	sbc	r26, r30
      ea:	36 0c       	add	r3, r6
      ec:	36 0c       	add	r3, r6
      ee:	36 0c       	add	r3, r6
      f0:	36 0c       	add	r3, r6
      f2:	9b 0b       	sbc	r25, r27
      f4:	36 0c       	add	r3, r6
      f6:	d4 0b       	sbc	r29, r20
      f8:	fa 0b       	sbc	r31, r26
      fa:	36 0c       	add	r3, r6
      fc:	36 0c       	add	r3, r6
      fe:	36 0c       	add	r3, r6
     100:	20 0c       	add	r2, r0
     102:	eb 0f       	add	r30, r27
     104:	5b 12       	cpse	r5, r27
     106:	5b 12       	cpse	r5, r27
     108:	5b 12       	cpse	r5, r27
     10a:	5b 12       	cpse	r5, r27
     10c:	5b 12       	cpse	r5, r27
     10e:	5b 12       	cpse	r5, r27
     110:	5b 12       	cpse	r5, r27
     112:	5b 12       	cpse	r5, r27
     114:	5b 12       	cpse	r5, r27
     116:	5b 12       	cpse	r5, r27
     118:	5b 12       	cpse	r5, r27
     11a:	5b 12       	cpse	r5, r27
     11c:	5b 12       	cpse	r5, r27
     11e:	5b 12       	cpse	r5, r27
     120:	5b 12       	cpse	r5, r27
     122:	5b 12       	cpse	r5, r27
     124:	5b 12       	cpse	r5, r27
     126:	5b 12       	cpse	r5, r27
     128:	5b 12       	cpse	r5, r27
     12a:	5b 12       	cpse	r5, r27
     12c:	5b 12       	cpse	r5, r27
     12e:	5b 12       	cpse	r5, r27
     130:	5b 12       	cpse	r5, r27
     132:	5b 12       	cpse	r5, r27
     134:	5b 12       	cpse	r5, r27
     136:	5b 12       	cpse	r5, r27
     138:	5b 12       	cpse	r5, r27
     13a:	5b 12       	cpse	r5, r27
     13c:	5b 12       	cpse	r5, r27
     13e:	5b 12       	cpse	r5, r27
     140:	5b 12       	cpse	r5, r27
     142:	5b 12       	cpse	r5, r27
     144:	5b 12       	cpse	r5, r27
     146:	5b 12       	cpse	r5, r27
     148:	5b 12       	cpse	r5, r27
     14a:	c2 0f       	add	r28, r18
     14c:	5b 12       	cpse	r5, r27
     14e:	5b 12       	cpse	r5, r27
     150:	31 10       	cpse	r3, r1
     152:	5b 12       	cpse	r5, r27
     154:	bf 10       	cpse	r11, r15
     156:	5b 12       	cpse	r5, r27
     158:	5b 12       	cpse	r5, r27
     15a:	5b 12       	cpse	r5, r27
     15c:	5b 12       	cpse	r5, r27
     15e:	5b 12       	cpse	r5, r27
     160:	5b 12       	cpse	r5, r27
     162:	0a 10       	cpse	r0, r10
     164:	78 10       	cpse	r7, r8
     166:	5b 12       	cpse	r5, r27
     168:	9b 0f       	add	r25, r27
     16a:	07 63       	ori	r16, 0x37	; 55
     16c:	42 36       	cpi	r20, 0x62	; 98
     16e:	b7 9b       	sbis	0x16, 7	; 22
     170:	d8 a7       	std	Y+40, r29	; 0x28
     172:	1a 39       	cpi	r17, 0x9A	; 154
     174:	68 56       	subi	r22, 0x68	; 104
     176:	18 ae       	std	Y+56, r1	; 0x38
     178:	ba ab       	std	Y+50, r27	; 0x32
     17a:	55 8c       	ldd	r5, Z+29	; 0x1d
     17c:	1d 3c       	cpi	r17, 0xCD	; 205
     17e:	b7 cc       	rjmp	.-1682   	; 0xfffffaee <__eeprom_end+0xff7efaee>
     180:	57 63       	ori	r21, 0x37	; 55
     182:	bd 6d       	ori	r27, 0xDD	; 221
     184:	ed fd       	.word	0xfded	; ????
     186:	75 3e       	cpi	r23, 0xE5	; 229
     188:	f6 17       	cp	r31, r22
     18a:	72 31       	cpi	r23, 0x12	; 18
     18c:	bf 00       	.word	0x00bf	; ????
     18e:	00 00       	nop
     190:	80 3f       	cpi	r24, 0xF0	; 240
     192:	05 a8       	ldd	r0, Z+53	; 0x35
     194:	4c cd       	rjmp	.-1384   	; 0xfffffc2e <__eeprom_end+0xff7efc2e>
     196:	b2 d4       	rcall	.+2404   	; 0xafc <actualizarNumero+0x14>
     198:	4e b9       	out	0x0e, r20	; 14
     19a:	38 36       	cpi	r19, 0x68	; 104
     19c:	a9 02       	muls	r26, r25
     19e:	0c 50       	subi	r16, 0x0C	; 12
     1a0:	b9 91       	ld	r27, Y+
     1a2:	86 88       	ldd	r8, Z+22	; 0x16
     1a4:	08 3c       	cpi	r16, 0xC8	; 200
     1a6:	a6 aa       	std	Z+54, r10	; 0x36
     1a8:	aa 2a       	or	r10, r26
     1aa:	be 00       	.word	0x00be	; ????
     1ac:	00 00       	nop
     1ae:	80 3f       	cpi	r24, 0xF0	; 240
     1b0:	08 00       	.word	0x0008	; ????
     1b2:	00 00       	nop
     1b4:	be 92       	st	-X, r11
     1b6:	24 49       	sbci	r18, 0x94	; 148
     1b8:	12 3e       	cpi	r17, 0xE2	; 226
     1ba:	ab aa       	std	Y+51, r10	; 0x33
     1bc:	aa 2a       	or	r10, r26
     1be:	be cd       	rjmp	.-1156   	; 0xfffffd3c <__eeprom_end+0xff7efd3c>
     1c0:	cc cc       	rjmp	.-1640   	; 0xfffffb5a <__eeprom_end+0xff7efb5a>
     1c2:	4c 3e       	cpi	r20, 0xEC	; 236
     1c4:	00 00       	nop
     1c6:	00 80       	ld	r0, Z
     1c8:	be ab       	std	Y+54, r27	; 0x36
     1ca:	aa aa       	std	Y+50, r10	; 0x32
     1cc:	aa 3e       	cpi	r26, 0xEA	; 234
     1ce:	00 00       	nop
     1d0:	00 00       	nop
     1d2:	bf 00       	.word	0x00bf	; ????
     1d4:	00 00       	nop
     1d6:	80 3f       	cpi	r24, 0xF0	; 240
     1d8:	00 00       	nop
     1da:	00 00       	nop
     1dc:	00 08       	sbc	r0, r0
     1de:	41 78       	andi	r20, 0x81	; 129
     1e0:	d3 bb       	out	0x13, r29	; 19
     1e2:	43 87       	std	Z+11, r20	; 0x0b
     1e4:	d1 13       	cpse	r29, r17
     1e6:	3d 19       	sub	r19, r13
     1e8:	0e 3c       	cpi	r16, 0xCE	; 206
     1ea:	c3 bd       	out	0x23, r28	; 35
     1ec:	42 82       	std	Z+2, r4	; 0x02
     1ee:	ad 2b       	or	r26, r29
     1f0:	3e 68       	ori	r19, 0x8E	; 142
     1f2:	ec 82       	std	Y+4, r14	; 0x04
     1f4:	76 be       	out	0x36, r7	; 54
     1f6:	d9 8f       	std	Y+25, r29	; 0x19
     1f8:	e1 a9       	ldd	r30, Z+49	; 0x31
     1fa:	3e 4c       	sbci	r19, 0xCE	; 206
     1fc:	80 ef       	ldi	r24, 0xF0	; 240
     1fe:	ff be       	out	0x3f, r15	; 63
     200:	01 c4       	rjmp	.+2050   	; 0xa04 <mostrar+0x34>
     202:	ff 7f       	andi	r31, 0xFF	; 255
     204:	3f 00       	.word	0x003f	; ????
     206:	00 00       	nop
     208:	00 00       	nop
     20a:	06 64       	ori	r16, 0x46	; 70
     20c:	ec 1b       	sub	r30, r28
     20e:	3c 04       	cpc	r3, r12
     210:	bc 16       	cp	r11, r28
     212:	3e 3b       	cpi	r19, 0xBE	; 190
     214:	e5 b9       	out	0x05, r30	; 5
     216:	3c c9       	rjmp	.-3464   	; 0xfffff490 <__eeprom_end+0xff7ef490>
     218:	3c 37       	cpi	r19, 0x7C	; 124
     21a:	c2 9e       	mul	r12, r18
     21c:	5a 3d       	cpi	r21, 0xDA	; 218
     21e:	66 04       	cpc	r6, r6
     220:	98 08       	sbc	r9, r8
     222:	3e ea       	ldi	r19, 0xAE	; 174
     224:	69 aa       	std	Y+49, r6	; 0x31
     226:	aa 3e       	cpi	r26, 0xEA	; 234
     228:	00 00       	nop
     22a:	00 80       	ld	r0, Z
     22c:	3f 00       	.word	0x003f	; ????

0000022e <__trampolines_end>:
     22e:	00 40       	sbci	r16, 0x00	; 0
     230:	7a 10       	cpse	r7, r10
     232:	f3 5a       	subi	r31, 0xA3	; 163
     234:	00 a0       	ldd	r0, Z+32	; 0x20
     236:	72 4e       	sbci	r23, 0xE2	; 226
     238:	18 09       	sbc	r17, r8
     23a:	00 10       	cpse	r0, r0
     23c:	a5 d4       	rcall	.+2378   	; 0xb88 <actualizarNumero+0xa0>
     23e:	e8 00       	.word	0x00e8	; ????
     240:	00 e8       	ldi	r16, 0x80	; 128
     242:	76 48       	sbci	r23, 0x86	; 134
     244:	17 00       	.word	0x0017	; ????
     246:	00 e4       	ldi	r16, 0x40	; 64
     248:	0b 54       	subi	r16, 0x4B	; 75
     24a:	02 00       	.word	0x0002	; ????
     24c:	00 ca       	rjmp	.-3072   	; 0xfffff64e <__eeprom_end+0xff7ef64e>
     24e:	9a 3b       	cpi	r25, 0xBA	; 186
     250:	00 00       	nop
     252:	00 e1       	ldi	r16, 0x10	; 16
     254:	f5 05       	cpc	r31, r5
     256:	00 00       	nop
     258:	80 96       	adiw	r24, 0x20	; 32
     25a:	98 00       	.word	0x0098	; ????
     25c:	00 00       	nop
     25e:	40 42       	sbci	r20, 0x20	; 32
     260:	0f 00       	.word	0x000f	; ????
     262:	00 00       	nop
     264:	a0 86       	std	Z+8, r10	; 0x08
     266:	01 00       	.word	0x0001	; ????
     268:	00 00       	nop
     26a:	10 27       	eor	r17, r16
     26c:	00 00       	nop
     26e:	00 00       	nop
     270:	e8 03       	fmulsu	r22, r16
     272:	00 00       	nop
     274:	00 00       	nop
     276:	64 00       	.word	0x0064	; ????
     278:	00 00       	nop
     27a:	00 00       	nop
     27c:	0a 00       	.word	0x000a	; ????
     27e:	00 00       	nop
     280:	00 00       	nop
     282:	01 00       	.word	0x0001	; ????
     284:	00 00       	nop
     286:	00 00       	nop
     288:	2c 76       	andi	r18, 0x6C	; 108
     28a:	d8 88       	ldd	r13, Y+16	; 0x10
     28c:	dc 67       	ori	r29, 0x7C	; 124
     28e:	4f 08       	sbc	r4, r15
     290:	23 df       	rcall	.-442    	; 0xd8 <__SREG__+0x99>
     292:	c1 df       	rcall	.-126    	; 0x216 <__SREG__+0x1d7>
     294:	ae 59       	subi	r26, 0x9E	; 158
     296:	e1 b1       	in	r30, 0x01	; 1
     298:	b7 96       	adiw	r30, 0x27	; 39
     29a:	e5 e3       	ldi	r30, 0x35	; 53
     29c:	e4 53       	subi	r30, 0x34	; 52
     29e:	c6 3a       	cpi	r28, 0xA6	; 166
     2a0:	e6 51       	subi	r30, 0x16	; 22
     2a2:	99 76       	andi	r25, 0x69	; 105
     2a4:	96 e8       	ldi	r25, 0x86	; 134
     2a6:	e6 c2       	rjmp	.+1484   	; 0x874 <floatToString+0x5c>
     2a8:	84 26       	eor	r8, r20
     2aa:	eb 89       	ldd	r30, Y+19	; 0x13
     2ac:	8c 9b       	sbis	0x11, 4	; 17
     2ae:	62 ed       	ldi	r22, 0xD2	; 210
     2b0:	40 7c       	andi	r20, 0xC0	; 192
     2b2:	6f fc       	.word	0xfc6f	; ????
     2b4:	ef bc       	out	0x2f, r14	; 47
     2b6:	9c 9f       	mul	r25, r28
     2b8:	40 f2       	brcs	.-112    	; 0x24a <__trampolines_end+0x1c>
     2ba:	ba a5       	ldd	r27, Y+42	; 0x2a
     2bc:	6f a5       	ldd	r22, Y+47	; 0x2f
     2be:	f4 90       	lpm	r15, Z
     2c0:	05 5a       	subi	r16, 0xA5	; 165
     2c2:	2a f7       	brpl	.-54     	; 0x28e <__trampolines_end+0x60>
     2c4:	5c 93       	st	X, r21
     2c6:	6b 6c       	ori	r22, 0xCB	; 203
     2c8:	f9 67       	ori	r31, 0x79	; 121
     2ca:	6d c1       	rjmp	.+730    	; 0x5a6 <first_grid+0x1a>
     2cc:	1b fc       	.word	0xfc1b	; ????
     2ce:	e0 e4       	ldi	r30, 0x40	; 64
     2d0:	0d 47       	sbci	r16, 0x7D	; 125
     2d2:	fe f5       	brtc	.+126    	; 0x352 <CHARACTERS+0x2a>
     2d4:	20 e6       	ldi	r18, 0x60	; 96
     2d6:	b5 00       	.word	0x00b5	; ????
     2d8:	d0 ed       	ldi	r29, 0xD0	; 208
     2da:	90 2e       	mov	r9, r16
     2dc:	03 00       	.word	0x0003	; ????
     2de:	94 35       	cpi	r25, 0x54	; 84
     2e0:	77 05       	cpc	r23, r7
     2e2:	00 80       	ld	r0, Z
     2e4:	84 1e       	adc	r8, r20
     2e6:	08 00       	.word	0x0008	; ????
     2e8:	00 20       	and	r0, r0
     2ea:	4e 0a       	sbc	r4, r30
     2ec:	00 00       	nop
     2ee:	00 c8       	rjmp	.-4096   	; 0xfffff2f0 <__eeprom_end+0xff7ef2f0>
     2f0:	0c 33       	cpi	r16, 0x3C	; 60
     2f2:	33 33       	cpi	r19, 0x33	; 51
     2f4:	33 0f       	add	r19, r19
     2f6:	98 6e       	ori	r25, 0xE8	; 232
     2f8:	12 83       	std	Z+2, r17	; 0x02
     2fa:	11 41       	sbci	r17, 0x11	; 17
     2fc:	ef 8d       	ldd	r30, Y+31	; 0x1f
     2fe:	21 14       	cp	r2, r1
     300:	89 3b       	cpi	r24, 0xB9	; 185
     302:	e6 55       	subi	r30, 0x56	; 86
     304:	16 cf       	rjmp	.-468    	; 0x132 <__SREG__+0xf3>
     306:	fe e6       	ldi	r31, 0x6E	; 110
     308:	db 18       	sub	r13, r11
     30a:	d1 84       	ldd	r13, Z+9	; 0x09
     30c:	4b 38       	cpi	r20, 0x8B	; 139
     30e:	1b f7       	brvc	.-58     	; 0x2d6 <__trampolines_end+0xa8>
     310:	7c 1d       	adc	r23, r12
     312:	90 1d       	adc	r25, r0
     314:	a4 bb       	out	0x14, r26	; 20
     316:	e4 24       	eor	r14, r4
     318:	20 32       	cpi	r18, 0x20	; 32
     31a:	84 72       	andi	r24, 0x24	; 36
     31c:	5e 22       	and	r5, r30
     31e:	81 00       	.word	0x0081	; ????
     320:	c9 f1       	breq	.+114    	; 0x394 <CHARACTERS+0x6c>
     322:	24 ec       	ldi	r18, 0xC4	; 196
     324:	a1 e5       	ldi	r26, 0x51	; 81
     326:	3d 27       	eor	r19, r29

00000328 <CHARACTERS>:
     328:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     338:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     348:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     358:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     368:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     378:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     388:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     398:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     3a8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     3b8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     3c8:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     3d8:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     3e8:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     3f8:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     408:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     418:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     428:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     438:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     448:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     458:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     468:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     478:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     488:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     498:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     4a8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     4b8:	7c 14 14 14 08 08 14 14 14 7c 7c 08 04 04 08 48     |........||....H
     4c8:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     4d8:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     4e8:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     4f8:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000508 <INIT_ST7735B>:
     508:	0b 01 80 c8 11 80 c8 3a 81 05 0a b1 83 00 06 03     .......:........
     518:	0a 20 80 0a 36 01 a0 b6 02 15 02 b4 01 00 e0 10     . ..6...........
     528:	09 16 09 20 21 1b 13 19 17 15 1e 2b 04 05 02 0e     ... !......+....
     538:	e1 90 0b 14 08 1e 22 1d 18 1e 1b 1a 24 2b 06 06     ......".....$+..
     548:	02 0f 0a 13 80 0a                                   ......

0000054e <__ctors_end>:
     54e:	11 24       	eor	r1, r1
     550:	1f be       	out	0x3f, r1	; 63
     552:	cf ef       	ldi	r28, 0xFF	; 255
     554:	d8 e0       	ldi	r29, 0x08	; 8
     556:	de bf       	out	0x3e, r29	; 62
     558:	cd bf       	out	0x3d, r28	; 61

0000055a <__do_copy_data>:
     55a:	11 e0       	ldi	r17, 0x01	; 1
     55c:	a0 e0       	ldi	r26, 0x00	; 0
     55e:	b1 e0       	ldi	r27, 0x01	; 1
     560:	ea ef       	ldi	r30, 0xFA	; 250
     562:	ff e3       	ldi	r31, 0x3F	; 63
     564:	02 c0       	rjmp	.+4      	; 0x56a <__do_copy_data+0x10>
     566:	05 90       	lpm	r0, Z+
     568:	0d 92       	st	X+, r0
     56a:	ac 36       	cpi	r26, 0x6C	; 108
     56c:	b1 07       	cpc	r27, r17
     56e:	d9 f7       	brne	.-10     	; 0x566 <__do_copy_data+0xc>

00000570 <__do_clear_bss>:
     570:	21 e0       	ldi	r18, 0x01	; 1
     572:	ac e6       	ldi	r26, 0x6C	; 108
     574:	b1 e0       	ldi	r27, 0x01	; 1
     576:	01 c0       	rjmp	.+2      	; 0x57a <.do_clear_bss_start>

00000578 <.do_clear_bss_loop>:
     578:	1d 92       	st	X+, r1

0000057a <.do_clear_bss_start>:
     57a:	a3 3d       	cpi	r26, 0xD3	; 211
     57c:	b2 07       	cpc	r27, r18
     57e:	e1 f7       	brne	.-8      	; 0x578 <.do_clear_bss_loop>
     580:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <main>
     584:	0c 94 fb 1f 	jmp	0x3ff6	; 0x3ff6 <_exit>

00000588 <__bad_interrupt>:
     588:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000058c <first_grid>:
char old_string2[10];
char old_string3[10];
char old_string4;

//recibe numero y lo pone en el cuadrante 1
void first_grid(char letter[10]){
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	ec 01       	movw	r28, r24
	int i;
	if (letter=='a'){
     592:	81 36       	cpi	r24, 0x61	; 97
     594:	91 05       	cpc	r25, r1
     596:	61 f4       	brne	.+24     	; 0x5b0 <first_grid+0x24>
		SetPosition(35, 25);
     598:	69 e1       	ldi	r22, 0x19	; 25
     59a:	83 e2       	ldi	r24, 0x23	; 35
     59c:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string1, 0xffff, X2);
     5a0:	41 e0       	ldi	r20, 0x01	; 1
     5a2:	6f ef       	ldi	r22, 0xFF	; 255
     5a4:	7f ef       	ldi	r23, 0xFF	; 255
     5a6:	88 ec       	ldi	r24, 0xC8	; 200
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     5ae:	20 c0       	rjmp	.+64     	; 0x5f0 <first_grid+0x64>
	}
	else{
		SetPosition(35, 25);
     5b0:	69 e1       	ldi	r22, 0x19	; 25
     5b2:	83 e2       	ldi	r24, 0x23	; 35
     5b4:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string1, 0xffff, X2);
     5b8:	41 e0       	ldi	r20, 0x01	; 1
     5ba:	6f ef       	ldi	r22, 0xFF	; 255
     5bc:	7f ef       	ldi	r23, 0xFF	; 255
     5be:	88 ec       	ldi	r24, 0xC8	; 200
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     5c6:	de 01       	movw	r26, r28
     5c8:	e8 ec       	ldi	r30, 0xC8	; 200
     5ca:	f1 e0       	ldi	r31, 0x01	; 1
     5cc:	22 ed       	ldi	r18, 0xD2	; 210
     5ce:	31 e0       	ldi	r19, 0x01	; 1
		for(i=0; i<10; i++){
		old_string1[i] = letter[i];
     5d0:	8d 91       	ld	r24, X+
     5d2:	81 93       	st	Z+, r24
		DrawString(old_string1, 0xffff, X2);
	}
	else{
		SetPosition(35, 25);
		DrawString(old_string1, 0xffff, X2);
		for(i=0; i<10; i++){
     5d4:	e2 17       	cp	r30, r18
     5d6:	f3 07       	cpc	r31, r19
     5d8:	d9 f7       	brne	.-10     	; 0x5d0 <first_grid+0x44>
		old_string1[i] = letter[i];
		}
		SetPosition(35, 25);
     5da:	69 e1       	ldi	r22, 0x19	; 25
     5dc:	83 e2       	ldi	r24, 0x23	; 35
     5de:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string1, 0x0000, X2);
     5e2:	41 e0       	ldi	r20, 0x01	; 1
     5e4:	60 e0       	ldi	r22, 0x00	; 0
     5e6:	70 e0       	ldi	r23, 0x00	; 0
     5e8:	88 ec       	ldi	r24, 0xC8	; 200
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
	}
}
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	08 95       	ret

000005f6 <second_grid>:



void second_grid(char letter[10]){
     5f6:	cf 93       	push	r28
     5f8:	df 93       	push	r29
     5fa:	ec 01       	movw	r28, r24
	int i;
	if (letter=='a'){
     5fc:	81 36       	cpi	r24, 0x61	; 97
     5fe:	91 05       	cpc	r25, r1
     600:	a9 f4       	brne	.+42     	; 0x62c <second_grid+0x36>
		SetPosition(35, 45);
     602:	6d e2       	ldi	r22, 0x2D	; 45
     604:	83 e2       	ldi	r24, 0x23	; 35
     606:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string2, 0xffff, X2);
     60a:	41 e0       	ldi	r20, 0x01	; 1
     60c:	6f ef       	ldi	r22, 0xFF	; 255
     60e:	7f ef       	ldi	r23, 0xFF	; 255
     610:	84 eb       	ldi	r24, 0xB4	; 180
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     618:	e4 eb       	ldi	r30, 0xB4	; 180
     61a:	f1 e0       	ldi	r31, 0x01	; 1
     61c:	2e eb       	ldi	r18, 0xBE	; 190
     61e:	31 e0       	ldi	r19, 0x01	; 1
		for(i=0; i<10; i++){
			old_string2[i] = ' ';
     620:	80 e2       	ldi	r24, 0x20	; 32
     622:	81 93       	st	Z+, r24
void second_grid(char letter[10]){
	int i;
	if (letter=='a'){
		SetPosition(35, 45);
		DrawString(old_string2, 0xffff, X2);
		for(i=0; i<10; i++){
     624:	e2 17       	cp	r30, r18
     626:	f3 07       	cpc	r31, r19
     628:	e1 f7       	brne	.-8      	; 0x622 <second_grid+0x2c>
     62a:	20 c0       	rjmp	.+64     	; 0x66c <second_grid+0x76>
			old_string2[i] = ' ';
		}
	}
	else{
		SetPosition(35, 45);
     62c:	6d e2       	ldi	r22, 0x2D	; 45
     62e:	83 e2       	ldi	r24, 0x23	; 35
     630:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string2, 0xffff, X2);
     634:	41 e0       	ldi	r20, 0x01	; 1
     636:	6f ef       	ldi	r22, 0xFF	; 255
     638:	7f ef       	ldi	r23, 0xFF	; 255
     63a:	84 eb       	ldi	r24, 0xB4	; 180
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     642:	de 01       	movw	r26, r28
     644:	e4 eb       	ldi	r30, 0xB4	; 180
     646:	f1 e0       	ldi	r31, 0x01	; 1
     648:	2e eb       	ldi	r18, 0xBE	; 190
     64a:	31 e0       	ldi	r19, 0x01	; 1
		for(i=0; i<10; i++){
			old_string2[i] = letter[i];
     64c:	8d 91       	ld	r24, X+
     64e:	81 93       	st	Z+, r24
		}
	}
	else{
		SetPosition(35, 45);
		DrawString(old_string2, 0xffff, X2);
		for(i=0; i<10; i++){
     650:	e2 17       	cp	r30, r18
     652:	f3 07       	cpc	r31, r19
     654:	d9 f7       	brne	.-10     	; 0x64c <second_grid+0x56>
			old_string2[i] = letter[i];
		}
		SetPosition(35, 45);
     656:	6d e2       	ldi	r22, 0x2D	; 45
     658:	83 e2       	ldi	r24, 0x23	; 35
     65a:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string2, 0x0000, X2);
     65e:	41 e0       	ldi	r20, 0x01	; 1
     660:	60 e0       	ldi	r22, 0x00	; 0
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	84 eb       	ldi	r24, 0xB4	; 180
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
	}
}
     66c:	df 91       	pop	r29
     66e:	cf 91       	pop	r28
     670:	08 95       	ret

00000672 <thrid_grid>:

void thrid_grid(char letter[10]){
     672:	cf 93       	push	r28
     674:	df 93       	push	r29
     676:	ec 01       	movw	r28, r24
	int i;
	if (letter=='a'){
     678:	81 36       	cpi	r24, 0x61	; 97
     67a:	91 05       	cpc	r25, r1
     67c:	a9 f4       	brne	.+42     	; 0x6a8 <thrid_grid+0x36>
		SetPosition(35, 65);
     67e:	61 e4       	ldi	r22, 0x41	; 65
     680:	83 e2       	ldi	r24, 0x23	; 35
     682:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string3, 0xffff, X2);		
     686:	41 e0       	ldi	r20, 0x01	; 1
     688:	6f ef       	ldi	r22, 0xFF	; 255
     68a:	7f ef       	ldi	r23, 0xFF	; 255
     68c:	8e eb       	ldi	r24, 0xBE	; 190
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     694:	ee eb       	ldi	r30, 0xBE	; 190
     696:	f1 e0       	ldi	r31, 0x01	; 1
     698:	28 ec       	ldi	r18, 0xC8	; 200
     69a:	31 e0       	ldi	r19, 0x01	; 1
		for(i=0; i<10; i++){
			old_string3[i] = ' ';
     69c:	80 e2       	ldi	r24, 0x20	; 32
     69e:	81 93       	st	Z+, r24
void thrid_grid(char letter[10]){
	int i;
	if (letter=='a'){
		SetPosition(35, 65);
		DrawString(old_string3, 0xffff, X2);		
		for(i=0; i<10; i++){
     6a0:	e2 17       	cp	r30, r18
     6a2:	f3 07       	cpc	r31, r19
     6a4:	e1 f7       	brne	.-8      	; 0x69e <thrid_grid+0x2c>
     6a6:	20 c0       	rjmp	.+64     	; 0x6e8 <thrid_grid+0x76>
			old_string3[i] = ' ';
		}
	}
	else{
		SetPosition(35, 65);
     6a8:	61 e4       	ldi	r22, 0x41	; 65
     6aa:	83 e2       	ldi	r24, 0x23	; 35
     6ac:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string3, 0xffff, X2);
     6b0:	41 e0       	ldi	r20, 0x01	; 1
     6b2:	6f ef       	ldi	r22, 0xFF	; 255
     6b4:	7f ef       	ldi	r23, 0xFF	; 255
     6b6:	8e eb       	ldi	r24, 0xBE	; 190
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
     6be:	de 01       	movw	r26, r28
     6c0:	ee eb       	ldi	r30, 0xBE	; 190
     6c2:	f1 e0       	ldi	r31, 0x01	; 1
     6c4:	28 ec       	ldi	r18, 0xC8	; 200
     6c6:	31 e0       	ldi	r19, 0x01	; 1
		for(i=0; i<10; i++){
			old_string3[i] = letter[i];
     6c8:	8d 91       	ld	r24, X+
     6ca:	81 93       	st	Z+, r24
		}
	}
	else{
		SetPosition(35, 65);
		DrawString(old_string3, 0xffff, X2);
		for(i=0; i<10; i++){
     6cc:	e2 17       	cp	r30, r18
     6ce:	f3 07       	cpc	r31, r19
     6d0:	d9 f7       	brne	.-10     	; 0x6c8 <thrid_grid+0x56>
			old_string3[i] = letter[i];
		}
		SetPosition(35, 65);
     6d2:	61 e4       	ldi	r22, 0x41	; 65
     6d4:	83 e2       	ldi	r24, 0x23	; 35
     6d6:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
		DrawString(old_string3, 0x0000, X2);
     6da:	41 e0       	ldi	r20, 0x01	; 1
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	70 e0       	ldi	r23, 0x00	; 0
     6e0:	8e eb       	ldi	r24, 0xBE	; 190
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
	}
}
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	08 95       	ret

000006ee <__vector_7>:
	else{
		tdeb = tref;
	}
}

ISR(TIMER2_COMPA_vect) { //timer cada 1ms
     6ee:	1f 92       	push	r1
     6f0:	0f 92       	push	r0
     6f2:	0f b6       	in	r0, 0x3f	; 63
     6f4:	0f 92       	push	r0
     6f6:	11 24       	eor	r1, r1
     6f8:	2f 93       	push	r18
     6fa:	3f 93       	push	r19
     6fc:	8f 93       	push	r24
     6fe:	9f 93       	push	r25
	if (tdeb > 0)
     700:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     704:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     708:	18 16       	cp	r1, r24
     70a:	19 06       	cpc	r1, r25
     70c:	34 f4       	brge	.+12     	; 0x71a <__vector_7+0x2c>
	{
		tdeb--;
     70e:	01 97       	sbiw	r24, 0x01	; 1
     710:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     714:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     718:	04 c0       	rjmp	.+8      	; 0x722 <__vector_7+0x34>
	}
	else{
		deb = 0;
     71a:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <deb+0x1>
     71e:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <deb>
	}
	t++;
     722:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <__data_end>
     726:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <__data_end+0x1>
     72a:	01 96       	adiw	r24, 0x01	; 1
     72c:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <__data_end+0x1>
     730:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <__data_end>
	if (t == 8)
     734:	88 30       	cpi	r24, 0x08	; 8
     736:	91 05       	cpc	r25, r1
     738:	29 f4       	brne	.+10     	; 0x744 <__vector_7+0x56>
	{
		t = 0;
     73a:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <__data_end+0x1>
     73e:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <__data_end>
     742:	1c c0       	rjmp	.+56     	; 0x77c <__vector_7+0x8e>
	}
	//barrido
	if((t == 1)||(t == 3)||(t == 5)||(t == 7))	{ neutro }
     744:	9c 01       	movw	r18, r24
     746:	2d 7f       	andi	r18, 0xFD	; 253
     748:	21 30       	cpi	r18, 0x01	; 1
     74a:	31 05       	cpc	r19, r1
     74c:	19 f0       	breq	.+6      	; 0x754 <__vector_7+0x66>
     74e:	25 30       	cpi	r18, 0x05	; 5
     750:	31 05       	cpc	r19, r1
     752:	39 f4       	brne	.+14     	; 0x762 <__vector_7+0x74>
     754:	88 b1       	in	r24, 0x08	; 8
     756:	83 60       	ori	r24, 0x03	; 3
     758:	88 b9       	out	0x08, r24	; 8
     75a:	8b b1       	in	r24, 0x0b	; 11
     75c:	8c 60       	ori	r24, 0x0C	; 12
     75e:	8b b9       	out	0x0b, r24	; 11
     760:	2a c0       	rjmp	.+84     	; 0x7b6 <__vector_7+0xc8>
	else{
		switch(t){
     762:	82 30       	cpi	r24, 0x02	; 2
     764:	91 05       	cpc	r25, r1
     766:	81 f0       	breq	.+32     	; 0x788 <__vector_7+0x9a>
     768:	1c f4       	brge	.+6      	; 0x770 <__vector_7+0x82>
     76a:	89 2b       	or	r24, r25
     76c:	21 f5       	brne	.+72     	; 0x7b6 <__vector_7+0xc8>
     76e:	06 c0       	rjmp	.+12     	; 0x77c <__vector_7+0x8e>
     770:	84 30       	cpi	r24, 0x04	; 4
     772:	91 05       	cpc	r25, r1
     774:	89 f0       	breq	.+34     	; 0x798 <__vector_7+0xaa>
     776:	06 97       	sbiw	r24, 0x06	; 6
     778:	b9 f0       	breq	.+46     	; 0x7a8 <__vector_7+0xba>
     77a:	1d c0       	rjmp	.+58     	; 0x7b6 <__vector_7+0xc8>
			case 0: p1 break;
     77c:	40 98       	cbi	0x08, 0	; 8
     77e:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <linea+0x1>
     782:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <linea>
     786:	17 c0       	rjmp	.+46     	; 0x7b6 <__vector_7+0xc8>
			case 2: p2 break;
     788:	41 98       	cbi	0x08, 1	; 8
     78a:	88 e0       	ldi	r24, 0x08	; 8
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <linea+0x1>
     792:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <linea>
     796:	0f c0       	rjmp	.+30     	; 0x7b6 <__vector_7+0xc8>
			case 4: p3 break;
     798:	5a 98       	cbi	0x0b, 2	; 11
     79a:	80 e1       	ldi	r24, 0x10	; 16
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <linea+0x1>
     7a2:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <linea>
     7a6:	07 c0       	rjmp	.+14     	; 0x7b6 <__vector_7+0xc8>
			case 6: p4 break;
     7a8:	5b 98       	cbi	0x0b, 3	; 11
     7aa:	88 e1       	ldi	r24, 0x18	; 24
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <linea+0x1>
     7b2:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <linea>
		}
	}
}
     7b6:	9f 91       	pop	r25
     7b8:	8f 91       	pop	r24
     7ba:	3f 91       	pop	r19
     7bc:	2f 91       	pop	r18
     7be:	0f 90       	pop	r0
     7c0:	0f be       	out	0x3f, r0	; 63
     7c2:	0f 90       	pop	r0
     7c4:	1f 90       	pop	r1
     7c6:	18 95       	reti

000007c8 <main>:

int main(void)
{
	St7735Init();
     7c8:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <St7735Init>
	UpdateScreen();
     7cc:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <UpdateScreen>
	tecladoInit();
     7d0:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <tecladoInit>
	USART_Init(MYUBRR);
     7d4:	80 e1       	ldi	r24, 0x10	; 16
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	0e 94 40 16 	call	0x2c80	; 0x2c80 <USART_Init>
	USART_Transmit_String("HOLA");	
     7dc:	85 e2       	ldi	r24, 0x25	; 37
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	0e 94 31 16 	call	0x2c62	; 0x2c62 <USART_Transmit_String>
	sei();
     7e4:	78 94       	sei
		
	SetPosition(25, 55);
     7e6:	67 e3       	ldi	r22, 0x37	; 55
     7e8:	89 e1       	ldi	r24, 0x19	; 25
     7ea:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
	DrawString("Inicio programa", 0x0000, X2);
     7ee:	41 e0       	ldi	r20, 0x01	; 1
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	70 e0       	ldi	r23, 0x00	; 0
     7f4:	8a e2       	ldi	r24, 0x2A	; 42
     7f6:	91 e0       	ldi	r25, 0x01	; 1
     7f8:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <DrawString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7fc:	2f e7       	ldi	r18, 0x7F	; 127
     7fe:	84 e8       	ldi	r24, 0x84	; 132
     800:	9e e1       	ldi	r25, 0x1E	; 30
     802:	21 50       	subi	r18, 0x01	; 1
     804:	80 40       	sbci	r24, 0x00	; 0
     806:	90 40       	sbci	r25, 0x00	; 0
     808:	e1 f7       	brne	.-8      	; 0x802 <main+0x3a>
     80a:	00 c0       	rjmp	.+0      	; 0x80c <main+0x44>
     80c:	00 00       	nop
	_delay_ms(10000);
	ClearScreen(0xffff);	
     80e:	8f ef       	ldi	r24, 0xFF	; 255
     810:	9f ef       	ldi	r25, 0xFF	; 255
     812:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <ClearScreen>
     816:	ff cf       	rjmp	.-2      	; 0x816 <main+0x4e>

00000818 <floatToString>:
	//fourth_grid(pantalla3);
	}
}

void floatToString(float numero, char* str) //recibe un float y el string donde guardar
{
     818:	cf 92       	push	r12
     81a:	df 92       	push	r13
     81c:	ef 92       	push	r14
     81e:	ff 92       	push	r15
     820:	0f 93       	push	r16
     822:	1f 93       	push	r17
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	6b 01       	movw	r12, r22
     82a:	7c 01       	movw	r14, r24
     82c:	8a 01       	movw	r16, r20
	int decimales = 0;
	if((numero > 9999999) || (numero < -9999999)) //mas de 7 digitos
     82e:	2f e7       	ldi	r18, 0x7F	; 127
     830:	36 e9       	ldi	r19, 0x96	; 150
     832:	48 e1       	ldi	r20, 0x18	; 24
     834:	5b e4       	ldi	r21, 0x4B	; 75
     836:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     83a:	18 16       	cp	r1, r24
     83c:	54 f0       	brlt	.+20     	; 0x852 <floatToString+0x3a>
     83e:	2f e7       	ldi	r18, 0x7F	; 127
     840:	36 e9       	ldi	r19, 0x96	; 150
     842:	48 e1       	ldi	r20, 0x18	; 24
     844:	5b ec       	ldi	r21, 0xCB	; 203
     846:	c7 01       	movw	r24, r14
     848:	b6 01       	movw	r22, r12
     84a:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     84e:	88 23       	and	r24, r24
     850:	7c f4       	brge	.+30     	; 0x870 <floatToString+0x58>
	{
		strcpy(str,"       ovf");
     852:	8b e0       	ldi	r24, 0x0B	; 11
     854:	ea e3       	ldi	r30, 0x3A	; 58
     856:	f1 e0       	ldi	r31, 0x01	; 1
     858:	d8 01       	movw	r26, r16
     85a:	01 90       	ld	r0, Z+
     85c:	0d 92       	st	X+, r0
     85e:	8a 95       	dec	r24
     860:	e1 f7       	brne	.-8      	; 0x85a <floatToString+0x42>
		ovfe = 1;
     862:	81 e0       	ldi	r24, 0x01	; 1
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <ovfe+0x1>
     86a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <ovfe>
     86e:	a7 c0       	rjmp	.+334    	; 0x9be <__stack+0xbf>
	}
	else if (numero >= 0) //positivos
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	a9 01       	movw	r20, r18
     876:	c7 01       	movw	r24, r14
     878:	b6 01       	movw	r22, r12
     87a:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     87e:	88 23       	and	r24, r24
     880:	0c f4       	brge	.+2      	; 0x884 <floatToString+0x6c>
     882:	4a c0       	rjmp	.+148    	; 0x918 <__stack+0x19>
	{
		if     (numero <     10) {decimales = 5;}
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	40 e2       	ldi	r20, 0x20	; 32
     88a:	51 e4       	ldi	r21, 0x41	; 65
     88c:	c7 01       	movw	r24, r14
     88e:	b6 01       	movw	r22, r12
     890:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     894:	88 23       	and	r24, r24
     896:	74 f1       	brlt	.+92     	; 0x8f4 <floatToString+0xdc>
		else if(numero <    100) {decimales = 4;}
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	48 ec       	ldi	r20, 0xC8	; 200
     89e:	52 e4       	ldi	r21, 0x42	; 66
     8a0:	c7 01       	movw	r24, r14
     8a2:	b6 01       	movw	r22, r12
     8a4:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     8a8:	88 23       	and	r24, r24
     8aa:	3c f1       	brlt	.+78     	; 0x8fa <floatToString+0xe2>
		else if(numero <   1000) {decimales = 3;}
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	4a e7       	ldi	r20, 0x7A	; 122
     8b2:	54 e4       	ldi	r21, 0x44	; 68
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     8bc:	88 23       	and	r24, r24
     8be:	04 f1       	brlt	.+64     	; 0x900 <__stack+0x1>
		else if(numero <  10000) {decimales = 2;}
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e4       	ldi	r19, 0x40	; 64
     8c4:	4c e1       	ldi	r20, 0x1C	; 28
     8c6:	56 e4       	ldi	r21, 0x46	; 70
     8c8:	c7 01       	movw	r24, r14
     8ca:	b6 01       	movw	r22, r12
     8cc:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     8d0:	88 23       	and	r24, r24
     8d2:	cc f0       	brlt	.+50     	; 0x906 <__stack+0x7>
		strcpy(str,"       ovf");
		ovfe = 1;
	}
	else if (numero >= 0) //positivos
	{
		if     (numero <     10) {decimales = 5;}
     8d4:	d1 e0       	ldi	r29, 0x01	; 1
     8d6:	c0 e0       	ldi	r28, 0x00	; 0
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e5       	ldi	r19, 0x50	; 80
     8dc:	43 ec       	ldi	r20, 0xC3	; 195
     8de:	57 e4       	ldi	r21, 0x47	; 71
     8e0:	c7 01       	movw	r24, r14
     8e2:	b6 01       	movw	r22, r12
     8e4:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     8e8:	88 23       	and	r24, r24
     8ea:	0c f0       	brlt	.+2      	; 0x8ee <floatToString+0xd6>
     8ec:	d0 e0       	ldi	r29, 0x00	; 0
     8ee:	2d 2f       	mov	r18, r29
     8f0:	3c 2f       	mov	r19, r28
     8f2:	0b c0       	rjmp	.+22     	; 0x90a <__stack+0xb>
     8f4:	25 e0       	ldi	r18, 0x05	; 5
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	08 c0       	rjmp	.+16     	; 0x90a <__stack+0xb>
		else if(numero <    100) {decimales = 4;}
     8fa:	24 e0       	ldi	r18, 0x04	; 4
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	05 c0       	rjmp	.+10     	; 0x90a <__stack+0xb>
		else if(numero <   1000) {decimales = 3;}
     900:	23 e0       	ldi	r18, 0x03	; 3
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0xb>
		else if(numero <  10000) {decimales = 2;}
     906:	22 e0       	ldi	r18, 0x02	; 2
     908:	30 e0       	ldi	r19, 0x00	; 0
		else if(numero < 100000) {decimales = 1;}
		dtostrf(numero,10, decimales, str);
     90a:	4a e0       	ldi	r20, 0x0A	; 10
     90c:	50 e0       	ldi	r21, 0x00	; 0
     90e:	c7 01       	movw	r24, r14
     910:	b6 01       	movw	r22, r12
     912:	0e 94 b8 1a 	call	0x3570	; 0x3570 <dtostrf>
     916:	53 c0       	rjmp	.+166    	; 0x9be <__stack+0xbf>
	}
	else if (numero < 0)  //negativos
     918:	20 e0       	ldi	r18, 0x00	; 0
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	a9 01       	movw	r20, r18
     91e:	c7 01       	movw	r24, r14
     920:	b6 01       	movw	r22, r12
     922:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__cmpsf2>
     926:	88 23       	and	r24, r24
     928:	0c f0       	brlt	.+2      	; 0x92c <__stack+0x2d>
     92a:	49 c0       	rjmp	.+146    	; 0x9be <__stack+0xbf>
	{
		if     (numero >    -10) {decimales = 5;}
     92c:	20 e0       	ldi	r18, 0x00	; 0
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	40 e2       	ldi	r20, 0x20	; 32
     932:	51 ec       	ldi	r21, 0xC1	; 193
     934:	c7 01       	movw	r24, r14
     936:	b6 01       	movw	r22, r12
     938:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     93c:	18 16       	cp	r1, r24
     93e:	74 f1       	brlt	.+92     	; 0x99c <__stack+0x9d>
		else if(numero >   -100) {decimales = 4;}
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	48 ec       	ldi	r20, 0xC8	; 200
     946:	52 ec       	ldi	r21, 0xC2	; 194
     948:	c7 01       	movw	r24, r14
     94a:	b6 01       	movw	r22, r12
     94c:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     950:	18 16       	cp	r1, r24
     952:	3c f1       	brlt	.+78     	; 0x9a2 <__stack+0xa3>
		else if(numero >  -1000) {decimales = 3;}
     954:	20 e0       	ldi	r18, 0x00	; 0
     956:	30 e0       	ldi	r19, 0x00	; 0
     958:	4a e7       	ldi	r20, 0x7A	; 122
     95a:	54 ec       	ldi	r21, 0xC4	; 196
     95c:	c7 01       	movw	r24, r14
     95e:	b6 01       	movw	r22, r12
     960:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     964:	18 16       	cp	r1, r24
     966:	04 f1       	brlt	.+64     	; 0x9a8 <__stack+0xa9>
		else if(numero > -10000) {decimales = 2;}
     968:	20 e0       	ldi	r18, 0x00	; 0
     96a:	30 e4       	ldi	r19, 0x40	; 64
     96c:	4c e1       	ldi	r20, 0x1C	; 28
     96e:	56 ec       	ldi	r21, 0xC6	; 198
     970:	c7 01       	movw	r24, r14
     972:	b6 01       	movw	r22, r12
     974:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     978:	18 16       	cp	r1, r24
     97a:	cc f0       	brlt	.+50     	; 0x9ae <__stack+0xaf>
		else if(numero < 100000) {decimales = 1;}
		dtostrf(numero,10, decimales, str);
	}
	else if (numero < 0)  //negativos
	{
		if     (numero >    -10) {decimales = 5;}
     97c:	d1 e0       	ldi	r29, 0x01	; 1
     97e:	c0 e0       	ldi	r28, 0x00	; 0
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e5       	ldi	r19, 0x50	; 80
     984:	43 ec       	ldi	r20, 0xC3	; 195
     986:	57 ec       	ldi	r21, 0xC7	; 199
     988:	c7 01       	movw	r24, r14
     98a:	b6 01       	movw	r22, r12
     98c:	0e 94 86 18 	call	0x310c	; 0x310c <__gesf2>
     990:	18 16       	cp	r1, r24
     992:	0c f0       	brlt	.+2      	; 0x996 <__stack+0x97>
     994:	d0 e0       	ldi	r29, 0x00	; 0
     996:	2d 2f       	mov	r18, r29
     998:	3c 2f       	mov	r19, r28
     99a:	0b c0       	rjmp	.+22     	; 0x9b2 <__stack+0xb3>
     99c:	25 e0       	ldi	r18, 0x05	; 5
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	08 c0       	rjmp	.+16     	; 0x9b2 <__stack+0xb3>
		else if(numero >   -100) {decimales = 4;}
     9a2:	24 e0       	ldi	r18, 0x04	; 4
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	05 c0       	rjmp	.+10     	; 0x9b2 <__stack+0xb3>
		else if(numero >  -1000) {decimales = 3;}
     9a8:	23 e0       	ldi	r18, 0x03	; 3
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <__stack+0xb3>
		else if(numero > -10000) {decimales = 2;}
     9ae:	22 e0       	ldi	r18, 0x02	; 2
     9b0:	30 e0       	ldi	r19, 0x00	; 0
		else if(numero >-100000) {decimales = 1;}
		dtostrf(numero,10, decimales, str);
     9b2:	4a e0       	ldi	r20, 0x0A	; 10
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	c7 01       	movw	r24, r14
     9b8:	b6 01       	movw	r22, r12
     9ba:	0e 94 b8 1a 	call	0x3570	; 0x3570 <dtostrf>
	}
}
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	ff 90       	pop	r15
     9c8:	ef 90       	pop	r14
     9ca:	df 90       	pop	r13
     9cc:	cf 90       	pop	r12
     9ce:	08 95       	ret

000009d0 <mostrar>:

//a partir de aca -> esto va en avr
void mostrar(int posicion)
{
	int ver = 1;
	switch(posicion)
     9d0:	87 30       	cpi	r24, 0x07	; 7
     9d2:	91 05       	cpc	r25, r1
     9d4:	08 f0       	brcs	.+2      	; 0x9d8 <mostrar+0x8>
     9d6:	7b c0       	rjmp	.+246    	; 0xace <mostrar+0xfe>
     9d8:	fc 01       	movw	r30, r24
     9da:	ec 5c       	subi	r30, 0xCC	; 204
     9dc:	ff 4f       	sbci	r31, 0xFF	; 255
     9de:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
	{
		case 1: strcpy(pantalla1,floatToString(N1,salida)); break;
     9e2:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
     9e6:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
     9ea:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
     9ee:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
     9f2:	42 e9       	ldi	r20, 0x92	; 146
     9f4:	51 e0       	ldi	r21, 0x01	; 1
     9f6:	0e 94 0c 04 	call	0x818	; 0x818 <floatToString>
     9fa:	bc 01       	movw	r22, r24
     9fc:	88 e8       	ldi	r24, 0x88	; 136
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	0e 94 d8 1a 	call	0x35b0	; 0x35b0 <strcpy>
     a04:	64 c0       	rjmp	.+200    	; 0xace <mostrar+0xfe>
		case 3: pantalla3 = operador; break;
     a06:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <operador>
     a0a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <pantalla3>
     a0e:	5f c0       	rjmp	.+190    	; 0xace <mostrar+0xfe>
		case 2: strcpy(pantalla2,floatToString(N2,salida)); break;
     a10:	60 91 a8 01 	lds	r22, 0x01A8	; 0x8001a8 <N2>
     a14:	70 91 a9 01 	lds	r23, 0x01A9	; 0x8001a9 <N2+0x1>
     a18:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <N2+0x2>
     a1c:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <N2+0x3>
     a20:	42 e9       	ldi	r20, 0x92	; 146
     a22:	51 e0       	ldi	r21, 0x01	; 1
     a24:	0e 94 0c 04 	call	0x818	; 0x818 <floatToString>
     a28:	bc 01       	movw	r22, r24
     a2a:	8e e7       	ldi	r24, 0x7E	; 126
     a2c:	91 e0       	ldi	r25, 0x01	; 1
     a2e:	0e 94 d8 1a 	call	0x35b0	; 0x35b0 <strcpy>
     a32:	4d c0       	rjmp	.+154    	; 0xace <mostrar+0xfe>
		case 4: strcpy(pantalla4,floatToString(N1,salida)); break;
     a34:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
     a38:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
     a3c:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
     a40:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
     a44:	42 e9       	ldi	r20, 0x92	; 146
     a46:	51 e0       	ldi	r21, 0x01	; 1
     a48:	0e 94 0c 04 	call	0x818	; 0x818 <floatToString>
     a4c:	bc 01       	movw	r22, r24
     a4e:	84 e7       	ldi	r24, 0x74	; 116
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	0e 94 d8 1a 	call	0x35b0	; 0x35b0 <strcpy>
     a56:	3b c0       	rjmp	.+118    	; 0xace <mostrar+0xfe>
		case 0: //limpiamos //0 limpia la pantalla!
		strcpy(pantalla1,"         ");
     a58:	8a e0       	ldi	r24, 0x0A	; 10
     a5a:	ea e5       	ldi	r30, 0x5A	; 90
     a5c:	f1 e0       	ldi	r31, 0x01	; 1
     a5e:	a8 e8       	ldi	r26, 0x88	; 136
     a60:	b1 e0       	ldi	r27, 0x01	; 1
     a62:	01 90       	ld	r0, Z+
     a64:	0d 92       	st	X+, r0
     a66:	8a 95       	dec	r24
     a68:	e1 f7       	brne	.-8      	; 0xa62 <mostrar+0x92>
		strcpy(pantalla2,"         ");
     a6a:	8a e0       	ldi	r24, 0x0A	; 10
     a6c:	ea e5       	ldi	r30, 0x5A	; 90
     a6e:	f1 e0       	ldi	r31, 0x01	; 1
     a70:	ae e7       	ldi	r26, 0x7E	; 126
     a72:	b1 e0       	ldi	r27, 0x01	; 1
     a74:	01 90       	ld	r0, Z+
     a76:	0d 92       	st	X+, r0
     a78:	8a 95       	dec	r24
     a7a:	e1 f7       	brne	.-8      	; 0xa74 <mostrar+0xa4>
		pantalla3 = ' ';
     a7c:	80 e2       	ldi	r24, 0x20	; 32
     a7e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <pantalla3>
		strcpy(pantalla4,"         ");
     a82:	8a e0       	ldi	r24, 0x0A	; 10
     a84:	ea e5       	ldi	r30, 0x5A	; 90
     a86:	f1 e0       	ldi	r31, 0x01	; 1
     a88:	a4 e7       	ldi	r26, 0x74	; 116
     a8a:	b1 e0       	ldi	r27, 0x01	; 1
     a8c:	01 90       	ld	r0, Z+
     a8e:	0d 92       	st	X+, r0
     a90:	8a 95       	dec	r24
     a92:	e1 f7       	brne	.-8      	; 0xa8c <mostrar+0xbc>
     a94:	08 95       	ret
		ver = 0; break;
		case 5: //pantalla negra
		strcpy(pantalla1,"pantalla");
     a96:	89 e0       	ldi	r24, 0x09	; 9
     a98:	e5 e4       	ldi	r30, 0x45	; 69
     a9a:	f1 e0       	ldi	r31, 0x01	; 1
     a9c:	a8 e8       	ldi	r26, 0x88	; 136
     a9e:	b1 e0       	ldi	r27, 0x01	; 1
     aa0:	01 90       	ld	r0, Z+
     aa2:	0d 92       	st	X+, r0
     aa4:	8a 95       	dec	r24
     aa6:	e1 f7       	brne	.-8      	; 0xaa0 <mostrar+0xd0>
		strcpy(pantalla1,"negra");
     aa8:	86 e0       	ldi	r24, 0x06	; 6
     aaa:	ee e4       	ldi	r30, 0x4E	; 78
     aac:	f1 e0       	ldi	r31, 0x01	; 1
     aae:	a8 e8       	ldi	r26, 0x88	; 136
     ab0:	b1 e0       	ldi	r27, 0x01	; 1
     ab2:	01 90       	ld	r0, Z+
     ab4:	0d 92       	st	X+, r0
     ab6:	8a 95       	dec	r24
     ab8:	e1 f7       	brne	.-8      	; 0xab2 <mostrar+0xe2>
		break;
     aba:	09 c0       	rjmp	.+18     	; 0xace <mostrar+0xfe>
		case 6: //error
		strcpy(pantalla1,"Error");
     abc:	86 e0       	ldi	r24, 0x06	; 6
     abe:	e4 e5       	ldi	r30, 0x54	; 84
     ac0:	f1 e0       	ldi	r31, 0x01	; 1
     ac2:	a8 e8       	ldi	r26, 0x88	; 136
     ac4:	b1 e0       	ldi	r27, 0x01	; 1
     ac6:	01 90       	ld	r0, Z+
     ac8:	0d 92       	st	X+, r0
     aca:	8a 95       	dec	r24
     acc:	e1 f7       	brne	.-8      	; 0xac6 <mostrar+0xf6>
		break;
	}
	if(ver)
	{
		//actualizar pantalla con respectivos strings aca [borrar estos Serial.println(), son de arduino]
	first_grid(pantalla1);
     ace:	88 e8       	ldi	r24, 0x88	; 136
     ad0:	91 e0       	ldi	r25, 0x01	; 1
     ad2:	0e 94 c6 02 	call	0x58c	; 0x58c <first_grid>
	second_grid(pantalla2);
     ad6:	8e e7       	ldi	r24, 0x7E	; 126
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <second_grid>
	thrid_grid(pantalla4);
     ade:	84 e7       	ldi	r24, 0x74	; 116
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	0e 94 39 03 	call	0x672	; 0x672 <thrid_grid>
     ae6:	08 95       	ret

00000ae8 <actualizarNumero>:
		dtostrf(numero,10, decimales, str);
	}
}

void actualizarNumero(int n, char num) //actualiza numero n con num
{
     ae8:	8f 92       	push	r8
     aea:	9f 92       	push	r9
     aec:	af 92       	push	r10
     aee:	bf 92       	push	r11
     af0:	cf 92       	push	r12
     af2:	df 92       	push	r13
     af4:	ef 92       	push	r14
     af6:	ff 92       	push	r15
     af8:	0f 93       	push	r16
     afa:	1f 93       	push	r17
     afc:	cf 93       	push	r28
     afe:	df 93       	push	r29
	if(contadorPunto < 7){
     b00:	c0 91 9e 01 	lds	r28, 0x019E	; 0x80019e <contadorPunto>
     b04:	d0 91 9f 01 	lds	r29, 0x019F	; 0x80019f <contadorPunto+0x1>
     b08:	c7 30       	cpi	r28, 0x07	; 7
     b0a:	d1 05       	cpc	r29, r1
     b0c:	0c f0       	brlt	.+2      	; 0xb10 <actualizarNumero+0x28>
     b0e:	f7 c5       	rjmp	.+3054   	; 0x16fe <actualizarNumero+0xc16>
		if(n == 1)//N1
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	09 f0       	breq	.+2      	; 0xb16 <actualizarNumero+0x2e>
     b14:	e5 c2       	rjmp	.+1482   	; 0x10e0 <actualizarNumero+0x5f8>
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     b16:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <punto>
     b1a:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <punto+0x1>
     b1e:	01 15       	cp	r16, r1
     b20:	11 05       	cpc	r17, r1
     b22:	09 f0       	breq	.+2      	; 0xb26 <actualizarNumero+0x3e>
     b24:	be c5       	rjmp	.+2940   	; 0x16a2 <actualizarNumero+0xbba>
     b26:	c9 c5       	rjmp	.+2962   	; 0x16ba <actualizarNumero+0xbd2>
     b28:	0f 2e       	mov	r0, r31
     b2a:	c1 2c       	mov	r12, r1
     b2c:	d1 2c       	mov	r13, r1
     b2e:	f0 e8       	ldi	r31, 0x80	; 128
     b30:	ef 2e       	mov	r14, r31
     b32:	ff e3       	ldi	r31, 0x3F	; 63
     b34:	ff 2e       	mov	r15, r31
     b36:	f0 2d       	mov	r31, r0
     b38:	08 c0       	rjmp	.+16     	; 0xb4a <actualizarNumero+0x62>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     b3a:	0f 2e       	mov	r0, r31
     b3c:	c1 2c       	mov	r12, r1
     b3e:	d1 2c       	mov	r13, r1
     b40:	f0 e2       	ldi	r31, 0x20	; 32
     b42:	ef 2e       	mov	r14, r31
     b44:	f1 e4       	ldi	r31, 0x41	; 65
     b46:	ff 2e       	mov	r15, r31
     b48:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
     b4a:	be 01       	movw	r22, r28
     b4c:	0d 2e       	mov	r0, r29
     b4e:	00 0c       	add	r0, r0
     b50:	88 0b       	sbc	r24, r24
     b52:	99 0b       	sbc	r25, r25
     b54:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     b58:	9b 01       	movw	r18, r22
     b5a:	ac 01       	movw	r20, r24
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	80 e2       	ldi	r24, 0x20	; 32
     b62:	91 e4       	ldi	r25, 0x41	; 65
     b64:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     b68:	4b 01       	movw	r8, r22
     b6a:	5c 01       	movw	r10, r24
     b6c:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     b70:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     b74:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     b78:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     b7c:	c7 01       	movw	r24, r14
     b7e:	b6 01       	movw	r22, r12
     b80:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     b84:	6b 01       	movw	r12, r22
     b86:	7c 01       	movw	r14, r24
     b88:	a5 01       	movw	r20, r10
     b8a:	94 01       	movw	r18, r8
     b8c:	60 e0       	ldi	r22, 0x00	; 0
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	cb 01       	movw	r24, r22
     b92:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     b96:	9b 01       	movw	r18, r22
     b98:	ac 01       	movw	r20, r24
     b9a:	c7 01       	movw	r24, r14
     b9c:	b6 01       	movw	r22, r12
     b9e:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     ba2:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     ba6:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     baa:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     bae:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     bb2:	86 c2       	rjmp	.+1292   	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     bb4:	0f 2e       	mov	r0, r31
     bb6:	c1 2c       	mov	r12, r1
     bb8:	d1 2c       	mov	r13, r1
     bba:	f0 e8       	ldi	r31, 0x80	; 128
     bbc:	ef 2e       	mov	r14, r31
     bbe:	ff e3       	ldi	r31, 0x3F	; 63
     bc0:	ff 2e       	mov	r15, r31
     bc2:	f0 2d       	mov	r31, r0
     bc4:	08 c0       	rjmp	.+16     	; 0xbd6 <actualizarNumero+0xee>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     bc6:	0f 2e       	mov	r0, r31
     bc8:	c1 2c       	mov	r12, r1
     bca:	d1 2c       	mov	r13, r1
     bcc:	f0 e2       	ldi	r31, 0x20	; 32
     bce:	ef 2e       	mov	r14, r31
     bd0:	f1 e4       	ldi	r31, 0x41	; 65
     bd2:	ff 2e       	mov	r15, r31
     bd4:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
     bd6:	be 01       	movw	r22, r28
     bd8:	0d 2e       	mov	r0, r29
     bda:	00 0c       	add	r0, r0
     bdc:	88 0b       	sbc	r24, r24
     bde:	99 0b       	sbc	r25, r25
     be0:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     be4:	9b 01       	movw	r18, r22
     be6:	ac 01       	movw	r20, r24
     be8:	60 e0       	ldi	r22, 0x00	; 0
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	80 e2       	ldi	r24, 0x20	; 32
     bee:	91 e4       	ldi	r25, 0x41	; 65
     bf0:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     bf4:	4b 01       	movw	r8, r22
     bf6:	5c 01       	movw	r10, r24
     bf8:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     bfc:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     c00:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     c04:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     c08:	c7 01       	movw	r24, r14
     c0a:	b6 01       	movw	r22, r12
     c0c:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     c10:	6b 01       	movw	r12, r22
     c12:	7c 01       	movw	r14, r24
     c14:	a5 01       	movw	r20, r10
     c16:	94 01       	movw	r18, r8
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	80 e8       	ldi	r24, 0x80	; 128
     c1e:	9f e3       	ldi	r25, 0x3F	; 63
     c20:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     c24:	9b 01       	movw	r18, r22
     c26:	ac 01       	movw	r20, r24
     c28:	c7 01       	movw	r24, r14
     c2a:	b6 01       	movw	r22, r12
     c2c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     c30:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     c34:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     c38:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     c3c:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     c40:	3f c2       	rjmp	.+1150   	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     c42:	0f 2e       	mov	r0, r31
     c44:	c1 2c       	mov	r12, r1
     c46:	d1 2c       	mov	r13, r1
     c48:	f0 e8       	ldi	r31, 0x80	; 128
     c4a:	ef 2e       	mov	r14, r31
     c4c:	ff e3       	ldi	r31, 0x3F	; 63
     c4e:	ff 2e       	mov	r15, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	08 c0       	rjmp	.+16     	; 0xc64 <actualizarNumero+0x17c>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     c54:	0f 2e       	mov	r0, r31
     c56:	c1 2c       	mov	r12, r1
     c58:	d1 2c       	mov	r13, r1
     c5a:	f0 e2       	ldi	r31, 0x20	; 32
     c5c:	ef 2e       	mov	r14, r31
     c5e:	f1 e4       	ldi	r31, 0x41	; 65
     c60:	ff 2e       	mov	r15, r31
     c62:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
     c64:	be 01       	movw	r22, r28
     c66:	0d 2e       	mov	r0, r29
     c68:	00 0c       	add	r0, r0
     c6a:	88 0b       	sbc	r24, r24
     c6c:	99 0b       	sbc	r25, r25
     c6e:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     c72:	9b 01       	movw	r18, r22
     c74:	ac 01       	movw	r20, r24
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	80 e2       	ldi	r24, 0x20	; 32
     c7c:	91 e4       	ldi	r25, 0x41	; 65
     c7e:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     c82:	4b 01       	movw	r8, r22
     c84:	5c 01       	movw	r10, r24
     c86:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     c8a:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     c8e:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     c92:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     c96:	c7 01       	movw	r24, r14
     c98:	b6 01       	movw	r22, r12
     c9a:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     c9e:	6b 01       	movw	r12, r22
     ca0:	7c 01       	movw	r14, r24
     ca2:	a5 01       	movw	r20, r10
     ca4:	94 01       	movw	r18, r8
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	80 e0       	ldi	r24, 0x00	; 0
     cac:	90 e4       	ldi	r25, 0x40	; 64
     cae:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     cb2:	9b 01       	movw	r18, r22
     cb4:	ac 01       	movw	r20, r24
     cb6:	c7 01       	movw	r24, r14
     cb8:	b6 01       	movw	r22, r12
     cba:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     cbe:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     cc2:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     cc6:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     cca:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     cce:	f8 c1       	rjmp	.+1008   	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     cd0:	0f 2e       	mov	r0, r31
     cd2:	c1 2c       	mov	r12, r1
     cd4:	d1 2c       	mov	r13, r1
     cd6:	f0 e8       	ldi	r31, 0x80	; 128
     cd8:	ef 2e       	mov	r14, r31
     cda:	ff e3       	ldi	r31, 0x3F	; 63
     cdc:	ff 2e       	mov	r15, r31
     cde:	f0 2d       	mov	r31, r0
     ce0:	08 c0       	rjmp	.+16     	; 0xcf2 <actualizarNumero+0x20a>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     ce2:	0f 2e       	mov	r0, r31
     ce4:	c1 2c       	mov	r12, r1
     ce6:	d1 2c       	mov	r13, r1
     ce8:	f0 e2       	ldi	r31, 0x20	; 32
     cea:	ef 2e       	mov	r14, r31
     cec:	f1 e4       	ldi	r31, 0x41	; 65
     cee:	ff 2e       	mov	r15, r31
     cf0:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
     cf2:	be 01       	movw	r22, r28
     cf4:	0d 2e       	mov	r0, r29
     cf6:	00 0c       	add	r0, r0
     cf8:	88 0b       	sbc	r24, r24
     cfa:	99 0b       	sbc	r25, r25
     cfc:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     d00:	9b 01       	movw	r18, r22
     d02:	ac 01       	movw	r20, r24
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	80 e2       	ldi	r24, 0x20	; 32
     d0a:	91 e4       	ldi	r25, 0x41	; 65
     d0c:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     d10:	4b 01       	movw	r8, r22
     d12:	5c 01       	movw	r10, r24
     d14:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     d18:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     d1c:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     d20:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     d24:	c7 01       	movw	r24, r14
     d26:	b6 01       	movw	r22, r12
     d28:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     d2c:	6b 01       	movw	r12, r22
     d2e:	7c 01       	movw	r14, r24
     d30:	a5 01       	movw	r20, r10
     d32:	94 01       	movw	r18, r8
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	80 e4       	ldi	r24, 0x40	; 64
     d3a:	90 e4       	ldi	r25, 0x40	; 64
     d3c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     d40:	9b 01       	movw	r18, r22
     d42:	ac 01       	movw	r20, r24
     d44:	c7 01       	movw	r24, r14
     d46:	b6 01       	movw	r22, r12
     d48:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     d4c:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     d50:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     d54:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     d58:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     d5c:	b1 c1       	rjmp	.+866    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     d5e:	0f 2e       	mov	r0, r31
     d60:	c1 2c       	mov	r12, r1
     d62:	d1 2c       	mov	r13, r1
     d64:	f0 e8       	ldi	r31, 0x80	; 128
     d66:	ef 2e       	mov	r14, r31
     d68:	ff e3       	ldi	r31, 0x3F	; 63
     d6a:	ff 2e       	mov	r15, r31
     d6c:	f0 2d       	mov	r31, r0
     d6e:	08 c0       	rjmp	.+16     	; 0xd80 <actualizarNumero+0x298>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     d70:	0f 2e       	mov	r0, r31
     d72:	c1 2c       	mov	r12, r1
     d74:	d1 2c       	mov	r13, r1
     d76:	f0 e2       	ldi	r31, 0x20	; 32
     d78:	ef 2e       	mov	r14, r31
     d7a:	f1 e4       	ldi	r31, 0x41	; 65
     d7c:	ff 2e       	mov	r15, r31
     d7e:	f0 2d       	mov	r31, r0
			switch (num){
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
     d80:	be 01       	movw	r22, r28
     d82:	0d 2e       	mov	r0, r29
     d84:	00 0c       	add	r0, r0
     d86:	88 0b       	sbc	r24, r24
     d88:	99 0b       	sbc	r25, r25
     d8a:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     d8e:	9b 01       	movw	r18, r22
     d90:	ac 01       	movw	r20, r24
     d92:	60 e0       	ldi	r22, 0x00	; 0
     d94:	70 e0       	ldi	r23, 0x00	; 0
     d96:	80 e2       	ldi	r24, 0x20	; 32
     d98:	91 e4       	ldi	r25, 0x41	; 65
     d9a:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     d9e:	4b 01       	movw	r8, r22
     da0:	5c 01       	movw	r10, r24
     da2:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     da6:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     daa:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     dae:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     db2:	c7 01       	movw	r24, r14
     db4:	b6 01       	movw	r22, r12
     db6:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     dba:	6b 01       	movw	r12, r22
     dbc:	7c 01       	movw	r14, r24
     dbe:	a5 01       	movw	r20, r10
     dc0:	94 01       	movw	r18, r8
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	80 e8       	ldi	r24, 0x80	; 128
     dc8:	90 e4       	ldi	r25, 0x40	; 64
     dca:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     dce:	9b 01       	movw	r18, r22
     dd0:	ac 01       	movw	r20, r24
     dd2:	c7 01       	movw	r24, r14
     dd4:	b6 01       	movw	r22, r12
     dd6:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     dda:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     dde:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     de2:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     de6:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     dea:	6a c1       	rjmp	.+724    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     dec:	0f 2e       	mov	r0, r31
     dee:	c1 2c       	mov	r12, r1
     df0:	d1 2c       	mov	r13, r1
     df2:	f0 e8       	ldi	r31, 0x80	; 128
     df4:	ef 2e       	mov	r14, r31
     df6:	ff e3       	ldi	r31, 0x3F	; 63
     df8:	ff 2e       	mov	r15, r31
     dfa:	f0 2d       	mov	r31, r0
     dfc:	08 c0       	rjmp	.+16     	; 0xe0e <actualizarNumero+0x326>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     dfe:	0f 2e       	mov	r0, r31
     e00:	c1 2c       	mov	r12, r1
     e02:	d1 2c       	mov	r13, r1
     e04:	f0 e2       	ldi	r31, 0x20	; 32
     e06:	ef 2e       	mov	r14, r31
     e08:	f1 e4       	ldi	r31, 0x41	; 65
     e0a:	ff 2e       	mov	r15, r31
     e0c:	f0 2d       	mov	r31, r0
				case '0': N1 = N1*sumar + 0/pow(10,contadorPunto); break;
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
				case '5': N1 = N1*sumar + 5/pow(10,contadorPunto); break;
     e0e:	be 01       	movw	r22, r28
     e10:	0d 2e       	mov	r0, r29
     e12:	00 0c       	add	r0, r0
     e14:	88 0b       	sbc	r24, r24
     e16:	99 0b       	sbc	r25, r25
     e18:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     e1c:	9b 01       	movw	r18, r22
     e1e:	ac 01       	movw	r20, r24
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	70 e0       	ldi	r23, 0x00	; 0
     e24:	80 e2       	ldi	r24, 0x20	; 32
     e26:	91 e4       	ldi	r25, 0x41	; 65
     e28:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     e2c:	4b 01       	movw	r8, r22
     e2e:	5c 01       	movw	r10, r24
     e30:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     e34:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     e38:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     e3c:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     e40:	c7 01       	movw	r24, r14
     e42:	b6 01       	movw	r22, r12
     e44:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     e48:	6b 01       	movw	r12, r22
     e4a:	7c 01       	movw	r14, r24
     e4c:	a5 01       	movw	r20, r10
     e4e:	94 01       	movw	r18, r8
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	80 ea       	ldi	r24, 0xA0	; 160
     e56:	90 e4       	ldi	r25, 0x40	; 64
     e58:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     e5c:	9b 01       	movw	r18, r22
     e5e:	ac 01       	movw	r20, r24
     e60:	c7 01       	movw	r24, r14
     e62:	b6 01       	movw	r22, r12
     e64:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     e68:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     e6c:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     e70:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     e74:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     e78:	23 c1       	rjmp	.+582    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     e7a:	0f 2e       	mov	r0, r31
     e7c:	c1 2c       	mov	r12, r1
     e7e:	d1 2c       	mov	r13, r1
     e80:	f0 e8       	ldi	r31, 0x80	; 128
     e82:	ef 2e       	mov	r14, r31
     e84:	ff e3       	ldi	r31, 0x3F	; 63
     e86:	ff 2e       	mov	r15, r31
     e88:	f0 2d       	mov	r31, r0
     e8a:	08 c0       	rjmp	.+16     	; 0xe9c <actualizarNumero+0x3b4>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     e8c:	0f 2e       	mov	r0, r31
     e8e:	c1 2c       	mov	r12, r1
     e90:	d1 2c       	mov	r13, r1
     e92:	f0 e2       	ldi	r31, 0x20	; 32
     e94:	ef 2e       	mov	r14, r31
     e96:	f1 e4       	ldi	r31, 0x41	; 65
     e98:	ff 2e       	mov	r15, r31
     e9a:	f0 2d       	mov	r31, r0
				case '1': N1 = N1*sumar + 1/pow(10,contadorPunto); break;
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
				case '5': N1 = N1*sumar + 5/pow(10,contadorPunto); break;
				case '6': N1 = N1*sumar + 6/pow(10,contadorPunto); break;
     e9c:	be 01       	movw	r22, r28
     e9e:	0d 2e       	mov	r0, r29
     ea0:	00 0c       	add	r0, r0
     ea2:	88 0b       	sbc	r24, r24
     ea4:	99 0b       	sbc	r25, r25
     ea6:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     eaa:	9b 01       	movw	r18, r22
     eac:	ac 01       	movw	r20, r24
     eae:	60 e0       	ldi	r22, 0x00	; 0
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	80 e2       	ldi	r24, 0x20	; 32
     eb4:	91 e4       	ldi	r25, 0x41	; 65
     eb6:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     eba:	4b 01       	movw	r8, r22
     ebc:	5c 01       	movw	r10, r24
     ebe:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     ec2:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     ec6:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     eca:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     ece:	c7 01       	movw	r24, r14
     ed0:	b6 01       	movw	r22, r12
     ed2:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     ed6:	6b 01       	movw	r12, r22
     ed8:	7c 01       	movw	r14, r24
     eda:	a5 01       	movw	r20, r10
     edc:	94 01       	movw	r18, r8
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	80 ec       	ldi	r24, 0xC0	; 192
     ee4:	90 e4       	ldi	r25, 0x40	; 64
     ee6:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     eea:	9b 01       	movw	r18, r22
     eec:	ac 01       	movw	r20, r24
     eee:	c7 01       	movw	r24, r14
     ef0:	b6 01       	movw	r22, r12
     ef2:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     ef6:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     efa:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     efe:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     f02:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     f06:	dc c0       	rjmp	.+440    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     f08:	0f 2e       	mov	r0, r31
     f0a:	c1 2c       	mov	r12, r1
     f0c:	d1 2c       	mov	r13, r1
     f0e:	f0 e8       	ldi	r31, 0x80	; 128
     f10:	ef 2e       	mov	r14, r31
     f12:	ff e3       	ldi	r31, 0x3F	; 63
     f14:	ff 2e       	mov	r15, r31
     f16:	f0 2d       	mov	r31, r0
     f18:	08 c0       	rjmp	.+16     	; 0xf2a <actualizarNumero+0x442>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     f1a:	0f 2e       	mov	r0, r31
     f1c:	c1 2c       	mov	r12, r1
     f1e:	d1 2c       	mov	r13, r1
     f20:	f0 e2       	ldi	r31, 0x20	; 32
     f22:	ef 2e       	mov	r14, r31
     f24:	f1 e4       	ldi	r31, 0x41	; 65
     f26:	ff 2e       	mov	r15, r31
     f28:	f0 2d       	mov	r31, r0
				case '2': N1 = N1*sumar + 2/pow(10,contadorPunto); break;
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
				case '5': N1 = N1*sumar + 5/pow(10,contadorPunto); break;
				case '6': N1 = N1*sumar + 6/pow(10,contadorPunto); break;
				case '7': N1 = N1*sumar + 7/pow(10,contadorPunto); break;
     f2a:	be 01       	movw	r22, r28
     f2c:	0d 2e       	mov	r0, r29
     f2e:	00 0c       	add	r0, r0
     f30:	88 0b       	sbc	r24, r24
     f32:	99 0b       	sbc	r25, r25
     f34:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     f38:	9b 01       	movw	r18, r22
     f3a:	ac 01       	movw	r20, r24
     f3c:	60 e0       	ldi	r22, 0x00	; 0
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	80 e2       	ldi	r24, 0x20	; 32
     f42:	91 e4       	ldi	r25, 0x41	; 65
     f44:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     f48:	4b 01       	movw	r8, r22
     f4a:	5c 01       	movw	r10, r24
     f4c:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     f50:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     f54:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     f58:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     f5c:	c7 01       	movw	r24, r14
     f5e:	b6 01       	movw	r22, r12
     f60:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     f64:	6b 01       	movw	r12, r22
     f66:	7c 01       	movw	r14, r24
     f68:	a5 01       	movw	r20, r10
     f6a:	94 01       	movw	r18, r8
     f6c:	60 e0       	ldi	r22, 0x00	; 0
     f6e:	70 e0       	ldi	r23, 0x00	; 0
     f70:	80 ee       	ldi	r24, 0xE0	; 224
     f72:	90 e4       	ldi	r25, 0x40	; 64
     f74:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
     f78:	9b 01       	movw	r18, r22
     f7a:	ac 01       	movw	r20, r24
     f7c:	c7 01       	movw	r24, r14
     f7e:	b6 01       	movw	r22, r12
     f80:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
     f84:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
     f88:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
     f8c:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
     f90:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
     f94:	95 c0       	rjmp	.+298    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
     f96:	0f 2e       	mov	r0, r31
     f98:	c1 2c       	mov	r12, r1
     f9a:	d1 2c       	mov	r13, r1
     f9c:	f0 e8       	ldi	r31, 0x80	; 128
     f9e:	ef 2e       	mov	r14, r31
     fa0:	ff e3       	ldi	r31, 0x3F	; 63
     fa2:	ff 2e       	mov	r15, r31
     fa4:	f0 2d       	mov	r31, r0
     fa6:	08 c0       	rjmp	.+16     	; 0xfb8 <actualizarNumero+0x4d0>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
     fa8:	0f 2e       	mov	r0, r31
     faa:	c1 2c       	mov	r12, r1
     fac:	d1 2c       	mov	r13, r1
     fae:	f0 e2       	ldi	r31, 0x20	; 32
     fb0:	ef 2e       	mov	r14, r31
     fb2:	f1 e4       	ldi	r31, 0x41	; 65
     fb4:	ff 2e       	mov	r15, r31
     fb6:	f0 2d       	mov	r31, r0
				case '3': N1 = N1*sumar + 3/pow(10,contadorPunto); break;
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
				case '5': N1 = N1*sumar + 5/pow(10,contadorPunto); break;
				case '6': N1 = N1*sumar + 6/pow(10,contadorPunto); break;
				case '7': N1 = N1*sumar + 7/pow(10,contadorPunto); break;
				case '8': N1 = N1*sumar + 8/pow(10,contadorPunto); break;
     fb8:	be 01       	movw	r22, r28
     fba:	0d 2e       	mov	r0, r29
     fbc:	00 0c       	add	r0, r0
     fbe:	88 0b       	sbc	r24, r24
     fc0:	99 0b       	sbc	r25, r25
     fc2:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
     fc6:	9b 01       	movw	r18, r22
     fc8:	ac 01       	movw	r20, r24
     fca:	60 e0       	ldi	r22, 0x00	; 0
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	80 e2       	ldi	r24, 0x20	; 32
     fd0:	91 e4       	ldi	r25, 0x41	; 65
     fd2:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
     fd6:	4b 01       	movw	r8, r22
     fd8:	5c 01       	movw	r10, r24
     fda:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
     fde:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
     fe2:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
     fe6:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
     fea:	c7 01       	movw	r24, r14
     fec:	b6 01       	movw	r22, r12
     fee:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
     ff2:	6b 01       	movw	r12, r22
     ff4:	7c 01       	movw	r14, r24
     ff6:	a5 01       	movw	r20, r10
     ff8:	94 01       	movw	r18, r8
     ffa:	60 e0       	ldi	r22, 0x00	; 0
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	91 e4       	ldi	r25, 0x41	; 65
    1002:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1006:	9b 01       	movw	r18, r22
    1008:	ac 01       	movw	r20, r24
    100a:	c7 01       	movw	r24, r14
    100c:	b6 01       	movw	r22, r12
    100e:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    1012:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1016:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    101a:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    101e:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    1022:	4e c0       	rjmp	.+156    	; 0x10c0 <actualizarNumero+0x5d8>
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
    1024:	0f 2e       	mov	r0, r31
    1026:	c1 2c       	mov	r12, r1
    1028:	d1 2c       	mov	r13, r1
    102a:	f0 e8       	ldi	r31, 0x80	; 128
    102c:	ef 2e       	mov	r14, r31
    102e:	ff e3       	ldi	r31, 0x3F	; 63
    1030:	ff 2e       	mov	r15, r31
    1032:	f0 2d       	mov	r31, r0
    1034:	08 c0       	rjmp	.+16     	; 0x1046 <actualizarNumero+0x55e>
void actualizarNumero(int n, char num) //actualiza numero n con num
{
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
    1036:	0f 2e       	mov	r0, r31
    1038:	c1 2c       	mov	r12, r1
    103a:	d1 2c       	mov	r13, r1
    103c:	f0 e2       	ldi	r31, 0x20	; 32
    103e:	ef 2e       	mov	r14, r31
    1040:	f1 e4       	ldi	r31, 0x41	; 65
    1042:	ff 2e       	mov	r15, r31
    1044:	f0 2d       	mov	r31, r0
				case '4': N1 = N1*sumar + 4/pow(10,contadorPunto); break;
				case '5': N1 = N1*sumar + 5/pow(10,contadorPunto); break;
				case '6': N1 = N1*sumar + 6/pow(10,contadorPunto); break;
				case '7': N1 = N1*sumar + 7/pow(10,contadorPunto); break;
				case '8': N1 = N1*sumar + 8/pow(10,contadorPunto); break;
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
    1046:	be 01       	movw	r22, r28
    1048:	0d 2e       	mov	r0, r29
    104a:	00 0c       	add	r0, r0
    104c:	88 0b       	sbc	r24, r24
    104e:	99 0b       	sbc	r25, r25
    1050:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1054:	9b 01       	movw	r18, r22
    1056:	ac 01       	movw	r20, r24
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	91 e4       	ldi	r25, 0x41	; 65
    1060:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    1064:	4b 01       	movw	r8, r22
    1066:	5c 01       	movw	r10, r24
    1068:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    106c:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    1070:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    1074:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    1078:	c7 01       	movw	r24, r14
    107a:	b6 01       	movw	r22, r12
    107c:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    1080:	6b 01       	movw	r12, r22
    1082:	7c 01       	movw	r14, r24
    1084:	a5 01       	movw	r20, r10
    1086:	94 01       	movw	r18, r8
    1088:	60 e0       	ldi	r22, 0x00	; 0
    108a:	70 e0       	ldi	r23, 0x00	; 0
    108c:	80 e1       	ldi	r24, 0x10	; 16
    108e:	91 e4       	ldi	r25, 0x41	; 65
    1090:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1094:	9b 01       	movw	r18, r22
    1096:	ac 01       	movw	r20, r24
    1098:	c7 01       	movw	r24, r14
    109a:	b6 01       	movw	r22, r12
    109c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    10a0:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    10a4:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    10a8:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    10ac:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    10b0:	07 c0       	rjmp	.+14     	; 0x10c0 <actualizarNumero+0x5d8>
			case '.': punto = 1;  break;}
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <punto+0x1>
    10ba:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <punto>
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <actualizarNumero+0x5dc>
			if (punto){ contadorPunto++; }
    10c0:	01 2b       	or	r16, r17
    10c2:	29 f0       	breq	.+10     	; 0x10ce <actualizarNumero+0x5e6>
    10c4:	21 96       	adiw	r28, 0x01	; 1
    10c6:	d0 93 9f 01 	sts	0x019F, r29	; 0x80019f <contadorPunto+0x1>
    10ca:	c0 93 9e 01 	sts	0x019E, r28	; 0x80019e <contadorPunto>
			mostrar(0); mostrar(1);
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    10d6:	81 e0       	ldi	r24, 0x01	; 1
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    10de:	0f c3       	rjmp	.+1566   	; 0x16fe <actualizarNumero+0xc16>
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    10e0:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <punto>
    10e4:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <punto+0x1>
    10e8:	01 15       	cp	r16, r1
    10ea:	11 05       	cpc	r17, r1
    10ec:	09 f0       	breq	.+2      	; 0x10f0 <actualizarNumero+0x608>
    10ee:	f1 c2       	rjmp	.+1506   	; 0x16d2 <actualizarNumero+0xbea>
    10f0:	fb c2       	rjmp	.+1526   	; 0x16e8 <actualizarNumero+0xc00>
    10f2:	0f 2e       	mov	r0, r31
    10f4:	c1 2c       	mov	r12, r1
    10f6:	d1 2c       	mov	r13, r1
    10f8:	f0 e8       	ldi	r31, 0x80	; 128
    10fa:	ef 2e       	mov	r14, r31
    10fc:	ff e3       	ldi	r31, 0x3F	; 63
    10fe:	ff 2e       	mov	r15, r31
    1100:	f0 2d       	mov	r31, r0
    1102:	08 c0       	rjmp	.+16     	; 0x1114 <actualizarNumero+0x62c>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    1104:	0f 2e       	mov	r0, r31
    1106:	c1 2c       	mov	r12, r1
    1108:	d1 2c       	mov	r13, r1
    110a:	f0 e2       	ldi	r31, 0x20	; 32
    110c:	ef 2e       	mov	r14, r31
    110e:	f1 e4       	ldi	r31, 0x41	; 65
    1110:	ff 2e       	mov	r15, r31
    1112:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
    1114:	be 01       	movw	r22, r28
    1116:	0d 2e       	mov	r0, r29
    1118:	00 0c       	add	r0, r0
    111a:	88 0b       	sbc	r24, r24
    111c:	99 0b       	sbc	r25, r25
    111e:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1122:	9b 01       	movw	r18, r22
    1124:	ac 01       	movw	r20, r24
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	80 e2       	ldi	r24, 0x20	; 32
    112c:	91 e4       	ldi	r25, 0x41	; 65
    112e:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    1132:	4b 01       	movw	r8, r22
    1134:	5c 01       	movw	r10, r24
    1136:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    113a:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    113e:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1142:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1146:	c7 01       	movw	r24, r14
    1148:	b6 01       	movw	r22, r12
    114a:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    114e:	6b 01       	movw	r12, r22
    1150:	7c 01       	movw	r14, r24
    1152:	a5 01       	movw	r20, r10
    1154:	94 01       	movw	r18, r8
    1156:	60 e0       	ldi	r22, 0x00	; 0
    1158:	70 e0       	ldi	r23, 0x00	; 0
    115a:	cb 01       	movw	r24, r22
    115c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1160:	9b 01       	movw	r18, r22
    1162:	ac 01       	movw	r20, r24
    1164:	c7 01       	movw	r24, r14
    1166:	b6 01       	movw	r22, r12
    1168:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    116c:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    1170:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    1174:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    1178:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    117c:	86 c2       	rjmp	.+1292   	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    117e:	0f 2e       	mov	r0, r31
    1180:	c1 2c       	mov	r12, r1
    1182:	d1 2c       	mov	r13, r1
    1184:	f0 e8       	ldi	r31, 0x80	; 128
    1186:	ef 2e       	mov	r14, r31
    1188:	ff e3       	ldi	r31, 0x3F	; 63
    118a:	ff 2e       	mov	r15, r31
    118c:	f0 2d       	mov	r31, r0
    118e:	08 c0       	rjmp	.+16     	; 0x11a0 <actualizarNumero+0x6b8>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    1190:	0f 2e       	mov	r0, r31
    1192:	c1 2c       	mov	r12, r1
    1194:	d1 2c       	mov	r13, r1
    1196:	f0 e2       	ldi	r31, 0x20	; 32
    1198:	ef 2e       	mov	r14, r31
    119a:	f1 e4       	ldi	r31, 0x41	; 65
    119c:	ff 2e       	mov	r15, r31
    119e:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
    11a0:	be 01       	movw	r22, r28
    11a2:	0d 2e       	mov	r0, r29
    11a4:	00 0c       	add	r0, r0
    11a6:	88 0b       	sbc	r24, r24
    11a8:	99 0b       	sbc	r25, r25
    11aa:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    11ae:	9b 01       	movw	r18, r22
    11b0:	ac 01       	movw	r20, r24
    11b2:	60 e0       	ldi	r22, 0x00	; 0
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	80 e2       	ldi	r24, 0x20	; 32
    11b8:	91 e4       	ldi	r25, 0x41	; 65
    11ba:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    11be:	4b 01       	movw	r8, r22
    11c0:	5c 01       	movw	r10, r24
    11c2:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    11c6:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    11ca:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    11ce:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    11d2:	c7 01       	movw	r24, r14
    11d4:	b6 01       	movw	r22, r12
    11d6:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    11da:	6b 01       	movw	r12, r22
    11dc:	7c 01       	movw	r14, r24
    11de:	a5 01       	movw	r20, r10
    11e0:	94 01       	movw	r18, r8
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	80 e8       	ldi	r24, 0x80	; 128
    11e8:	9f e3       	ldi	r25, 0x3F	; 63
    11ea:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    11ee:	9b 01       	movw	r18, r22
    11f0:	ac 01       	movw	r20, r24
    11f2:	c7 01       	movw	r24, r14
    11f4:	b6 01       	movw	r22, r12
    11f6:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    11fa:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    11fe:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    1202:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    1206:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    120a:	3f c2       	rjmp	.+1150   	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    120c:	0f 2e       	mov	r0, r31
    120e:	c1 2c       	mov	r12, r1
    1210:	d1 2c       	mov	r13, r1
    1212:	f0 e8       	ldi	r31, 0x80	; 128
    1214:	ef 2e       	mov	r14, r31
    1216:	ff e3       	ldi	r31, 0x3F	; 63
    1218:	ff 2e       	mov	r15, r31
    121a:	f0 2d       	mov	r31, r0
    121c:	08 c0       	rjmp	.+16     	; 0x122e <actualizarNumero+0x746>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    121e:	0f 2e       	mov	r0, r31
    1220:	c1 2c       	mov	r12, r1
    1222:	d1 2c       	mov	r13, r1
    1224:	f0 e2       	ldi	r31, 0x20	; 32
    1226:	ef 2e       	mov	r14, r31
    1228:	f1 e4       	ldi	r31, 0x41	; 65
    122a:	ff 2e       	mov	r15, r31
    122c:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
    122e:	be 01       	movw	r22, r28
    1230:	0d 2e       	mov	r0, r29
    1232:	00 0c       	add	r0, r0
    1234:	88 0b       	sbc	r24, r24
    1236:	99 0b       	sbc	r25, r25
    1238:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    123c:	9b 01       	movw	r18, r22
    123e:	ac 01       	movw	r20, r24
    1240:	60 e0       	ldi	r22, 0x00	; 0
    1242:	70 e0       	ldi	r23, 0x00	; 0
    1244:	80 e2       	ldi	r24, 0x20	; 32
    1246:	91 e4       	ldi	r25, 0x41	; 65
    1248:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    124c:	4b 01       	movw	r8, r22
    124e:	5c 01       	movw	r10, r24
    1250:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1254:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1258:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    125c:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1260:	c7 01       	movw	r24, r14
    1262:	b6 01       	movw	r22, r12
    1264:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    1268:	6b 01       	movw	r12, r22
    126a:	7c 01       	movw	r14, r24
    126c:	a5 01       	movw	r20, r10
    126e:	94 01       	movw	r18, r8
    1270:	60 e0       	ldi	r22, 0x00	; 0
    1272:	70 e0       	ldi	r23, 0x00	; 0
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	90 e4       	ldi	r25, 0x40	; 64
    1278:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    127c:	9b 01       	movw	r18, r22
    127e:	ac 01       	movw	r20, r24
    1280:	c7 01       	movw	r24, r14
    1282:	b6 01       	movw	r22, r12
    1284:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    1288:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    128c:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    1290:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    1294:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    1298:	f8 c1       	rjmp	.+1008   	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    129a:	0f 2e       	mov	r0, r31
    129c:	c1 2c       	mov	r12, r1
    129e:	d1 2c       	mov	r13, r1
    12a0:	f0 e8       	ldi	r31, 0x80	; 128
    12a2:	ef 2e       	mov	r14, r31
    12a4:	ff e3       	ldi	r31, 0x3F	; 63
    12a6:	ff 2e       	mov	r15, r31
    12a8:	f0 2d       	mov	r31, r0
    12aa:	08 c0       	rjmp	.+16     	; 0x12bc <actualizarNumero+0x7d4>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    12ac:	0f 2e       	mov	r0, r31
    12ae:	c1 2c       	mov	r12, r1
    12b0:	d1 2c       	mov	r13, r1
    12b2:	f0 e2       	ldi	r31, 0x20	; 32
    12b4:	ef 2e       	mov	r14, r31
    12b6:	f1 e4       	ldi	r31, 0x41	; 65
    12b8:	ff 2e       	mov	r15, r31
    12ba:	f0 2d       	mov	r31, r0
			if (punto){ sumar = 1; }
			switch (num){
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
    12bc:	be 01       	movw	r22, r28
    12be:	0d 2e       	mov	r0, r29
    12c0:	00 0c       	add	r0, r0
    12c2:	88 0b       	sbc	r24, r24
    12c4:	99 0b       	sbc	r25, r25
    12c6:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    12ca:	9b 01       	movw	r18, r22
    12cc:	ac 01       	movw	r20, r24
    12ce:	60 e0       	ldi	r22, 0x00	; 0
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	80 e2       	ldi	r24, 0x20	; 32
    12d4:	91 e4       	ldi	r25, 0x41	; 65
    12d6:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    12da:	4b 01       	movw	r8, r22
    12dc:	5c 01       	movw	r10, r24
    12de:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    12e2:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    12e6:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    12ea:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    12ee:	c7 01       	movw	r24, r14
    12f0:	b6 01       	movw	r22, r12
    12f2:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    12f6:	6b 01       	movw	r12, r22
    12f8:	7c 01       	movw	r14, r24
    12fa:	a5 01       	movw	r20, r10
    12fc:	94 01       	movw	r18, r8
    12fe:	60 e0       	ldi	r22, 0x00	; 0
    1300:	70 e0       	ldi	r23, 0x00	; 0
    1302:	80 e4       	ldi	r24, 0x40	; 64
    1304:	90 e4       	ldi	r25, 0x40	; 64
    1306:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    130a:	9b 01       	movw	r18, r22
    130c:	ac 01       	movw	r20, r24
    130e:	c7 01       	movw	r24, r14
    1310:	b6 01       	movw	r22, r12
    1312:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    1316:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    131a:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    131e:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    1322:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    1326:	b1 c1       	rjmp	.+866    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    1328:	0f 2e       	mov	r0, r31
    132a:	c1 2c       	mov	r12, r1
    132c:	d1 2c       	mov	r13, r1
    132e:	f0 e8       	ldi	r31, 0x80	; 128
    1330:	ef 2e       	mov	r14, r31
    1332:	ff e3       	ldi	r31, 0x3F	; 63
    1334:	ff 2e       	mov	r15, r31
    1336:	f0 2d       	mov	r31, r0
    1338:	08 c0       	rjmp	.+16     	; 0x134a <actualizarNumero+0x862>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    133a:	0f 2e       	mov	r0, r31
    133c:	c1 2c       	mov	r12, r1
    133e:	d1 2c       	mov	r13, r1
    1340:	f0 e2       	ldi	r31, 0x20	; 32
    1342:	ef 2e       	mov	r14, r31
    1344:	f1 e4       	ldi	r31, 0x41	; 65
    1346:	ff 2e       	mov	r15, r31
    1348:	f0 2d       	mov	r31, r0
			switch (num){
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
    134a:	be 01       	movw	r22, r28
    134c:	0d 2e       	mov	r0, r29
    134e:	00 0c       	add	r0, r0
    1350:	88 0b       	sbc	r24, r24
    1352:	99 0b       	sbc	r25, r25
    1354:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1358:	9b 01       	movw	r18, r22
    135a:	ac 01       	movw	r20, r24
    135c:	60 e0       	ldi	r22, 0x00	; 0
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 e2       	ldi	r24, 0x20	; 32
    1362:	91 e4       	ldi	r25, 0x41	; 65
    1364:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    1368:	4b 01       	movw	r8, r22
    136a:	5c 01       	movw	r10, r24
    136c:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1370:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1374:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1378:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    137c:	c7 01       	movw	r24, r14
    137e:	b6 01       	movw	r22, r12
    1380:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    1384:	6b 01       	movw	r12, r22
    1386:	7c 01       	movw	r14, r24
    1388:	a5 01       	movw	r20, r10
    138a:	94 01       	movw	r18, r8
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	80 e8       	ldi	r24, 0x80	; 128
    1392:	90 e4       	ldi	r25, 0x40	; 64
    1394:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1398:	9b 01       	movw	r18, r22
    139a:	ac 01       	movw	r20, r24
    139c:	c7 01       	movw	r24, r14
    139e:	b6 01       	movw	r22, r12
    13a0:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    13a4:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    13a8:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    13ac:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    13b0:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    13b4:	6a c1       	rjmp	.+724    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    13b6:	0f 2e       	mov	r0, r31
    13b8:	c1 2c       	mov	r12, r1
    13ba:	d1 2c       	mov	r13, r1
    13bc:	f0 e8       	ldi	r31, 0x80	; 128
    13be:	ef 2e       	mov	r14, r31
    13c0:	ff e3       	ldi	r31, 0x3F	; 63
    13c2:	ff 2e       	mov	r15, r31
    13c4:	f0 2d       	mov	r31, r0
    13c6:	08 c0       	rjmp	.+16     	; 0x13d8 <actualizarNumero+0x8f0>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    13c8:	0f 2e       	mov	r0, r31
    13ca:	c1 2c       	mov	r12, r1
    13cc:	d1 2c       	mov	r13, r1
    13ce:	f0 e2       	ldi	r31, 0x20	; 32
    13d0:	ef 2e       	mov	r14, r31
    13d2:	f1 e4       	ldi	r31, 0x41	; 65
    13d4:	ff 2e       	mov	r15, r31
    13d6:	f0 2d       	mov	r31, r0
				case '0': N2 = N2*sumar + 0/pow(10,contadorPunto); break;
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
				case '5': N2 = N2*sumar + 5/pow(10,contadorPunto); break;
    13d8:	be 01       	movw	r22, r28
    13da:	0d 2e       	mov	r0, r29
    13dc:	00 0c       	add	r0, r0
    13de:	88 0b       	sbc	r24, r24
    13e0:	99 0b       	sbc	r25, r25
    13e2:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    13e6:	9b 01       	movw	r18, r22
    13e8:	ac 01       	movw	r20, r24
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	80 e2       	ldi	r24, 0x20	; 32
    13f0:	91 e4       	ldi	r25, 0x41	; 65
    13f2:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    13f6:	4b 01       	movw	r8, r22
    13f8:	5c 01       	movw	r10, r24
    13fa:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    13fe:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1402:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1406:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    140a:	c7 01       	movw	r24, r14
    140c:	b6 01       	movw	r22, r12
    140e:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    1412:	6b 01       	movw	r12, r22
    1414:	7c 01       	movw	r14, r24
    1416:	a5 01       	movw	r20, r10
    1418:	94 01       	movw	r18, r8
    141a:	60 e0       	ldi	r22, 0x00	; 0
    141c:	70 e0       	ldi	r23, 0x00	; 0
    141e:	80 ea       	ldi	r24, 0xA0	; 160
    1420:	90 e4       	ldi	r25, 0x40	; 64
    1422:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1426:	9b 01       	movw	r18, r22
    1428:	ac 01       	movw	r20, r24
    142a:	c7 01       	movw	r24, r14
    142c:	b6 01       	movw	r22, r12
    142e:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    1432:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    1436:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    143a:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    143e:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    1442:	23 c1       	rjmp	.+582    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    1444:	0f 2e       	mov	r0, r31
    1446:	c1 2c       	mov	r12, r1
    1448:	d1 2c       	mov	r13, r1
    144a:	f0 e8       	ldi	r31, 0x80	; 128
    144c:	ef 2e       	mov	r14, r31
    144e:	ff e3       	ldi	r31, 0x3F	; 63
    1450:	ff 2e       	mov	r15, r31
    1452:	f0 2d       	mov	r31, r0
    1454:	08 c0       	rjmp	.+16     	; 0x1466 <actualizarNumero+0x97e>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    1456:	0f 2e       	mov	r0, r31
    1458:	c1 2c       	mov	r12, r1
    145a:	d1 2c       	mov	r13, r1
    145c:	f0 e2       	ldi	r31, 0x20	; 32
    145e:	ef 2e       	mov	r14, r31
    1460:	f1 e4       	ldi	r31, 0x41	; 65
    1462:	ff 2e       	mov	r15, r31
    1464:	f0 2d       	mov	r31, r0
				case '1': N2 = N2*sumar + 1/pow(10,contadorPunto); break;
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
				case '5': N2 = N2*sumar + 5/pow(10,contadorPunto); break;
				case '6': N2 = N2*sumar + 6/pow(10,contadorPunto); break;
    1466:	be 01       	movw	r22, r28
    1468:	0d 2e       	mov	r0, r29
    146a:	00 0c       	add	r0, r0
    146c:	88 0b       	sbc	r24, r24
    146e:	99 0b       	sbc	r25, r25
    1470:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1474:	9b 01       	movw	r18, r22
    1476:	ac 01       	movw	r20, r24
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	70 e0       	ldi	r23, 0x00	; 0
    147c:	80 e2       	ldi	r24, 0x20	; 32
    147e:	91 e4       	ldi	r25, 0x41	; 65
    1480:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    1484:	4b 01       	movw	r8, r22
    1486:	5c 01       	movw	r10, r24
    1488:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    148c:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1490:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1494:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1498:	c7 01       	movw	r24, r14
    149a:	b6 01       	movw	r22, r12
    149c:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    14a0:	6b 01       	movw	r12, r22
    14a2:	7c 01       	movw	r14, r24
    14a4:	a5 01       	movw	r20, r10
    14a6:	94 01       	movw	r18, r8
    14a8:	60 e0       	ldi	r22, 0x00	; 0
    14aa:	70 e0       	ldi	r23, 0x00	; 0
    14ac:	80 ec       	ldi	r24, 0xC0	; 192
    14ae:	90 e4       	ldi	r25, 0x40	; 64
    14b0:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    14b4:	9b 01       	movw	r18, r22
    14b6:	ac 01       	movw	r20, r24
    14b8:	c7 01       	movw	r24, r14
    14ba:	b6 01       	movw	r22, r12
    14bc:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    14c0:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    14c4:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    14c8:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    14cc:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    14d0:	dc c0       	rjmp	.+440    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    14d2:	0f 2e       	mov	r0, r31
    14d4:	c1 2c       	mov	r12, r1
    14d6:	d1 2c       	mov	r13, r1
    14d8:	f0 e8       	ldi	r31, 0x80	; 128
    14da:	ef 2e       	mov	r14, r31
    14dc:	ff e3       	ldi	r31, 0x3F	; 63
    14de:	ff 2e       	mov	r15, r31
    14e0:	f0 2d       	mov	r31, r0
    14e2:	08 c0       	rjmp	.+16     	; 0x14f4 <actualizarNumero+0xa0c>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    14e4:	0f 2e       	mov	r0, r31
    14e6:	c1 2c       	mov	r12, r1
    14e8:	d1 2c       	mov	r13, r1
    14ea:	f0 e2       	ldi	r31, 0x20	; 32
    14ec:	ef 2e       	mov	r14, r31
    14ee:	f1 e4       	ldi	r31, 0x41	; 65
    14f0:	ff 2e       	mov	r15, r31
    14f2:	f0 2d       	mov	r31, r0
				case '2': N2 = N2*sumar + 2/pow(10,contadorPunto); break;
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
				case '5': N2 = N2*sumar + 5/pow(10,contadorPunto); break;
				case '6': N2 = N2*sumar + 6/pow(10,contadorPunto); break;
				case '7': N2 = N2*sumar + 7/pow(10,contadorPunto); break;
    14f4:	be 01       	movw	r22, r28
    14f6:	0d 2e       	mov	r0, r29
    14f8:	00 0c       	add	r0, r0
    14fa:	88 0b       	sbc	r24, r24
    14fc:	99 0b       	sbc	r25, r25
    14fe:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	60 e0       	ldi	r22, 0x00	; 0
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	80 e2       	ldi	r24, 0x20	; 32
    150c:	91 e4       	ldi	r25, 0x41	; 65
    150e:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    1512:	4b 01       	movw	r8, r22
    1514:	5c 01       	movw	r10, r24
    1516:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    151a:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    151e:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1522:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1526:	c7 01       	movw	r24, r14
    1528:	b6 01       	movw	r22, r12
    152a:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    152e:	6b 01       	movw	r12, r22
    1530:	7c 01       	movw	r14, r24
    1532:	a5 01       	movw	r20, r10
    1534:	94 01       	movw	r18, r8
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	80 ee       	ldi	r24, 0xE0	; 224
    153c:	90 e4       	ldi	r25, 0x40	; 64
    153e:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    1542:	9b 01       	movw	r18, r22
    1544:	ac 01       	movw	r20, r24
    1546:	c7 01       	movw	r24, r14
    1548:	b6 01       	movw	r22, r12
    154a:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    154e:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    1552:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    1556:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    155a:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    155e:	95 c0       	rjmp	.+298    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    1560:	0f 2e       	mov	r0, r31
    1562:	c1 2c       	mov	r12, r1
    1564:	d1 2c       	mov	r13, r1
    1566:	f0 e8       	ldi	r31, 0x80	; 128
    1568:	ef 2e       	mov	r14, r31
    156a:	ff e3       	ldi	r31, 0x3F	; 63
    156c:	ff 2e       	mov	r15, r31
    156e:	f0 2d       	mov	r31, r0
    1570:	08 c0       	rjmp	.+16     	; 0x1582 <actualizarNumero+0xa9a>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    1572:	0f 2e       	mov	r0, r31
    1574:	c1 2c       	mov	r12, r1
    1576:	d1 2c       	mov	r13, r1
    1578:	f0 e2       	ldi	r31, 0x20	; 32
    157a:	ef 2e       	mov	r14, r31
    157c:	f1 e4       	ldi	r31, 0x41	; 65
    157e:	ff 2e       	mov	r15, r31
    1580:	f0 2d       	mov	r31, r0
				case '3': N2 = N2*sumar + 3/pow(10,contadorPunto); break;
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
				case '5': N2 = N2*sumar + 5/pow(10,contadorPunto); break;
				case '6': N2 = N2*sumar + 6/pow(10,contadorPunto); break;
				case '7': N2 = N2*sumar + 7/pow(10,contadorPunto); break;
				case '8': N2 = N2*sumar + 8/pow(10,contadorPunto); break;
    1582:	be 01       	movw	r22, r28
    1584:	0d 2e       	mov	r0, r29
    1586:	00 0c       	add	r0, r0
    1588:	88 0b       	sbc	r24, r24
    158a:	99 0b       	sbc	r25, r25
    158c:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    1590:	9b 01       	movw	r18, r22
    1592:	ac 01       	movw	r20, r24
    1594:	60 e0       	ldi	r22, 0x00	; 0
    1596:	70 e0       	ldi	r23, 0x00	; 0
    1598:	80 e2       	ldi	r24, 0x20	; 32
    159a:	91 e4       	ldi	r25, 0x41	; 65
    159c:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    15a0:	4b 01       	movw	r8, r22
    15a2:	5c 01       	movw	r10, r24
    15a4:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    15a8:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    15ac:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    15b0:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    15b4:	c7 01       	movw	r24, r14
    15b6:	b6 01       	movw	r22, r12
    15b8:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    15bc:	6b 01       	movw	r12, r22
    15be:	7c 01       	movw	r14, r24
    15c0:	a5 01       	movw	r20, r10
    15c2:	94 01       	movw	r18, r8
    15c4:	60 e0       	ldi	r22, 0x00	; 0
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	80 e0       	ldi	r24, 0x00	; 0
    15ca:	91 e4       	ldi	r25, 0x41	; 65
    15cc:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    15d0:	9b 01       	movw	r18, r22
    15d2:	ac 01       	movw	r20, r24
    15d4:	c7 01       	movw	r24, r14
    15d6:	b6 01       	movw	r22, r12
    15d8:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    15dc:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    15e0:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    15e4:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    15e8:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    15ec:	4e c0       	rjmp	.+156    	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
    15ee:	0f 2e       	mov	r0, r31
    15f0:	c1 2c       	mov	r12, r1
    15f2:	d1 2c       	mov	r13, r1
    15f4:	f0 e8       	ldi	r31, 0x80	; 128
    15f6:	ef 2e       	mov	r14, r31
    15f8:	ff e3       	ldi	r31, 0x3F	; 63
    15fa:	ff 2e       	mov	r15, r31
    15fc:	f0 2d       	mov	r31, r0
    15fe:	08 c0       	rjmp	.+16     	; 0x1610 <actualizarNumero+0xb28>
				case '9': N1 = N1*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
    1600:	0f 2e       	mov	r0, r31
    1602:	c1 2c       	mov	r12, r1
    1604:	d1 2c       	mov	r13, r1
    1606:	f0 e2       	ldi	r31, 0x20	; 32
    1608:	ef 2e       	mov	r14, r31
    160a:	f1 e4       	ldi	r31, 0x41	; 65
    160c:	ff 2e       	mov	r15, r31
    160e:	f0 2d       	mov	r31, r0
				case '4': N2 = N2*sumar + 4/pow(10,contadorPunto); break;
				case '5': N2 = N2*sumar + 5/pow(10,contadorPunto); break;
				case '6': N2 = N2*sumar + 6/pow(10,contadorPunto); break;
				case '7': N2 = N2*sumar + 7/pow(10,contadorPunto); break;
				case '8': N2 = N2*sumar + 8/pow(10,contadorPunto); break;
				case '9': N2 = N2*sumar + 9/pow(10,contadorPunto); break;
    1610:	be 01       	movw	r22, r28
    1612:	0d 2e       	mov	r0, r29
    1614:	00 0c       	add	r0, r0
    1616:	88 0b       	sbc	r24, r24
    1618:	99 0b       	sbc	r25, r25
    161a:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    161e:	9b 01       	movw	r18, r22
    1620:	ac 01       	movw	r20, r24
    1622:	60 e0       	ldi	r22, 0x00	; 0
    1624:	70 e0       	ldi	r23, 0x00	; 0
    1626:	80 e2       	ldi	r24, 0x20	; 32
    1628:	91 e4       	ldi	r25, 0x41	; 65
    162a:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    162e:	4b 01       	movw	r8, r22
    1630:	5c 01       	movw	r10, r24
    1632:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1636:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    163a:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    163e:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1642:	c7 01       	movw	r24, r14
    1644:	b6 01       	movw	r22, r12
    1646:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    164a:	6b 01       	movw	r12, r22
    164c:	7c 01       	movw	r14, r24
    164e:	a5 01       	movw	r20, r10
    1650:	94 01       	movw	r18, r8
    1652:	60 e0       	ldi	r22, 0x00	; 0
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	80 e1       	ldi	r24, 0x10	; 16
    1658:	91 e4       	ldi	r25, 0x41	; 65
    165a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    165e:	9b 01       	movw	r18, r22
    1660:	ac 01       	movw	r20, r24
    1662:	c7 01       	movw	r24, r14
    1664:	b6 01       	movw	r22, r12
    1666:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    166a:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <N2>
    166e:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <N2+0x1>
    1672:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <N2+0x2>
    1676:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <N2+0x3>
    167a:	07 c0       	rjmp	.+14     	; 0x168a <actualizarNumero+0xba2>
			case '.': punto = 1;  break;}
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <punto+0x1>
    1684:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <punto>
    1688:	02 c0       	rjmp	.+4      	; 0x168e <actualizarNumero+0xba6>
			if (punto){ contadorPunto++; }
    168a:	01 2b       	or	r16, r17
    168c:	29 f0       	breq	.+10     	; 0x1698 <actualizarNumero+0xbb0>
    168e:	21 96       	adiw	r28, 0x01	; 1
    1690:	d0 93 9f 01 	sts	0x019F, r29	; 0x80019f <contadorPunto+0x1>
    1694:	c0 93 9e 01 	sts	0x019E, r28	; 0x80019e <contadorPunto>
		mostrar(2);}
    1698:	82 e0       	ldi	r24, 0x02	; 2
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
	}
}
    16a0:	2e c0       	rjmp	.+92     	; 0x16fe <actualizarNumero+0xc16>
	if(contadorPunto < 7){
		if(n == 1)//N1
		{
			float sumar = 10;
			if (punto){ sumar = 1; }
			switch (num){
    16a2:	86 2f       	mov	r24, r22
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	fc 01       	movw	r30, r24
    16a8:	be 97       	sbiw	r30, 0x2e	; 46
    16aa:	ec 30       	cpi	r30, 0x0C	; 12
    16ac:	f1 05       	cpc	r31, r1
    16ae:	08 f0       	brcs	.+2      	; 0x16b2 <actualizarNumero+0xbca>
    16b0:	09 cd       	rjmp	.-1518   	; 0x10c4 <actualizarNumero+0x5dc>
    16b2:	e5 5c       	subi	r30, 0xC5	; 197
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
    16ba:	86 2f       	mov	r24, r22
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	fc 01       	movw	r30, r24
    16c0:	be 97       	sbiw	r30, 0x2e	; 46
    16c2:	ec 30       	cpi	r30, 0x0C	; 12
    16c4:	f1 05       	cpc	r31, r1
    16c6:	08 f0       	brcs	.+2      	; 0x16ca <actualizarNumero+0xbe2>
    16c8:	02 cd       	rjmp	.-1532   	; 0x10ce <actualizarNumero+0x5e6>
    16ca:	e9 5b       	subi	r30, 0xB9	; 185
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
			if (punto){ contadorPunto++; }
			mostrar(0); mostrar(1);
			}else{ //N2
			float sumar = 10;
			if (punto){ sumar = 1; }
			switch (num){
    16d2:	86 2f       	mov	r24, r22
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	fc 01       	movw	r30, r24
    16d8:	be 97       	sbiw	r30, 0x2e	; 46
    16da:	ec 30       	cpi	r30, 0x0C	; 12
    16dc:	f1 05       	cpc	r31, r1
    16de:	b8 f6       	brcc	.-82     	; 0x168e <actualizarNumero+0xba6>
    16e0:	ed 5a       	subi	r30, 0xAD	; 173
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
    16e8:	86 2f       	mov	r24, r22
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	fc 01       	movw	r30, r24
    16ee:	be 97       	sbiw	r30, 0x2e	; 46
    16f0:	ec 30       	cpi	r30, 0x0C	; 12
    16f2:	f1 05       	cpc	r31, r1
    16f4:	88 f6       	brcc	.-94     	; 0x1698 <actualizarNumero+0xbb0>
    16f6:	e1 5a       	subi	r30, 0xA1	; 161
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
				case '9': N2 = N2*sumar + 9/pow(10,contadorPunto); break;
			case '.': punto = 1;  break;}
			if (punto){ contadorPunto++; }
		mostrar(2);}
	}
}
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	ff 90       	pop	r15
    1708:	ef 90       	pop	r14
    170a:	df 90       	pop	r13
    170c:	cf 90       	pop	r12
    170e:	bf 90       	pop	r11
    1710:	af 90       	pop	r10
    1712:	9f 90       	pop	r9
    1714:	8f 90       	pop	r8
    1716:	08 95       	ret

00001718 <calcular1>:

void calcular1(float n, char op) //opera el operador op con un solo numero n y lo guarda en N1
{
    1718:	cf 93       	push	r28
    171a:	c4 2f       	mov	r28, r20
	switch (op){
    171c:	84 2f       	mov	r24, r20
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	fc 01       	movw	r30, r24
    1722:	e3 56       	subi	r30, 0x63	; 99
    1724:	f1 09       	sbc	r31, r1
    1726:	e6 31       	cpi	r30, 0x16	; 22
    1728:	f1 05       	cpc	r31, r1
    172a:	08 f0       	brcs	.+2      	; 0x172e <calcular1+0x16>
    172c:	9f c0       	rjmp	.+318    	; 0x186c <calcular1+0x154>
    172e:	e5 59       	subi	r30, 0x95	; 149
    1730:	ff 4f       	sbci	r31, 0xFF	; 255
    1732:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
		case 'q': N1 = sqrt(N1); break;  //raiz cuadrada
    1736:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    173a:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    173e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1742:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1746:	0e 94 24 1a 	call	0x3448	; 0x3448 <sqrt>
    174a:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    174e:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1752:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    1756:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    175a:	88 c0       	rjmp	.+272    	; 0x186c <calcular1+0x154>
		case 'l': N1 = log(N1); break;   //logaritmo natural
    175c:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1760:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1764:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1768:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    176c:	0e 94 dd 18 	call	0x31ba	; 0x31ba <log>
    1770:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1774:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1778:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    177c:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    1780:	75 c0       	rjmp	.+234    	; 0x186c <calcular1+0x154>
		case 'e': N1 = exp(N1); break;   //exp(x)
    1782:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1786:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    178a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    178e:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1792:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <exp>
    1796:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    179a:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    179e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    17a2:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    17a6:	62 c0       	rjmp	.+196    	; 0x186c <calcular1+0x154>
		case 's': N1 = sin(N1); break;   //sen(x)
    17a8:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    17ac:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    17b0:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    17b4:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    17b8:	0e 94 16 1a 	call	0x342c	; 0x342c <sin>
    17bc:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    17c0:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    17c4:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    17c8:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    17cc:	4f c0       	rjmp	.+158    	; 0x186c <calcular1+0x154>
		case 'c': N1 = cos(N1); break;   //cos(x)
    17ce:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    17d2:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    17d6:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    17da:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    17de:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <cos>
    17e2:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    17e6:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    17ea:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    17ee:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    17f2:	3c c0       	rjmp	.+120    	; 0x186c <calcular1+0x154>
		case 't': N1 = tan(N1); break;   //tg(x)
    17f4:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    17f8:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    17fc:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1800:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1804:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <tan>
    1808:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    180c:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1810:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    1814:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    1818:	29 c0       	rjmp	.+82     	; 0x186c <calcular1+0x154>
		case 'g': N1 = log10(N1); break; //log(x)
    181a:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    181e:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1822:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1826:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    182a:	0e 94 cd 18 	call	0x319a	; 0x319a <log10>
    182e:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1832:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1836:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    183a:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    183e:	16 c0       	rjmp	.+44     	; 0x186c <calcular1+0x154>
	case 'x': N1 = pow(N1,(-1.0)); break;} //x^-1
    1840:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    1844:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    1848:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    184c:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	80 e8       	ldi	r24, 0x80	; 128
    1856:	9f e3       	ldi	r25, 0x3F	; 63
    1858:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    185c:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1860:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1864:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    1868:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
	N2 = 0;
    186c:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1870:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1874:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1878:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
	operador = op;
    187c:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <operador>
	mostrar(3);
    1880:	83 e0       	ldi	r24, 0x03	; 3
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
	mostrar(4);
    1888:	84 e0       	ldi	r24, 0x04	; 4
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
}
    1890:	cf 91       	pop	r28
    1892:	08 95       	ret

00001894 <calcular2>:



void calcular2(float n1, float n2, char op) //opera n1 op n2 y lo guarda en N1
{
    1894:	0f 93       	push	r16
	switch (op){
    1896:	0d 32       	cpi	r16, 0x2D	; 45
    1898:	49 f1       	breq	.+82     	; 0x18ec <calcular2+0x58>
    189a:	30 f4       	brcc	.+12     	; 0x18a8 <calcular2+0x14>
    189c:	0a 32       	cpi	r16, 0x2A	; 42
    189e:	09 f4       	brne	.+2      	; 0x18a2 <calcular2+0xe>
    18a0:	40 c0       	rjmp	.+128    	; 0x1922 <calcular2+0x8e>
    18a2:	0b 32       	cpi	r16, 0x2B	; 43
    18a4:	41 f0       	breq	.+16     	; 0x18b6 <calcular2+0x22>
    18a6:	8d c0       	rjmp	.+282    	; 0x19c2 <calcular2+0x12e>
    18a8:	0f 32       	cpi	r16, 0x2F	; 47
    18aa:	09 f4       	brne	.+2      	; 0x18ae <calcular2+0x1a>
    18ac:	55 c0       	rjmp	.+170    	; 0x1958 <calcular2+0xc4>
    18ae:	0e 35       	cpi	r16, 0x5E	; 94
    18b0:	09 f4       	brne	.+2      	; 0x18b4 <calcular2+0x20>
    18b2:	6d c0       	rjmp	.+218    	; 0x198e <calcular2+0xfa>
    18b4:	86 c0       	rjmp	.+268    	; 0x19c2 <calcular2+0x12e>
		case '+': N1 = N1 + N2; break;  // +
    18b6:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    18ba:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    18be:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    18c2:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    18c6:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    18ca:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    18ce:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    18d2:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    18d6:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    18da:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    18de:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    18e2:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    18e6:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    18ea:	6b c0       	rjmp	.+214    	; 0x19c2 <calcular2+0x12e>
		case '-': N1 = N1 - N2; break;  // -
    18ec:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    18f0:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    18f4:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    18f8:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    18fc:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1900:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1904:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1908:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    190c:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <__subsf3>
    1910:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1914:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1918:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    191c:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    1920:	50 c0       	rjmp	.+160    	; 0x19c2 <calcular2+0x12e>
		case '*': N1 = N1 * N2; break;  // *
    1922:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1926:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    192a:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    192e:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1932:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1936:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    193a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    193e:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1942:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    1946:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    194a:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    194e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    1952:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    1956:	35 c0       	rjmp	.+106    	; 0x19c2 <calcular2+0x12e>
		case '/': N1 = N1 / N2; break;  // /  ver el caso N2 = 0!!!
    1958:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    195c:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1960:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1964:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1968:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    196c:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1970:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1974:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1978:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__divsf3>
    197c:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    1980:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    1984:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    1988:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
    198c:	1a c0       	rjmp	.+52     	; 0x19c2 <calcular2+0x12e>
	case '^': N1 = pow(N1,N2); break;}   // ^ Falta aca
    198e:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1992:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1996:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    199a:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    199e:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    19a2:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    19a6:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    19aa:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    19ae:	0e 94 c6 19 	call	0x338c	; 0x338c <pow>
    19b2:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <N1>
    19b6:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <N1+0x1>
    19ba:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <N1+0x2>
    19be:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <N1+0x3>
	N2 = 0;
    19c2:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    19c6:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    19ca:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    19ce:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
	mostrar(4);
    19d2:	84 e0       	ldi	r24, 0x04	; 4
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
}
    19da:	0f 91       	pop	r16
    19dc:	08 95       	ret

000019de <calculadora>:

void calculadora(char entrada) //basado en diagrama estados calculadora
{
    19de:	0f 93       	push	r16
    19e0:	cf 93       	push	r28
    19e2:	c8 2f       	mov	r28, r24
	if(ovfe)
    19e4:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <ovfe>
    19e8:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <ovfe+0x1>
    19ec:	89 2b       	or	r24, r25
    19ee:	39 f0       	breq	.+14     	; 0x19fe <calculadora+0x20>
	{
		estado = 4;
    19f0:	84 e0       	ldi	r24, 0x04	; 4
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    19f8:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    19fc:	12 c5       	rjmp	.+2596   	; 0x2422 <calculadora+0xa44>
	}
	switch (estado)
    19fe:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <estado>
    1a02:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <estado+0x1>
    1a06:	82 30       	cpi	r24, 0x02	; 2
    1a08:	91 05       	cpc	r25, r1
    1a0a:	09 f4       	brne	.+2      	; 0x1a0e <calculadora+0x30>
    1a0c:	0d c2       	rjmp	.+1050   	; 0x1e28 <calculadora+0x44a>
    1a0e:	30 f4       	brcc	.+12     	; 0x1a1c <calculadora+0x3e>
    1a10:	00 97       	sbiw	r24, 0x00	; 0
    1a12:	61 f0       	breq	.+24     	; 0x1a2c <calculadora+0x4e>
    1a14:	01 97       	sbiw	r24, 0x01	; 1
    1a16:	09 f4       	brne	.+2      	; 0x1a1a <calculadora+0x3c>
    1a18:	3a c1       	rjmp	.+628    	; 0x1c8e <calculadora+0x2b0>
    1a1a:	4d c5       	rjmp	.+2714   	; 0x24b6 <calculadora+0xad8>
    1a1c:	83 30       	cpi	r24, 0x03	; 3
    1a1e:	91 05       	cpc	r25, r1
    1a20:	09 f4       	brne	.+2      	; 0x1a24 <calculadora+0x46>
    1a22:	b8 c3       	rjmp	.+1904   	; 0x2194 <calculadora+0x7b6>
    1a24:	04 97       	sbiw	r24, 0x04	; 4
    1a26:	09 f0       	breq	.+2      	; 0x1a2a <calculadora+0x4c>
    1a28:	46 c5       	rjmp	.+2700   	; 0x24b6 <calculadora+0xad8>
    1a2a:	fb c4       	rjmp	.+2550   	; 0x2422 <calculadora+0xa44>
	{
		case 0: //estado 0
		if((entrada == '0')||
    1a2c:	80 ed       	ldi	r24, 0xD0	; 208
    1a2e:	8c 0f       	add	r24, r28
    1a30:	8a 30       	cpi	r24, 0x0A	; 10
    1a32:	10 f0       	brcs	.+4      	; 0x1a38 <calculadora+0x5a>
		(entrada == '4')||
		(entrada == '5')||
		(entrada == '6')||
		(entrada == '7')||
		(entrada == '8')||
		(entrada == '9')||
    1a34:	ce 32       	cpi	r28, 0x2E	; 46
    1a36:	51 f4       	brne	.+20     	; 0x1a4c <calculadora+0x6e>
		(entrada == '.')) { actualizarNumero(1,entrada); estado = 0;}
    1a38:	6c 2f       	mov	r22, r28
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	0e 94 74 05 	call	0xae8	; 0xae8 <actualizarNumero>
    1a42:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1a46:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1a4a:	35 c5       	rjmp	.+2666   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == '+')||
    1a4c:	8c 2f       	mov	r24, r28
    1a4e:	8d 7f       	andi	r24, 0xFD	; 253
    1a50:	8d 32       	cpi	r24, 0x2D	; 45
    1a52:	31 f0       	breq	.+12     	; 0x1a60 <calculadora+0x82>
		(entrada == '-')||
    1a54:	86 ed       	ldi	r24, 0xD6	; 214
    1a56:	8c 0f       	add	r24, r28
    1a58:	82 30       	cpi	r24, 0x02	; 2
    1a5a:	10 f0       	brcs	.+4      	; 0x1a60 <calculadora+0x82>
		(entrada == '*')||
		(entrada == '/')||
    1a5c:	ce 35       	cpi	r28, 0x5E	; 94
    1a5e:	69 f4       	brne	.+26     	; 0x1a7a <calculadora+0x9c>
		(entrada == '^')) {operador = entrada; estado = 1;mostrar(3);}
    1a60:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <operador>
    1a64:	81 e0       	ldi	r24, 0x01	; 1
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1a6c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1a70:	83 e0       	ldi	r24, 0x03	; 3
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1a78:	1e c5       	rjmp	.+2620   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == 'q')||
    1a7a:	c1 37       	cpi	r28, 0x71	; 113
    1a7c:	71 f0       	breq	.+28     	; 0x1a9a <calculadora+0xbc>
    1a7e:	cc 36       	cpi	r28, 0x6C	; 108
    1a80:	61 f0       	breq	.+24     	; 0x1a9a <calculadora+0xbc>
		(entrada == 'l')||
    1a82:	c5 36       	cpi	r28, 0x65	; 101
    1a84:	51 f0       	breq	.+20     	; 0x1a9a <calculadora+0xbc>
		(entrada == 'e')||
    1a86:	8d e8       	ldi	r24, 0x8D	; 141
    1a88:	8c 0f       	add	r24, r28
    1a8a:	82 30       	cpi	r24, 0x02	; 2
    1a8c:	30 f0       	brcs	.+12     	; 0x1a9a <calculadora+0xbc>
		(entrada == 's')||
    1a8e:	8c 2f       	mov	r24, r28
    1a90:	8b 7f       	andi	r24, 0xFB	; 251
    1a92:	83 36       	cpi	r24, 0x63	; 99
    1a94:	11 f0       	breq	.+4      	; 0x1a9a <calculadora+0xbc>
		(entrada == 'c')||
		(entrada == 't')||
		(entrada == 'g')||
    1a96:	c8 37       	cpi	r28, 0x78	; 120
    1a98:	91 f4       	brne	.+36     	; 0x1abe <calculadora+0xe0>
		(entrada == 'x')) {calcular1(N1,entrada);   estado = 3;}
    1a9a:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1a9e:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1aa2:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1aa6:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1aaa:	4c 2f       	mov	r20, r28
    1aac:	0e 94 8c 0b 	call	0x1718	; 0x1718 <calcular1>
    1ab0:	83 e0       	ldi	r24, 0x03	; 3
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1ab8:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1abc:	fc c4       	rjmp	.+2552   	; 0x24b6 <calculadora+0xad8>
		else{
			switch (entrada){
    1abe:	c6 36       	cpi	r28, 0x66	; 102
    1ac0:	09 f4       	brne	.+2      	; 0x1ac4 <calculadora+0xe6>
    1ac2:	da c0       	rjmp	.+436    	; 0x1c78 <calculadora+0x29a>
    1ac4:	38 f4       	brcc	.+14     	; 0x1ad4 <calculadora+0xf6>
    1ac6:	c1 36       	cpi	r28, 0x61	; 97
    1ac8:	09 f4       	brne	.+2      	; 0x1acc <calculadora+0xee>
    1aca:	b5 c0       	rjmp	.+362    	; 0x1c36 <calculadora+0x258>
    1acc:	c4 36       	cpi	r28, 0x64	; 100
    1ace:	09 f4       	brne	.+2      	; 0x1ad2 <calculadora+0xf4>
    1ad0:	4c c0       	rjmp	.+152    	; 0x1b6a <calculadora+0x18c>
    1ad2:	f1 c4       	rjmp	.+2530   	; 0x24b6 <calculadora+0xad8>
    1ad4:	ce 36       	cpi	r28, 0x6E	; 110
    1ad6:	09 f4       	brne	.+2      	; 0x1ada <calculadora+0xfc>
    1ad8:	7b c0       	rjmp	.+246    	; 0x1bd0 <calculadora+0x1f2>
    1ada:	c0 37       	cpi	r28, 0x70	; 112
    1adc:	21 f0       	breq	.+8      	; 0x1ae6 <calculadora+0x108>
    1ade:	cd 36       	cpi	r28, 0x6D	; 109
    1ae0:	09 f0       	breq	.+2      	; 0x1ae4 <calculadora+0x106>
    1ae2:	e9 c4       	rjmp	.+2514   	; 0x24b6 <calculadora+0xad8>
    1ae4:	1b c0       	rjmp	.+54     	; 0x1b1c <calculadora+0x13e>
				case 'p': N1 = pi;              estado = 3; mostrar(0); mostrar(1); break;
    1ae6:	80 e0       	ldi	r24, 0x00	; 0
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	a0 e4       	ldi	r26, 0x40	; 64
    1aec:	b0 e4       	ldi	r27, 0x40	; 64
    1aee:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <N1>
    1af2:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <N1+0x1>
    1af6:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <N1+0x2>
    1afa:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <N1+0x3>
    1afe:	83 e0       	ldi	r24, 0x03	; 3
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1b06:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1b1a:	cd c4       	rjmp	.+2458   	; 0x24b6 <calculadora+0xad8>
				case 'm': N1 = M; N2 = 0;       estado = 3; mostrar(0); mostrar(1); break;
    1b1c:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <M>
    1b20:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <M+0x1>
    1b24:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <M+0x2>
    1b28:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <M+0x3>
    1b2c:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <N1>
    1b30:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <N1+0x1>
    1b34:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <N1+0x2>
    1b38:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <N1+0x3>
    1b3c:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1b40:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1b44:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1b48:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1b4c:	83 e0       	ldi	r24, 0x03	; 3
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1b54:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1b58:	80 e0       	ldi	r24, 0x00	; 0
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1b68:	a6 c4       	rjmp	.+2380   	; 0x24b6 <calculadora+0xad8>
				case 'd': M = M + N1; N1 = 0; N2 = 0; estado = 0; mostrar(0); break;
    1b6a:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    1b6e:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    1b72:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    1b76:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    1b7a:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    1b7e:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    1b82:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    1b86:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    1b8a:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    1b8e:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    1b92:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    1b96:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    1b9a:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    1b9e:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    1ba2:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    1ba6:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    1baa:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    1bae:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1bb2:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1bb6:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1bba:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1bbe:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1bc2:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1bce:	73 c4       	rjmp	.+2278   	; 0x24b6 <calculadora+0xad8>
				case 'n': M = M - N1; N1 = 0; N2 = 0; estado = 0; mostrar(0); break;
    1bd0:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    1bd4:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    1bd8:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    1bdc:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    1be0:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    1be4:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    1be8:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    1bec:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    1bf0:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <__subsf3>
    1bf4:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    1bf8:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    1bfc:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    1c00:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    1c04:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    1c08:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    1c0c:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    1c10:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    1c14:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1c18:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1c1c:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1c20:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1c24:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1c28:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1c2c:	80 e0       	ldi	r24, 0x00	; 0
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1c34:	40 c4       	rjmp	.+2176   	; 0x24b6 <calculadora+0xad8>
				case 'a': M = 0;  N1 = 0; N2 = 0;     estado = 0; mostrar(0); break;
    1c36:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <M>
    1c3a:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <M+0x1>
    1c3e:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <M+0x2>
    1c42:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <M+0x3>
    1c46:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    1c4a:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    1c4e:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    1c52:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    1c56:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1c5a:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1c5e:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1c62:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1c66:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1c6a:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1c6e:	80 e0       	ldi	r24, 0x00	; 0
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1c76:	1f c4       	rjmp	.+2110   	; 0x24b6 <calculadora+0xad8>
				case 'f': mostrar(5); estado = 4; break;
    1c78:	85 e0       	ldi	r24, 0x05	; 5
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1c80:	84 e0       	ldi	r24, 0x04	; 4
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1c88:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1c8c:	14 c4       	rjmp	.+2088   	; 0x24b6 <calculadora+0xad8>
			}
		}break;
		
		case 1: //estado 1
		punto = 0;
    1c8e:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <punto+0x1>
    1c92:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <punto>
		contadorPunto = 0;
    1c96:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <contadorPunto+0x1>
    1c9a:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <contadorPunto>
		if((entrada == '0')||
    1c9e:	80 ed       	ldi	r24, 0xD0	; 208
    1ca0:	8c 0f       	add	r24, r28
    1ca2:	8a 30       	cpi	r24, 0x0A	; 10
    1ca4:	10 f0       	brcs	.+4      	; 0x1caa <calculadora+0x2cc>
		(entrada == '4')||
		(entrada == '5')||
		(entrada == '6')||
		(entrada == '7')||
		(entrada == '8')||
		(entrada == '9')||
    1ca6:	ce 32       	cpi	r28, 0x2E	; 46
    1ca8:	a1 f4       	brne	.+40     	; 0x1cd2 <calculadora+0x2f4>
		(entrada == '.')) { N2 = 0; actualizarNumero(2,entrada); estado = 2;}
    1caa:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1cae:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1cb2:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1cb6:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1cba:	6c 2f       	mov	r22, r28
    1cbc:	82 e0       	ldi	r24, 0x02	; 2
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	0e 94 74 05 	call	0xae8	; 0xae8 <actualizarNumero>
    1cc4:	82 e0       	ldi	r24, 0x02	; 2
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1ccc:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1cd0:	f2 c3       	rjmp	.+2020   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == '+')||
    1cd2:	8c 2f       	mov	r24, r28
    1cd4:	8d 7f       	andi	r24, 0xFD	; 253
    1cd6:	8d 32       	cpi	r24, 0x2D	; 45
    1cd8:	31 f0       	breq	.+12     	; 0x1ce6 <calculadora+0x308>
		(entrada == '-')||
    1cda:	86 ed       	ldi	r24, 0xD6	; 214
    1cdc:	8c 0f       	add	r24, r28
    1cde:	82 30       	cpi	r24, 0x02	; 2
    1ce0:	10 f0       	brcs	.+4      	; 0x1ce6 <calculadora+0x308>
		(entrada == '*')||
		(entrada == '/')||
    1ce2:	ce 35       	cpi	r28, 0x5E	; 94
    1ce4:	69 f4       	brne	.+26     	; 0x1d00 <calculadora+0x322>
		(entrada == '^')) {operador = entrada; estado = 1; mostrar(3);}
    1ce6:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <operador>
    1cea:	81 e0       	ldi	r24, 0x01	; 1
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1cf2:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1cf6:	83 e0       	ldi	r24, 0x03	; 3
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1cfe:	db c3       	rjmp	.+1974   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == 'q')||
    1d00:	c1 37       	cpi	r28, 0x71	; 113
    1d02:	81 f0       	breq	.+32     	; 0x1d24 <calculadora+0x346>
    1d04:	84 e9       	ldi	r24, 0x94	; 148
    1d06:	8c 0f       	add	r24, r28
    1d08:	83 30       	cpi	r24, 0x03	; 3
    1d0a:	60 f0       	brcs	.+24     	; 0x1d24 <calculadora+0x346>
		(entrada == 'l')||
		(entrada == 'e')||
    1d0c:	8d e8       	ldi	r24, 0x8D	; 141
    1d0e:	8c 0f       	add	r24, r28
    1d10:	82 30       	cpi	r24, 0x02	; 2
    1d12:	40 f0       	brcs	.+16     	; 0x1d24 <calculadora+0x346>
		(entrada == 's')||
    1d14:	8d e9       	ldi	r24, 0x9D	; 157
    1d16:	8c 0f       	add	r24, r28
    1d18:	83 30       	cpi	r24, 0x03	; 3
    1d1a:	20 f0       	brcs	.+8      	; 0x1d24 <calculadora+0x346>
		(entrada == 'c')||
		(entrada == 't')||
    1d1c:	c7 36       	cpi	r28, 0x67	; 103
    1d1e:	11 f0       	breq	.+4      	; 0x1d24 <calculadora+0x346>
		(entrada == 'g')||
    1d20:	c8 37       	cpi	r28, 0x78	; 120
    1d22:	79 f4       	brne	.+30     	; 0x1d42 <calculadora+0x364>
		(entrada == 'x')||
		(entrada == 'm')||
		(entrada == 'd')||
		(entrada == 'n')) { estado = 4; mostrar(0); mostrar(6);} //error
    1d24:	84 e0       	ldi	r24, 0x04	; 4
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1d2c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1d30:	80 e0       	ldi	r24, 0x00	; 0
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1d38:	86 e0       	ldi	r24, 0x06	; 6
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1d40:	ba c3       	rjmp	.+1908   	; 0x24b6 <calculadora+0xad8>
		else{
			switch (entrada){
    1d42:	c1 36       	cpi	r28, 0x61	; 97
    1d44:	91 f1       	breq	.+100    	; 0x1daa <calculadora+0x3cc>
    1d46:	20 f4       	brcc	.+8      	; 0x1d50 <calculadora+0x372>
    1d48:	cd 33       	cpi	r28, 0x3D	; 61
    1d4a:	09 f4       	brne	.+2      	; 0x1d4e <calculadora+0x370>
    1d4c:	4f c0       	rjmp	.+158    	; 0x1dec <calculadora+0x40e>
    1d4e:	b3 c3       	rjmp	.+1894   	; 0x24b6 <calculadora+0xad8>
    1d50:	c6 36       	cpi	r28, 0x66	; 102
    1d52:	09 f4       	brne	.+2      	; 0x1d56 <calculadora+0x378>
    1d54:	5e c0       	rjmp	.+188    	; 0x1e12 <calculadora+0x434>
    1d56:	c0 37       	cpi	r28, 0x70	; 112
    1d58:	09 f0       	breq	.+2      	; 0x1d5c <calculadora+0x37e>
    1d5a:	ad c3       	rjmp	.+1882   	; 0x24b6 <calculadora+0xad8>
				case 'p': N2 = pi;  calcular2(N1,N2,operador);  estado = 3; mostrar(2); break;
    1d5c:	80 e0       	ldi	r24, 0x00	; 0
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	a0 e4       	ldi	r26, 0x40	; 64
    1d62:	b0 e4       	ldi	r27, 0x40	; 64
    1d64:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <N2>
    1d68:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <N2+0x1>
    1d6c:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <N2+0x2>
    1d70:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <N2+0x3>
    1d74:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1d78:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1d7c:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1d80:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1d84:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	40 e4       	ldi	r20, 0x40	; 64
    1d8e:	50 e4       	ldi	r21, 0x40	; 64
    1d90:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1d94:	83 e0       	ldi	r24, 0x03	; 3
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1d9c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1da0:	82 e0       	ldi	r24, 0x02	; 2
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1da8:	86 c3       	rjmp	.+1804   	; 0x24b6 <calculadora+0xad8>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    contadorPunto = 0; estado = 0; mostrar(0);   break;
    1daa:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <M>
    1dae:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <M+0x1>
    1db2:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <M+0x2>
    1db6:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <M+0x3>
    1dba:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    1dbe:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    1dc2:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    1dc6:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    1dca:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1dce:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1dd2:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1dd6:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1dda:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1dde:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1dea:	65 c3       	rjmp	.+1738   	; 0x24b6 <calculadora+0xad8>
				case '=': calcular2(N1,N1,operador);    estado = 0; break;
    1dec:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1df0:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1df4:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1df8:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1dfc:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1e00:	9b 01       	movw	r18, r22
    1e02:	ac 01       	movw	r20, r24
    1e04:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1e08:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1e0c:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1e10:	52 c3       	rjmp	.+1700   	; 0x24b6 <calculadora+0xad8>
				case 'f': mostrar(5); estado = 4; break;
    1e12:	85 e0       	ldi	r24, 0x05	; 5
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1e1a:	84 e0       	ldi	r24, 0x04	; 4
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1e22:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1e26:	47 c3       	rjmp	.+1678   	; 0x24b6 <calculadora+0xad8>
			}
		}
		break;
		
		case 2: //estado 2
		if((entrada == '0')||
    1e28:	80 ed       	ldi	r24, 0xD0	; 208
    1e2a:	8c 0f       	add	r24, r28
    1e2c:	8a 30       	cpi	r24, 0x0A	; 10
    1e2e:	10 f0       	brcs	.+4      	; 0x1e34 <calculadora+0x456>
		(entrada == '4')||
		(entrada == '5')||
		(entrada == '6')||
		(entrada == '7')||
		(entrada == '8')||
		(entrada == '9')||
    1e30:	ce 32       	cpi	r28, 0x2E	; 46
    1e32:	61 f4       	brne	.+24     	; 0x1e4c <calculadora+0x46e>
		(entrada == '.')) { actualizarNumero(2,entrada); estado = 2;}
    1e34:	6c 2f       	mov	r22, r28
    1e36:	82 e0       	ldi	r24, 0x02	; 2
    1e38:	90 e0       	ldi	r25, 0x00	; 0
    1e3a:	0e 94 74 05 	call	0xae8	; 0xae8 <actualizarNumero>
    1e3e:	82 e0       	ldi	r24, 0x02	; 2
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1e46:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1e4a:	35 c3       	rjmp	.+1642   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == '+')||
    1e4c:	8c 2f       	mov	r24, r28
    1e4e:	8d 7f       	andi	r24, 0xFD	; 253
    1e50:	8d 32       	cpi	r24, 0x2D	; 45
    1e52:	31 f0       	breq	.+12     	; 0x1e60 <calculadora+0x482>
		(entrada == '-')||
    1e54:	86 ed       	ldi	r24, 0xD6	; 214
    1e56:	8c 0f       	add	r24, r28
    1e58:	82 30       	cpi	r24, 0x02	; 2
    1e5a:	10 f0       	brcs	.+4      	; 0x1e60 <calculadora+0x482>
		(entrada == '*')||
		(entrada == '/')||
    1e5c:	ce 35       	cpi	r28, 0x5E	; 94
    1e5e:	49 f5       	brne	.+82     	; 0x1eb2 <calculadora+0x4d4>
		(entrada == '^')) { calcular2(N1,N2,operador); estado = 1;  operador = entrada; mostrar(0); mostrar(1); mostrar(3); }
    1e60:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1e64:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1e68:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1e6c:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1e70:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1e74:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1e78:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1e7c:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1e80:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1e84:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1e90:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1e94:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <operador>
    1e98:	80 e0       	ldi	r24, 0x00	; 0
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1ea0:	81 e0       	ldi	r24, 0x01	; 1
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1ea8:	83 e0       	ldi	r24, 0x03	; 3
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1eb0:	02 c3       	rjmp	.+1540   	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == 'q')||
    1eb2:	c1 37       	cpi	r28, 0x71	; 113
    1eb4:	71 f0       	breq	.+28     	; 0x1ed2 <calculadora+0x4f4>
    1eb6:	cc 36       	cpi	r28, 0x6C	; 108
    1eb8:	61 f0       	breq	.+24     	; 0x1ed2 <calculadora+0x4f4>
		(entrada == 'l')||
    1eba:	c5 36       	cpi	r28, 0x65	; 101
    1ebc:	51 f0       	breq	.+20     	; 0x1ed2 <calculadora+0x4f4>
		(entrada == 'e')||
    1ebe:	8d e8       	ldi	r24, 0x8D	; 141
    1ec0:	8c 0f       	add	r24, r28
    1ec2:	82 30       	cpi	r24, 0x02	; 2
    1ec4:	30 f0       	brcs	.+12     	; 0x1ed2 <calculadora+0x4f4>
		(entrada == 's')||
    1ec6:	8c 2f       	mov	r24, r28
    1ec8:	8b 7f       	andi	r24, 0xFB	; 251
    1eca:	83 36       	cpi	r24, 0x63	; 99
    1ecc:	11 f0       	breq	.+4      	; 0x1ed2 <calculadora+0x4f4>
		(entrada == 'c')||
		(entrada == 't')||
		(entrada == 'g')||
    1ece:	c8 37       	cpi	r28, 0x78	; 120
    1ed0:	31 f5       	brne	.+76     	; 0x1f1e <calculadora+0x540>
		(entrada == 'x')) {calcular2(N1,N2,operador); calcular1(N1,entrada); estado = 3;}
    1ed2:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1ed6:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1eda:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1ede:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1ee2:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1ee6:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1eea:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1eee:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1ef2:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1ef6:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1efa:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1efe:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1f02:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1f06:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1f0a:	4c 2f       	mov	r20, r28
    1f0c:	0e 94 8c 0b 	call	0x1718	; 0x1718 <calcular1>
    1f10:	83 e0       	ldi	r24, 0x03	; 3
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1f18:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1f1c:	cc c2       	rjmp	.+1432   	; 0x24b6 <calculadora+0xad8>
		else{
			switch (entrada){
    1f1e:	8c 2f       	mov	r24, r28
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	fc 01       	movw	r30, r24
    1f24:	fd 97       	sbiw	r30, 0x3d	; 61
    1f26:	e4 33       	cpi	r30, 0x34	; 52
    1f28:	f1 05       	cpc	r31, r1
    1f2a:	08 f0       	brcs	.+2      	; 0x1f2e <calculadora+0x550>
    1f2c:	c4 c2       	rjmp	.+1416   	; 0x24b6 <calculadora+0xad8>
    1f2e:	ef 57       	subi	r30, 0x7F	; 127
    1f30:	ff 4f       	sbci	r31, 0xFF	; 255
    1f32:	0c 94 b2 1a 	jmp	0x3564	; 0x3564 <__tablejump2__>
				case 'p': N2 = pi;  calcular2(N1,N2,operador);  estado = 3; mostrar(2); break;
    1f36:	80 e0       	ldi	r24, 0x00	; 0
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	a0 e4       	ldi	r26, 0x40	; 64
    1f3c:	b0 e4       	ldi	r27, 0x40	; 64
    1f3e:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <N2>
    1f42:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <N2+0x1>
    1f46:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <N2+0x2>
    1f4a:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <N2+0x3>
    1f4e:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1f52:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1f56:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1f5a:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1f5e:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	30 e0       	ldi	r19, 0x00	; 0
    1f66:	40 e4       	ldi	r20, 0x40	; 64
    1f68:	50 e4       	ldi	r21, 0x40	; 64
    1f6a:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1f6e:	83 e0       	ldi	r24, 0x03	; 3
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    1f76:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    1f7a:	82 e0       	ldi	r24, 0x02	; 2
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1f82:	99 c2       	rjmp	.+1330   	; 0x24b6 <calculadora+0xad8>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;  contadorPunto = 0; estado = 0; mostrar(0);  break;
    1f84:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <M>
    1f88:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <M+0x1>
    1f8c:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <M+0x2>
    1f90:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <M+0x3>
    1f94:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    1f98:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    1f9c:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    1fa0:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    1fa4:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    1fa8:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    1fac:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    1fb0:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    1fb4:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <punto+0x1>
    1fb8:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <punto>
    1fbc:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <contadorPunto+0x1>
    1fc0:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <contadorPunto>
    1fc4:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    1fc8:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    1fd4:	70 c2       	rjmp	.+1248   	; 0x24b6 <calculadora+0xad8>
				case '=': calcular2(N1,N2,operador);  estado = 3; mostrar(2);   break;
    1fd6:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    1fda:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    1fde:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    1fe2:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    1fe6:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    1fea:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    1fee:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    1ff2:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    1ff6:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    1ffa:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    1ffe:	83 e0       	ldi	r24, 0x03	; 3
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    2006:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    200a:	82 e0       	ldi	r24, 0x02	; 2
    200c:	90 e0       	ldi	r25, 0x00	; 0
    200e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2012:	51 c2       	rjmp	.+1186   	; 0x24b6 <calculadora+0xad8>
				case 'm': N1 = M; N2 = 0;      estado = 3;  mostrar(0); mostrar(1);     break;
    2014:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <M>
    2018:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <M+0x1>
    201c:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <M+0x2>
    2020:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <M+0x3>
    2024:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <N1>
    2028:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <N1+0x1>
    202c:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <N1+0x2>
    2030:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <N1+0x3>
    2034:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    2038:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    203c:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    2040:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    2044:	83 e0       	ldi	r24, 0x03	; 3
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    204c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2050:	80 e0       	ldi	r24, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2060:	2a c2       	rjmp	.+1108   	; 0x24b6 <calculadora+0xad8>
				case 'd': calcular2(N1,N2,operador); M = M + N1; N1 = 0; N2 = 0;  estado = 0; mostrar(0);  break;
    2062:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    2066:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    206a:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    206e:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    2072:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    2076:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    207a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    207e:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    2082:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    2086:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    208a:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    208e:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    2092:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    2096:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    209a:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    209e:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    20a2:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    20a6:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    20aa:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    20ae:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    20b2:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    20b6:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    20ba:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    20be:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    20c2:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    20c6:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    20ca:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    20ce:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    20d2:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    20d6:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    20da:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    20de:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    20e2:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    20e6:	80 e0       	ldi	r24, 0x00	; 0
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    20ee:	e3 c1       	rjmp	.+966    	; 0x24b6 <calculadora+0xad8>
				case 'n': calcular2(N1,N2,operador); M = M - N1; N1 = 0; N2 = 0;  estado = 0; mostrar(0);  break;
    20f0:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <N2>
    20f4:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <N2+0x1>
    20f8:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <N2+0x2>
    20fc:	50 91 ab 01 	lds	r21, 0x01AB	; 0x8001ab <N2+0x3>
    2100:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    2104:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    2108:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    210c:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    2110:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <operador>
    2114:	0e 94 4a 0c 	call	0x1894	; 0x1894 <calcular2>
    2118:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    211c:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    2120:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    2124:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    2128:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    212c:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    2130:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    2134:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    2138:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <__subsf3>
    213c:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    2140:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    2144:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    2148:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    214c:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    2150:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    2154:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    2158:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    215c:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    2160:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    2164:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    2168:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    216c:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    2170:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    217c:	9c c1       	rjmp	.+824    	; 0x24b6 <calculadora+0xad8>
				case 'f': mostrar(5); estado = 4; break;
    217e:	85 e0       	ldi	r24, 0x05	; 5
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2186:	84 e0       	ldi	r24, 0x04	; 4
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    218e:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2192:	91 c1       	rjmp	.+802    	; 0x24b6 <calculadora+0xad8>
			}
		}
		break;
		
		case 3: //estado 3
		punto = 0;
    2194:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <punto+0x1>
    2198:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <punto>
		contadorPunto = 0;
    219c:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <contadorPunto+0x1>
    21a0:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <contadorPunto>
		if((entrada == '0')||
    21a4:	80 ed       	ldi	r24, 0xD0	; 208
    21a6:	8c 0f       	add	r24, r28
    21a8:	8a 30       	cpi	r24, 0x0A	; 10
    21aa:	10 f0       	brcs	.+4      	; 0x21b0 <calculadora+0x7d2>
		(entrada == '4')||
		(entrada == '5')||
		(entrada == '6')||
		(entrada == '7')||
		(entrada == '8')||
		(entrada == '9')||
    21ac:	ce 32       	cpi	r28, 0x2E	; 46
    21ae:	91 f4       	brne	.+36     	; 0x21d4 <calculadora+0x7f6>
		(entrada == '.')) { N1 = 0; actualizarNumero(1,entrada); estado = 0;}
    21b0:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    21b4:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    21b8:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    21bc:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    21c0:	6c 2f       	mov	r22, r28
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	0e 94 74 05 	call	0xae8	; 0xae8 <actualizarNumero>
    21ca:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    21ce:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    21d2:	71 c1       	rjmp	.+738    	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == '+')||
    21d4:	8c 2f       	mov	r24, r28
    21d6:	8d 7f       	andi	r24, 0xFD	; 253
    21d8:	8d 32       	cpi	r24, 0x2D	; 45
    21da:	31 f0       	breq	.+12     	; 0x21e8 <calculadora+0x80a>
		(entrada == '-')||
    21dc:	86 ed       	ldi	r24, 0xD6	; 214
    21de:	8c 0f       	add	r24, r28
    21e0:	82 30       	cpi	r24, 0x02	; 2
    21e2:	10 f0       	brcs	.+4      	; 0x21e8 <calculadora+0x80a>
		(entrada == '*')||
		(entrada == '/')||
    21e4:	ce 35       	cpi	r28, 0x5E	; 94
    21e6:	99 f4       	brne	.+38     	; 0x220e <calculadora+0x830>
		(entrada == '^')) {operador = entrada; mostrar(0); estado = 1; mostrar(1); mostrar(3);  }
    21e8:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <operador>
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    21fc:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2200:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2204:	83 e0       	ldi	r24, 0x03	; 3
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    220c:	54 c1       	rjmp	.+680    	; 0x24b6 <calculadora+0xad8>
		else if ((entrada == 'q')||
    220e:	c1 37       	cpi	r28, 0x71	; 113
    2210:	71 f0       	breq	.+28     	; 0x222e <calculadora+0x850>
    2212:	cc 36       	cpi	r28, 0x6C	; 108
    2214:	61 f0       	breq	.+24     	; 0x222e <calculadora+0x850>
		(entrada == 'l')||
    2216:	c5 36       	cpi	r28, 0x65	; 101
    2218:	51 f0       	breq	.+20     	; 0x222e <calculadora+0x850>
		(entrada == 'e')||
    221a:	8d e8       	ldi	r24, 0x8D	; 141
    221c:	8c 0f       	add	r24, r28
    221e:	82 30       	cpi	r24, 0x02	; 2
    2220:	30 f0       	brcs	.+12     	; 0x222e <calculadora+0x850>
		(entrada == 's')||
    2222:	8c 2f       	mov	r24, r28
    2224:	8b 7f       	andi	r24, 0xFB	; 251
    2226:	83 36       	cpi	r24, 0x63	; 99
    2228:	11 f0       	breq	.+4      	; 0x222e <calculadora+0x850>
		(entrada == 'c')||
		(entrada == 't')||
		(entrada == 'g')||
    222a:	c8 37       	cpi	r28, 0x78	; 120
    222c:	91 f4       	brne	.+36     	; 0x2252 <calculadora+0x874>
		(entrada == 'x')) {calcular1(N1,entrada);   estado = 3;}
    222e:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <N1>
    2232:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <N1+0x1>
    2236:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <N1+0x2>
    223a:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <N1+0x3>
    223e:	4c 2f       	mov	r20, r28
    2240:	0e 94 8c 0b 	call	0x1718	; 0x1718 <calcular1>
    2244:	83 e0       	ldi	r24, 0x03	; 3
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    224c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2250:	32 c1       	rjmp	.+612    	; 0x24b6 <calculadora+0xad8>
		else{
			switch (entrada){
    2252:	c6 36       	cpi	r28, 0x66	; 102
    2254:	09 f4       	brne	.+2      	; 0x2258 <calculadora+0x87a>
    2256:	da c0       	rjmp	.+436    	; 0x240c <calculadora+0xa2e>
    2258:	38 f4       	brcc	.+14     	; 0x2268 <calculadora+0x88a>
    225a:	c1 36       	cpi	r28, 0x61	; 97
    225c:	09 f4       	brne	.+2      	; 0x2260 <calculadora+0x882>
    225e:	b5 c0       	rjmp	.+362    	; 0x23ca <calculadora+0x9ec>
    2260:	c4 36       	cpi	r28, 0x64	; 100
    2262:	09 f4       	brne	.+2      	; 0x2266 <calculadora+0x888>
    2264:	4c c0       	rjmp	.+152    	; 0x22fe <calculadora+0x920>
    2266:	27 c1       	rjmp	.+590    	; 0x24b6 <calculadora+0xad8>
    2268:	ce 36       	cpi	r28, 0x6E	; 110
    226a:	09 f4       	brne	.+2      	; 0x226e <calculadora+0x890>
    226c:	7b c0       	rjmp	.+246    	; 0x2364 <calculadora+0x986>
    226e:	c0 37       	cpi	r28, 0x70	; 112
    2270:	21 f0       	breq	.+8      	; 0x227a <calculadora+0x89c>
    2272:	cd 36       	cpi	r28, 0x6D	; 109
    2274:	09 f0       	breq	.+2      	; 0x2278 <calculadora+0x89a>
    2276:	1f c1       	rjmp	.+574    	; 0x24b6 <calculadora+0xad8>
    2278:	1b c0       	rjmp	.+54     	; 0x22b0 <calculadora+0x8d2>
				case 'p': N1 = pi;              estado = 3; mostrar(0); mostrar(1); break;
    227a:	80 e0       	ldi	r24, 0x00	; 0
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	a0 e4       	ldi	r26, 0x40	; 64
    2280:	b0 e4       	ldi	r27, 0x40	; 64
    2282:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <N1>
    2286:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <N1+0x1>
    228a:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <N1+0x2>
    228e:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <N1+0x3>
    2292:	83 e0       	ldi	r24, 0x03	; 3
    2294:	90 e0       	ldi	r25, 0x00	; 0
    2296:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    229a:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    229e:	80 e0       	ldi	r24, 0x00	; 0
    22a0:	90 e0       	ldi	r25, 0x00	; 0
    22a2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    22a6:	81 e0       	ldi	r24, 0x01	; 1
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    22ae:	03 c1       	rjmp	.+518    	; 0x24b6 <calculadora+0xad8>
				case 'm': N1 = M; N2 = 0;       estado = 3; mostrar(0); mostrar(1); break;
    22b0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <M>
    22b4:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <M+0x1>
    22b8:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <M+0x2>
    22bc:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <M+0x3>
    22c0:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <N1>
    22c4:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <N1+0x1>
    22c8:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <N1+0x2>
    22cc:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <N1+0x3>
    22d0:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    22d4:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    22d8:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    22dc:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    22e0:	83 e0       	ldi	r24, 0x03	; 3
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    22e8:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    22ec:	80 e0       	ldi	r24, 0x00	; 0
    22ee:	90 e0       	ldi	r25, 0x00	; 0
    22f0:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    22fc:	dc c0       	rjmp	.+440    	; 0x24b6 <calculadora+0xad8>
				case 'd': M = M + N1; N1 = 0; N2 = 0;   estado = 0; mostrar(0); break;
    22fe:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    2302:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    2306:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    230a:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    230e:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    2312:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    2316:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    231a:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    231e:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    2322:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    2326:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    232a:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    232e:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    2332:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    2336:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    233a:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    233e:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    2342:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    2346:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    234a:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    234e:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    2352:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    2356:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    235a:	80 e0       	ldi	r24, 0x00	; 0
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2362:	a9 c0       	rjmp	.+338    	; 0x24b6 <calculadora+0xad8>
				case 'n': M = M - N1; N1 = 0; N2 = 0;   estado = 0; mostrar(0); break;
    2364:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <N1>
    2368:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <N1+0x1>
    236c:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <N1+0x2>
    2370:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <N1+0x3>
    2374:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <M>
    2378:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <M+0x1>
    237c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <M+0x2>
    2380:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <M+0x3>
    2384:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <__subsf3>
    2388:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <M>
    238c:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <M+0x1>
    2390:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <M+0x2>
    2394:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <M+0x3>
    2398:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    239c:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    23a0:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    23a4:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    23a8:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    23ac:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    23b0:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    23b4:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    23b8:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    23bc:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    23c0:	80 e0       	ldi	r24, 0x00	; 0
    23c2:	90 e0       	ldi	r25, 0x00	; 0
    23c4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    23c8:	76 c0       	rjmp	.+236    	; 0x24b6 <calculadora+0xad8>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0; contadorPunto = 0; estado = 0; mostrar(0); break;
    23ca:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <M>
    23ce:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <M+0x1>
    23d2:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <M+0x2>
    23d6:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <M+0x3>
    23da:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    23de:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    23e2:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    23e6:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    23ea:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    23ee:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    23f2:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    23f6:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    23fa:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    23fe:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    2402:	80 e0       	ldi	r24, 0x00	; 0
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    240a:	55 c0       	rjmp	.+170    	; 0x24b6 <calculadora+0xad8>
				case 'f': mostrar(5); estado = 4; break;
    240c:	85 e0       	ldi	r24, 0x05	; 5
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2414:	84 e0       	ldi	r24, 0x04	; 4
    2416:	90 e0       	ldi	r25, 0x00	; 0
    2418:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    241c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2420:	4a c0       	rjmp	.+148    	; 0x24b6 <calculadora+0xad8>
			}
		}
		break;
		
		case 4: //estado 4
		if ((entrada == 'o'))
    2422:	cf 36       	cpi	r28, 0x6F	; 111
    2424:	69 f5       	brne	.+90     	; 0x2480 <calculadora+0xaa2>
		{
			M = 0;  N1 = 0; N2 = 0; estado = 0; punto = 0; contadorPunto = 0; mostrar(0); ovfe = 0;
    2426:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <M>
    242a:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <M+0x1>
    242e:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <M+0x2>
    2432:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <M+0x3>
    2436:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <N1>
    243a:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <N1+0x1>
    243e:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <N1+0x2>
    2442:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <N1+0x3>
    2446:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <N2>
    244a:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <N2+0x1>
    244e:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <N2+0x2>
    2452:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <N2+0x3>
    2456:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <estado+0x1>
    245a:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <estado>
    245e:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <punto+0x1>
    2462:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <punto>
    2466:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <contadorPunto+0x1>
    246a:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <contadorPunto>
    246e:	80 e0       	ldi	r24, 0x00	; 0
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    2476:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <ovfe+0x1>
    247a:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <ovfe>
    247e:	1b c0       	rjmp	.+54     	; 0x24b6 <calculadora+0xad8>
			//prender pantalla
		}
		else if ((entrada == 'f'))
    2480:	c6 36       	cpi	r28, 0x66	; 102
    2482:	59 f4       	brne	.+22     	; 0x249a <calculadora+0xabc>
		{
			mostrar(5); estado = 4;
    2484:	85 e0       	ldi	r24, 0x05	; 5
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    248c:	84 e0       	ldi	r24, 0x04	; 4
    248e:	90 e0       	ldi	r25, 0x00	; 0
    2490:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    2494:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
    2498:	0e c0       	rjmp	.+28     	; 0x24b6 <calculadora+0xad8>
		}
		else{
			mostrar(0); mostrar(6); estado = 4; //error
    249a:	80 e0       	ldi	r24, 0x00	; 0
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    24a2:	86 e0       	ldi	r24, 0x06	; 6
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <mostrar>
    24aa:	84 e0       	ldi	r24, 0x04	; 4
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <estado+0x1>
    24b2:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <estado>
		}
		break;
	}
}
    24b6:	cf 91       	pop	r28
    24b8:	0f 91       	pop	r16
    24ba:	08 95       	ret

000024bc <teclado>:
}



void teclado(void) //interpretacion de seleccion, mapea input
{
    24bc:	ff 92       	push	r15
    24be:	0f 93       	push	r16
    24c0:	1f 93       	push	r17
    24c2:	cf 93       	push	r28
    24c4:	df 93       	push	r29
    24c6:	cd b7       	in	r28, 0x3d	; 61
    24c8:	de b7       	in	r29, 0x3e	; 62
    24ca:	a2 97       	sbiw	r28, 0x22	; 34
    24cc:	0f b6       	in	r0, 0x3f	; 63
    24ce:	f8 94       	cli
    24d0:	de bf       	out	0x3e, r29	; 62
    24d2:	0f be       	out	0x3f, r0	; 63
    24d4:	cd bf       	out	0x3d, r28	; 61
	//presionado es el input
	//mapear presionado con respectiva entrada en entradas
	//cambiar orden en este string segun se necesite
	char entradas[32] = "=396xtln/-*+apg^0174osqm.285fced";
    24d6:	80 e2       	ldi	r24, 0x20	; 32
    24d8:	e4 e0       	ldi	r30, 0x04	; 4
    24da:	f1 e0       	ldi	r31, 0x01	; 1
    24dc:	de 01       	movw	r26, r28
    24de:	11 96       	adiw	r26, 0x01	; 1
    24e0:	01 90       	ld	r0, Z+
    24e2:	0d 92       	st	X+, r0
    24e4:	8a 95       	dec	r24
    24e6:	e1 f7       	brne	.-8      	; 0x24e0 <teclado+0x24>
	char ent = entradas[presionado];
    24e8:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <presionado>
    24ec:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <presionado+0x1>
    24f0:	81 e0       	ldi	r24, 0x01	; 1
    24f2:	90 e0       	ldi	r25, 0x00	; 0
    24f4:	8c 0f       	add	r24, r28
    24f6:	9d 1f       	adc	r25, r29
    24f8:	e8 0f       	add	r30, r24
    24fa:	f9 1f       	adc	r31, r25
    24fc:	f0 80       	ld	r15, Z
	//calculadora(entrada); //le pasa la entrada a la calculadora
	
	//FIN OCUPADO
	//MOSTRAR PRESIONADO POR USART (por ahora)
	char str[2];
	calculadora(ent);
    24fe:	8f 2d       	mov	r24, r15
    2500:	90 e0       	ldi	r25, 0x00	; 0
    2502:	0e 94 ef 0c 	call	0x19de	; 0x19de <calculadora>
	sprintf(str, "%d", presionado);
    2506:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <presionado+0x1>
    250a:	8f 93       	push	r24
    250c:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <presionado>
    2510:	8f 93       	push	r24
    2512:	84 e6       	ldi	r24, 0x64	; 100
    2514:	91 e0       	ldi	r25, 0x01	; 1
    2516:	9f 93       	push	r25
    2518:	8f 93       	push	r24
    251a:	8e 01       	movw	r16, r28
    251c:	0f 5d       	subi	r16, 0xDF	; 223
    251e:	1f 4f       	sbci	r17, 0xFF	; 255
    2520:	1f 93       	push	r17
    2522:	0f 93       	push	r16
    2524:	0e 94 df 1a 	call	0x35be	; 0x35be <sprintf>
	USART_Transmit_String(str);
    2528:	c8 01       	movw	r24, r16
    252a:	0e 94 31 16 	call	0x2c62	; 0x2c62 <USART_Transmit_String>
	USART_Transmit_String(" -> ");
    252e:	87 e6       	ldi	r24, 0x67	; 103
    2530:	91 e0       	ldi	r25, 0x01	; 1
    2532:	0e 94 31 16 	call	0x2c62	; 0x2c62 <USART_Transmit_String>
	USART_Transmit_char(ent);
    2536:	8f 2d       	mov	r24, r15
    2538:	0e 94 29 16 	call	0x2c52	; 0x2c52 <USART_Transmit_char>
	USART_Transmit_char('\n');
    253c:	8a e0       	ldi	r24, 0x0A	; 10
    253e:	0e 94 29 16 	call	0x2c52	; 0x2c52 <USART_Transmit_char>
	}
    2542:	0f 90       	pop	r0
    2544:	0f 90       	pop	r0
    2546:	0f 90       	pop	r0
    2548:	0f 90       	pop	r0
    254a:	0f 90       	pop	r0
    254c:	0f 90       	pop	r0
    254e:	a2 96       	adiw	r28, 0x22	; 34
    2550:	0f b6       	in	r0, 0x3f	; 63
    2552:	f8 94       	cli
    2554:	de bf       	out	0x3e, r29	; 62
    2556:	0f be       	out	0x3f, r0	; 63
    2558:	cd bf       	out	0x3d, r28	; 61
    255a:	df 91       	pop	r29
    255c:	cf 91       	pop	r28
    255e:	1f 91       	pop	r17
    2560:	0f 91       	pop	r16
    2562:	ff 90       	pop	r15
    2564:	08 95       	ret

00002566 <__vector_5>:
Change Interrupt Request 1 (PCI1) will trigger if any enabled PCINT[14:8] pin toggles. The Pin Change
Interrupt Request 0 (PCI0) will trigger if any enabled PCINT[7:0] pin toggles.
PC2,3,4,5 -> PCINIT10,11,12,13 -> PCI1
PD4,5,6,7 -> PCINIT20,21,22,23 -> PCI2*/
ISR(PCINT2_vect) //seccion2 D
{
    2566:	1f 92       	push	r1
    2568:	0f 92       	push	r0
    256a:	0f b6       	in	r0, 0x3f	; 63
    256c:	0f 92       	push	r0
    256e:	11 24       	eor	r1, r1
    2570:	2f 93       	push	r18
    2572:	3f 93       	push	r19
    2574:	4f 93       	push	r20
    2576:	5f 93       	push	r21
    2578:	6f 93       	push	r22
    257a:	7f 93       	push	r23
    257c:	8f 93       	push	r24
    257e:	9f 93       	push	r25
    2580:	af 93       	push	r26
    2582:	bf 93       	push	r27
    2584:	ef 93       	push	r30
    2586:	ff 93       	push	r31
	if(!deb){
    2588:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <deb>
    258c:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <deb+0x1>
    2590:	89 2b       	or	r24, r25
    2592:	e9 f5       	brne	.+122    	; 0x260e <__vector_5+0xa8>
		if      (!(PIND & (1<<PIND4))) { presionado = linea + 0; dx = 0;}
    2594:	4c 99       	sbic	0x09, 4	; 9
    2596:	09 c0       	rjmp	.+18     	; 0x25aa <__vector_5+0x44>
    2598:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    259c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    25a0:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    25a4:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    25a8:	23 c0       	rjmp	.+70     	; 0x25f0 <__vector_5+0x8a>
		else if (!(PIND & (1<<PIND5))) { presionado = linea + 1; dx = 1;}
    25aa:	4d 99       	sbic	0x09, 5	; 9
    25ac:	0a c0       	rjmp	.+20     	; 0x25c2 <__vector_5+0x5c>
    25ae:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    25b2:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    25b6:	01 96       	adiw	r24, 0x01	; 1
    25b8:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    25bc:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    25c0:	17 c0       	rjmp	.+46     	; 0x25f0 <__vector_5+0x8a>
		else if (!(PIND & (1<<PIND6))) { presionado = linea + 2; dx = 2;}
    25c2:	4e 99       	sbic	0x09, 6	; 9
    25c4:	0a c0       	rjmp	.+20     	; 0x25da <__vector_5+0x74>
    25c6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    25ca:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    25ce:	02 96       	adiw	r24, 0x02	; 2
    25d0:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    25d4:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    25d8:	0b c0       	rjmp	.+22     	; 0x25f0 <__vector_5+0x8a>
		else if (!(PIND & (1<<PIND7))) { presionado = linea + 3; dx = 3;}
    25da:	4f 99       	sbic	0x09, 7	; 9
    25dc:	09 c0       	rjmp	.+18     	; 0x25f0 <__vector_5+0x8a>
    25de:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    25e2:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    25e6:	03 96       	adiw	r24, 0x03	; 3
    25e8:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    25ec:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
		deb = 1;
    25f0:	81 e0       	ldi	r24, 0x01	; 1
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <deb+0x1>
    25f8:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <deb>
		tdeb = tref;
    25fc:	82 e3       	ldi	r24, 0x32	; 50
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2604:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		teclado();
    2608:	0e 94 5e 12 	call	0x24bc	; 0x24bc <teclado>
    260c:	06 c0       	rjmp	.+12     	; 0x261a <__vector_5+0xb4>
	}
	else{
		tdeb = tref;
    260e:	82 e3       	ldi	r24, 0x32	; 50
    2610:	90 e0       	ldi	r25, 0x00	; 0
    2612:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2616:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}
}
    261a:	ff 91       	pop	r31
    261c:	ef 91       	pop	r30
    261e:	bf 91       	pop	r27
    2620:	af 91       	pop	r26
    2622:	9f 91       	pop	r25
    2624:	8f 91       	pop	r24
    2626:	7f 91       	pop	r23
    2628:	6f 91       	pop	r22
    262a:	5f 91       	pop	r21
    262c:	4f 91       	pop	r20
    262e:	3f 91       	pop	r19
    2630:	2f 91       	pop	r18
    2632:	0f 90       	pop	r0
    2634:	0f be       	out	0x3f, r0	; 63
    2636:	0f 90       	pop	r0
    2638:	1f 90       	pop	r1
    263a:	18 95       	reti

0000263c <__vector_4>:

ISR(PCINT1_vect) //seccion1 C
{
    263c:	1f 92       	push	r1
    263e:	0f 92       	push	r0
    2640:	0f b6       	in	r0, 0x3f	; 63
    2642:	0f 92       	push	r0
    2644:	11 24       	eor	r1, r1
    2646:	2f 93       	push	r18
    2648:	3f 93       	push	r19
    264a:	4f 93       	push	r20
    264c:	5f 93       	push	r21
    264e:	6f 93       	push	r22
    2650:	7f 93       	push	r23
    2652:	8f 93       	push	r24
    2654:	9f 93       	push	r25
    2656:	af 93       	push	r26
    2658:	bf 93       	push	r27
    265a:	ef 93       	push	r30
    265c:	ff 93       	push	r31
	if(!deb){
    265e:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <deb>
    2662:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <deb+0x1>
    2666:	89 2b       	or	r24, r25
    2668:	f1 f5       	brne	.+124    	; 0x26e6 <__vector_4+0xaa>
		if      (!(PINC & (1<<PINC2))) { presionado = linea + 4; dx = 4;}
    266a:	32 99       	sbic	0x06, 2	; 6
    266c:	0a c0       	rjmp	.+20     	; 0x2682 <__vector_4+0x46>
    266e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    2672:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    2676:	04 96       	adiw	r24, 0x04	; 4
    2678:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    267c:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    2680:	23 c0       	rjmp	.+70     	; 0x26c8 <__vector_4+0x8c>
		else if (!(PINC & (1<<PINC3))) { presionado = linea + 5; dx = 5;}
    2682:	33 99       	sbic	0x06, 3	; 6
    2684:	0a c0       	rjmp	.+20     	; 0x269a <__vector_4+0x5e>
    2686:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    268a:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    268e:	05 96       	adiw	r24, 0x05	; 5
    2690:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    2694:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    2698:	17 c0       	rjmp	.+46     	; 0x26c8 <__vector_4+0x8c>
		else if (!(PINC & (1<<PINC4))) { presionado = linea + 6; dx = 6;}
    269a:	34 99       	sbic	0x06, 4	; 6
    269c:	0a c0       	rjmp	.+20     	; 0x26b2 <__vector_4+0x76>
    269e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    26a2:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    26a6:	06 96       	adiw	r24, 0x06	; 6
    26a8:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    26ac:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
    26b0:	0b c0       	rjmp	.+22     	; 0x26c8 <__vector_4+0x8c>
		else if (!(PINC & (1<<PINC5))) { presionado = linea + 7; dx = 7;}
    26b2:	35 99       	sbic	0x06, 5	; 6
    26b4:	09 c0       	rjmp	.+18     	; 0x26c8 <__vector_4+0x8c>
    26b6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <linea>
    26ba:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <linea+0x1>
    26be:	07 96       	adiw	r24, 0x07	; 7
    26c0:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <presionado+0x1>
    26c4:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <presionado>
		deb = 1;
    26c8:	81 e0       	ldi	r24, 0x01	; 1
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <deb+0x1>
    26d0:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <deb>
		tdeb = tref;
    26d4:	82 e3       	ldi	r24, 0x32	; 50
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    26dc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		teclado();
    26e0:	0e 94 5e 12 	call	0x24bc	; 0x24bc <teclado>
    26e4:	06 c0       	rjmp	.+12     	; 0x26f2 <__vector_4+0xb6>
	}
	else{
		tdeb = tref;
    26e6:	82 e3       	ldi	r24, 0x32	; 50
    26e8:	90 e0       	ldi	r25, 0x00	; 0
    26ea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    26ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}
}
    26f2:	ff 91       	pop	r31
    26f4:	ef 91       	pop	r30
    26f6:	bf 91       	pop	r27
    26f8:	af 91       	pop	r26
    26fa:	9f 91       	pop	r25
    26fc:	8f 91       	pop	r24
    26fe:	7f 91       	pop	r23
    2700:	6f 91       	pop	r22
    2702:	5f 91       	pop	r21
    2704:	4f 91       	pop	r20
    2706:	3f 91       	pop	r19
    2708:	2f 91       	pop	r18
    270a:	0f 90       	pop	r0
    270c:	0f be       	out	0x3f, r0	; 63
    270e:	0f 90       	pop	r0
    2710:	1f 90       	pop	r1
    2712:	18 95       	reti

00002714 <HardwareReset>:
*/

void HardwareReset(void)
{
	// Actiavte pull-up register logical high on pin RST
	PORTB |= BIT0;
    2714:	28 9a       	sbi	0x05, 0	; 5
	// DDR as output
	DDRB  |= BIT0;
    2716:	20 9a       	sbi	0x04, 0	; 4
    2718:	8f e4       	ldi	r24, 0x4F	; 79
    271a:	93 ec       	ldi	r25, 0xC3	; 195
    271c:	01 97       	sbiw	r24, 0x01	; 1
    271e:	f1 f7       	brne	.-4      	; 0x271c <HardwareReset+0x8>
    2720:	00 c0       	rjmp	.+0      	; 0x2722 <HardwareReset+0xe>
    2722:	00 00       	nop
	// delay 200 ms
	_delay_ms(200);
	// Reset Low
	PORTB &= ~BIT0;
    2724:	28 98       	cbi	0x05, 0	; 5
    2726:	8f e4       	ldi	r24, 0x4F	; 79
    2728:	93 ec       	ldi	r25, 0xC3	; 195
    272a:	01 97       	sbiw	r24, 0x01	; 1
    272c:	f1 f7       	brne	.-4      	; 0x272a <HardwareReset+0x16>
    272e:	00 c0       	rjmp	.+0      	; 0x2730 <HardwareReset+0x1c>
    2730:	00 00       	nop
	// delay 200 ms
	_delay_ms(200);
	// Reset High
	PORTB |= BIT0;
    2732:	28 9a       	sbi	0x05, 0	; 5
    2734:	08 95       	ret

00002736 <SpiInit>:

void SpiInit(void)
{

	// Output: SCK, MOSI, CS_LD, DC_LD
	DDRB  |= BIT5 | BIT3 | BIT2 | BIT1;
    2736:	84 b1       	in	r24, 0x04	; 4
    2738:	8e 62       	ori	r24, 0x2E	; 46
    273a:	84 b9       	out	0x04, r24	; 4
	DDRB  &= ~BIT4;
    273c:	24 98       	cbi	0x04, 4	; 4
	PORTB |= BIT2 | BIT4;
    273e:	85 b1       	in	r24, 0x05	; 5
    2740:	84 61       	ori	r24, 0x14	; 20
    2742:	85 b9       	out	0x05, r24	; 5
	SPCR  |= BIT6 | BIT4;// | BIT0 | BIT1;
    2744:	8c b5       	in	r24, 0x2c	; 44
    2746:	80 65       	ori	r24, 0x50	; 80
    2748:	8c bd       	out	0x2c, r24	; 44
	// SPI2X - Prescaler fclk/2 = 8MHz
	SPSR |= (1 << SPI2X);
    274a:	8d b5       	in	r24, 0x2d	; 45
    274c:	81 60       	ori	r24, 0x01	; 1
    274e:	8d bd       	out	0x2d, r24	; 45
    2750:	08 95       	ret

00002752 <CommandSend>:
}

uint8_t CommandSend(uint8_t data)
{
	// chip enable - active low
	PORTB &= ~BIT2;
    2752:	2a 98       	cbi	0x05, 2	; 5
	// command (active low)
	PORTB &= ~BIT1;
    2754:	29 98       	cbi	0x05, 1	; 5
	// transmitting data
	SPDR = data;
    2756:	8e bd       	out	0x2e, r24	; 46
	// wait till data transmit
	while (!(SPSR & (1 << SPIF)));
    2758:	0d b4       	in	r0, 0x2d	; 45
    275a:	07 fe       	sbrs	r0, 7
    275c:	fd cf       	rjmp	.-6      	; 0x2758 <CommandSend+0x6>
	// chip disable - idle high
	PORTB |= BIT2;
    275e:	2a 9a       	sbi	0x05, 2	; 5
	// return received data
	return SPDR;
    2760:	8e b5       	in	r24, 0x2e	; 46
}
    2762:	08 95       	ret

00002764 <Data8BitsSend>:
  }
  // set window
  SetWindow(x, x, ys, ye);
  // draw pixel by 565 mode
  SendColor565(color, ye - ys);
}
    2764:	2a 98       	cbi	0x05, 2	; 5
    2766:	29 9a       	sbi	0x05, 1	; 5
    2768:	8e bd       	out	0x2e, r24	; 46
    276a:	0d b4       	in	r0, 0x2d	; 45
    276c:	07 fe       	sbrs	r0, 7
    276e:	fd cf       	rjmp	.-6      	; 0x276a <Data8BitsSend+0x6>
    2770:	2a 9a       	sbi	0x05, 2	; 5
    2772:	8e b5       	in	r24, 0x2e	; 46
    2774:	08 95       	ret

00002776 <Data16BitsSend>:
    2776:	2a 98       	cbi	0x05, 2	; 5
    2778:	29 9a       	sbi	0x05, 1	; 5
    277a:	9e bd       	out	0x2e, r25	; 46
    277c:	0d b4       	in	r0, 0x2d	; 45
    277e:	07 fe       	sbrs	r0, 7
    2780:	fd cf       	rjmp	.-6      	; 0x277c <Data16BitsSend+0x6>
    2782:	8e bd       	out	0x2e, r24	; 46
    2784:	0d b4       	in	r0, 0x2d	; 45
    2786:	07 fe       	sbrs	r0, 7
    2788:	fd cf       	rjmp	.-6      	; 0x2784 <Data16BitsSend+0xe>
    278a:	2a 9a       	sbi	0x05, 2	; 5
    278c:	8e b5       	in	r24, 0x2e	; 46
    278e:	08 95       	ret

00002790 <SendColor565>:
    2790:	0f 93       	push	r16
    2792:	1f 93       	push	r17
    2794:	cf 93       	push	r28
    2796:	df 93       	push	r29
    2798:	8c 01       	movw	r16, r24
    279a:	eb 01       	movw	r28, r22
    279c:	8c e2       	ldi	r24, 0x2C	; 44
    279e:	0e 94 a9 13 	call	0x2752	; 0x2752 <CommandSend>
    27a2:	20 97       	sbiw	r28, 0x00	; 0
    27a4:	29 f0       	breq	.+10     	; 0x27b0 <SendColor565+0x20>
    27a6:	c8 01       	movw	r24, r16
    27a8:	0e 94 bb 13 	call	0x2776	; 0x2776 <Data16BitsSend>
    27ac:	21 97       	sbiw	r28, 0x01	; 1
    27ae:	d9 f7       	brne	.-10     	; 0x27a6 <SendColor565+0x16>
    27b0:	df 91       	pop	r29
    27b2:	cf 91       	pop	r28
    27b4:	1f 91       	pop	r17
    27b6:	0f 91       	pop	r16
    27b8:	08 95       	ret

000027ba <SetWindow>:
    27ba:	0f 93       	push	r16
    27bc:	1f 93       	push	r17
    27be:	cf 93       	push	r28
    27c0:	df 93       	push	r29
    27c2:	68 17       	cp	r22, r24
    27c4:	50 f1       	brcs	.+84     	; 0x281a <SetWindow+0x60>
    27c6:	62 3a       	cpi	r22, 0xA2	; 162
    27c8:	50 f5       	brcc	.+84     	; 0x281e <SetWindow+0x64>
    27ca:	24 17       	cp	r18, r20
    27cc:	50 f1       	brcs	.+84     	; 0x2822 <SetWindow+0x68>
    27ce:	24 38       	cpi	r18, 0x84	; 132
    27d0:	50 f5       	brcc	.+84     	; 0x2826 <SetWindow+0x6c>
    27d2:	12 2f       	mov	r17, r18
    27d4:	04 2f       	mov	r16, r20
    27d6:	c6 2f       	mov	r28, r22
    27d8:	d8 2f       	mov	r29, r24
    27da:	8a e2       	ldi	r24, 0x2A	; 42
    27dc:	0e 94 a9 13 	call	0x2752	; 0x2752 <CommandSend>
    27e0:	80 e0       	ldi	r24, 0x00	; 0
    27e2:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    27e6:	8d 2f       	mov	r24, r29
    27e8:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    27ec:	80 e0       	ldi	r24, 0x00	; 0
    27ee:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    27f2:	8c 2f       	mov	r24, r28
    27f4:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    27f8:	8b e2       	ldi	r24, 0x2B	; 43
    27fa:	0e 94 a9 13 	call	0x2752	; 0x2752 <CommandSend>
    27fe:	80 e0       	ldi	r24, 0x00	; 0
    2800:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    2804:	80 2f       	mov	r24, r16
    2806:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    280a:	80 e0       	ldi	r24, 0x00	; 0
    280c:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    2810:	81 2f       	mov	r24, r17
    2812:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    2816:	81 e0       	ldi	r24, 0x01	; 1
    2818:	07 c0       	rjmp	.+14     	; 0x2828 <SetWindow+0x6e>
    281a:	80 e0       	ldi	r24, 0x00	; 0
    281c:	05 c0       	rjmp	.+10     	; 0x2828 <SetWindow+0x6e>
    281e:	80 e0       	ldi	r24, 0x00	; 0
    2820:	03 c0       	rjmp	.+6      	; 0x2828 <SetWindow+0x6e>
    2822:	80 e0       	ldi	r24, 0x00	; 0
    2824:	01 c0       	rjmp	.+2      	; 0x2828 <SetWindow+0x6e>
    2826:	80 e0       	ldi	r24, 0x00	; 0
    2828:	df 91       	pop	r29
    282a:	cf 91       	pop	r28
    282c:	1f 91       	pop	r17
    282e:	0f 91       	pop	r16
    2830:	08 95       	ret

00002832 <SetPosition>:
    2832:	8d 39       	cpi	r24, 0x9D	; 157
    2834:	90 f0       	brcs	.+36     	; 0x285a <SetPosition+0x28>
    2836:	6d 37       	cpi	r22, 0x7D	; 125
    2838:	e0 f4       	brcc	.+56     	; 0x2872 <SetPosition+0x40>
    283a:	6c 37       	cpi	r22, 0x7C	; 124
    283c:	70 f4       	brcc	.+28     	; 0x285a <SetPosition+0x28>
    283e:	70 e0       	ldi	r23, 0x00	; 0
    2840:	68 5f       	subi	r22, 0xF8	; 248
    2842:	7f 4f       	sbci	r23, 0xFF	; 255
    2844:	70 93 b3 01 	sts	0x01B3, r23	; 0x8001b3 <cacheMemIndexRow+0x1>
    2848:	60 93 b2 01 	sts	0x01B2, r22	; 0x8001b2 <cacheMemIndexRow>
    284c:	90 e0       	ldi	r25, 0x00	; 0
    284e:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <cacheMemIndexCol+0x1>
    2852:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <cacheMemIndexCol>
    2856:	81 e0       	ldi	r24, 0x01	; 1
    2858:	08 95       	ret
    285a:	70 e0       	ldi	r23, 0x00	; 0
    285c:	70 93 b3 01 	sts	0x01B3, r23	; 0x8001b3 <cacheMemIndexRow+0x1>
    2860:	60 93 b2 01 	sts	0x01B2, r22	; 0x8001b2 <cacheMemIndexRow>
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <cacheMemIndexCol+0x1>
    286a:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <cacheMemIndexCol>
    286e:	81 e0       	ldi	r24, 0x01	; 1
    2870:	08 95       	ret
    2872:	80 e0       	ldi	r24, 0x00	; 0
    2874:	08 95       	ret

00002876 <DrawPixel>:
    2876:	cf 93       	push	r28
    2878:	df 93       	push	r29
    287a:	ea 01       	movw	r28, r20
    287c:	26 2f       	mov	r18, r22
    287e:	46 2f       	mov	r20, r22
    2880:	68 2f       	mov	r22, r24
    2882:	0e 94 dd 13 	call	0x27ba	; 0x27ba <SetWindow>
    2886:	61 e0       	ldi	r22, 0x01	; 1
    2888:	70 e0       	ldi	r23, 0x00	; 0
    288a:	ce 01       	movw	r24, r28
    288c:	0e 94 c8 13 	call	0x2790	; 0x2790 <SendColor565>
    2890:	df 91       	pop	r29
    2892:	cf 91       	pop	r28
    2894:	08 95       	ret

00002896 <DrawChar>:
    2896:	4f 92       	push	r4
    2898:	5f 92       	push	r5
    289a:	7f 92       	push	r7
    289c:	8f 92       	push	r8
    289e:	9f 92       	push	r9
    28a0:	af 92       	push	r10
    28a2:	bf 92       	push	r11
    28a4:	cf 92       	push	r12
    28a6:	df 92       	push	r13
    28a8:	ef 92       	push	r14
    28aa:	ff 92       	push	r15
    28ac:	1f 93       	push	r17
    28ae:	cf 93       	push	r28
    28b0:	df 93       	push	r29
    28b2:	2b 01       	movw	r4, r22
    28b4:	41 11       	cpse	r20, r1
    28b6:	34 c0       	rjmp	.+104    	; 0x2920 <DrawChar+0x8a>
    28b8:	68 94       	set
    28ba:	99 24       	eor	r9, r9
    28bc:	92 f8       	bld	r9, 2
    28be:	c8 2f       	mov	r28, r24
    28c0:	d0 e0       	ldi	r29, 0x00	; 0
    28c2:	ce 01       	movw	r24, r28
    28c4:	80 97       	sbiw	r24, 0x20	; 32
    28c6:	ec 01       	movw	r28, r24
    28c8:	cc 0f       	add	r28, r28
    28ca:	dd 1f       	adc	r29, r29
    28cc:	cc 0f       	add	r28, r28
    28ce:	dd 1f       	adc	r29, r29
    28d0:	c8 0f       	add	r28, r24
    28d2:	d9 1f       	adc	r29, r25
    28d4:	0f 2e       	mov	r0, r31
    28d6:	f2 eb       	ldi	r31, 0xB2	; 178
    28d8:	cf 2e       	mov	r12, r31
    28da:	f1 e0       	ldi	r31, 0x01	; 1
    28dc:	df 2e       	mov	r13, r31
    28de:	f0 2d       	mov	r31, r0
    28e0:	0f 2e       	mov	r0, r31
    28e2:	f0 eb       	ldi	r31, 0xB0	; 176
    28e4:	ef 2e       	mov	r14, r31
    28e6:	f1 e0       	ldi	r31, 0x01	; 1
    28e8:	ff 2e       	mov	r15, r31
    28ea:	f0 2d       	mov	r31, r0
    28ec:	fe 01       	movw	r30, r28
    28ee:	e9 0d       	add	r30, r9
    28f0:	f1 1d       	adc	r31, r1
    28f2:	e8 5d       	subi	r30, 0xD8	; 216
    28f4:	fc 4f       	sbci	r31, 0xFC	; 252
    28f6:	b4 90       	lpm	r11, Z
    28f8:	17 e0       	ldi	r17, 0x07	; 7
    28fa:	bb 20       	and	r11, r11
    28fc:	4c f4       	brge	.+18     	; 0x2910 <DrawChar+0x7a>
    28fe:	f6 01       	movw	r30, r12
    2900:	60 81       	ld	r22, Z
    2902:	61 0f       	add	r22, r17
    2904:	f7 01       	movw	r30, r14
    2906:	80 81       	ld	r24, Z
    2908:	a2 01       	movw	r20, r4
    290a:	89 0d       	add	r24, r9
    290c:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2910:	bb 0c       	add	r11, r11
    2912:	11 50       	subi	r17, 0x01	; 1
    2914:	90 f7       	brcc	.-28     	; 0x28fa <DrawChar+0x64>
    2916:	9a 94       	dec	r9
    2918:	ff ef       	ldi	r31, 0xFF	; 255
    291a:	9f 12       	cpse	r9, r31
    291c:	e7 cf       	rjmp	.-50     	; 0x28ec <DrawChar+0x56>
    291e:	9c c0       	rjmp	.+312    	; 0x2a58 <DrawChar+0x1c2>
    2920:	41 30       	cpi	r20, 0x01	; 1
    2922:	09 f0       	breq	.+2      	; 0x2926 <DrawChar+0x90>
    2924:	40 c0       	rjmp	.+128    	; 0x29a6 <DrawChar+0x110>
    2926:	68 94       	set
    2928:	99 24       	eor	r9, r9
    292a:	92 f8       	bld	r9, 2
    292c:	e8 2e       	mov	r14, r24
    292e:	f1 2c       	mov	r15, r1
    2930:	c7 01       	movw	r24, r14
    2932:	80 97       	sbiw	r24, 0x20	; 32
    2934:	7c 01       	movw	r14, r24
    2936:	ee 0c       	add	r14, r14
    2938:	ff 1c       	adc	r15, r15
    293a:	ee 0c       	add	r14, r14
    293c:	ff 1c       	adc	r15, r15
    293e:	e8 0e       	add	r14, r24
    2940:	f9 1e       	adc	r15, r25
    2942:	0f 2e       	mov	r0, r31
    2944:	f2 eb       	ldi	r31, 0xB2	; 178
    2946:	af 2e       	mov	r10, r31
    2948:	f1 e0       	ldi	r31, 0x01	; 1
    294a:	bf 2e       	mov	r11, r31
    294c:	f0 2d       	mov	r31, r0
    294e:	0f 2e       	mov	r0, r31
    2950:	f0 eb       	ldi	r31, 0xB0	; 176
    2952:	cf 2e       	mov	r12, r31
    2954:	f1 e0       	ldi	r31, 0x01	; 1
    2956:	df 2e       	mov	r13, r31
    2958:	f0 2d       	mov	r31, r0
    295a:	f7 01       	movw	r30, r14
    295c:	e9 0d       	add	r30, r9
    295e:	f1 1d       	adc	r31, r1
    2960:	e8 5d       	subi	r30, 0xD8	; 216
    2962:	fc 4f       	sbci	r31, 0xFC	; 252
    2964:	84 90       	lpm	r8, Z
    2966:	c7 e0       	ldi	r28, 0x07	; 7
    2968:	88 20       	and	r8, r8
    296a:	ac f4       	brge	.+42     	; 0x2996 <DrawChar+0x100>
    296c:	f5 01       	movw	r30, r10
    296e:	60 81       	ld	r22, Z
    2970:	dc 2f       	mov	r29, r28
    2972:	dd 0f       	add	r29, r29
    2974:	6d 0f       	add	r22, r29
    2976:	f6 01       	movw	r30, r12
    2978:	80 81       	ld	r24, Z
    297a:	a2 01       	movw	r20, r4
    297c:	89 0d       	add	r24, r9
    297e:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2982:	f5 01       	movw	r30, r10
    2984:	60 81       	ld	r22, Z
    2986:	6f 5f       	subi	r22, 0xFF	; 255
    2988:	6d 0f       	add	r22, r29
    298a:	f6 01       	movw	r30, r12
    298c:	80 81       	ld	r24, Z
    298e:	a2 01       	movw	r20, r4
    2990:	89 0d       	add	r24, r9
    2992:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2996:	88 0c       	add	r8, r8
    2998:	c1 50       	subi	r28, 0x01	; 1
    299a:	30 f7       	brcc	.-52     	; 0x2968 <DrawChar+0xd2>
    299c:	9a 94       	dec	r9
    299e:	ff ef       	ldi	r31, 0xFF	; 255
    29a0:	9f 12       	cpse	r9, r31
    29a2:	db cf       	rjmp	.-74     	; 0x295a <DrawChar+0xc4>
    29a4:	59 c0       	rjmp	.+178    	; 0x2a58 <DrawChar+0x1c2>
    29a6:	4a 30       	cpi	r20, 0x0A	; 10
    29a8:	09 f0       	breq	.+2      	; 0x29ac <DrawChar+0x116>
    29aa:	56 c0       	rjmp	.+172    	; 0x2a58 <DrawChar+0x1c2>
    29ac:	68 94       	set
    29ae:	ee 24       	eor	r14, r14
    29b0:	e2 f8       	bld	r14, 2
    29b2:	c8 2e       	mov	r12, r24
    29b4:	d1 2c       	mov	r13, r1
    29b6:	c6 01       	movw	r24, r12
    29b8:	80 97       	sbiw	r24, 0x20	; 32
    29ba:	6c 01       	movw	r12, r24
    29bc:	cc 0c       	add	r12, r12
    29be:	dd 1c       	adc	r13, r13
    29c0:	cc 0c       	add	r12, r12
    29c2:	dd 1c       	adc	r13, r13
    29c4:	c8 0e       	add	r12, r24
    29c6:	d9 1e       	adc	r13, r25
    29c8:	0f 2e       	mov	r0, r31
    29ca:	f2 eb       	ldi	r31, 0xB2	; 178
    29cc:	8f 2e       	mov	r8, r31
    29ce:	f1 e0       	ldi	r31, 0x01	; 1
    29d0:	9f 2e       	mov	r9, r31
    29d2:	f0 2d       	mov	r31, r0
    29d4:	0f 2e       	mov	r0, r31
    29d6:	f0 eb       	ldi	r31, 0xB0	; 176
    29d8:	af 2e       	mov	r10, r31
    29da:	f1 e0       	ldi	r31, 0x01	; 1
    29dc:	bf 2e       	mov	r11, r31
    29de:	f0 2d       	mov	r31, r0
    29e0:	f6 01       	movw	r30, r12
    29e2:	ee 0d       	add	r30, r14
    29e4:	f1 1d       	adc	r31, r1
    29e6:	e8 5d       	subi	r30, 0xD8	; 216
    29e8:	fc 4f       	sbci	r31, 0xFC	; 252
    29ea:	c4 91       	lpm	r28, Z
    29ec:	7e 2c       	mov	r7, r14
    29ee:	77 0c       	add	r7, r7
    29f0:	d7 e0       	ldi	r29, 0x07	; 7
    29f2:	cc 23       	and	r28, r28
    29f4:	54 f5       	brge	.+84     	; 0x2a4a <DrawChar+0x1b4>
    29f6:	f4 01       	movw	r30, r8
    29f8:	60 81       	ld	r22, Z
    29fa:	fd 2e       	mov	r15, r29
    29fc:	ff 0c       	add	r15, r15
    29fe:	6f 0d       	add	r22, r15
    2a00:	f5 01       	movw	r30, r10
    2a02:	80 81       	ld	r24, Z
    2a04:	a2 01       	movw	r20, r4
    2a06:	87 0d       	add	r24, r7
    2a08:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2a0c:	f4 01       	movw	r30, r8
    2a0e:	60 81       	ld	r22, Z
    2a10:	6f 5f       	subi	r22, 0xFF	; 255
    2a12:	6f 0d       	add	r22, r15
    2a14:	f5 01       	movw	r30, r10
    2a16:	80 81       	ld	r24, Z
    2a18:	a2 01       	movw	r20, r4
    2a1a:	87 0d       	add	r24, r7
    2a1c:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2a20:	f4 01       	movw	r30, r8
    2a22:	60 81       	ld	r22, Z
    2a24:	6f 0d       	add	r22, r15
    2a26:	f5 01       	movw	r30, r10
    2a28:	80 81       	ld	r24, Z
    2a2a:	8f 5f       	subi	r24, 0xFF	; 255
    2a2c:	a2 01       	movw	r20, r4
    2a2e:	87 0d       	add	r24, r7
    2a30:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2a34:	f4 01       	movw	r30, r8
    2a36:	60 81       	ld	r22, Z
    2a38:	6f 5f       	subi	r22, 0xFF	; 255
    2a3a:	6f 0d       	add	r22, r15
    2a3c:	f5 01       	movw	r30, r10
    2a3e:	80 81       	ld	r24, Z
    2a40:	8f 5f       	subi	r24, 0xFF	; 255
    2a42:	a2 01       	movw	r20, r4
    2a44:	87 0d       	add	r24, r7
    2a46:	0e 94 3b 14 	call	0x2876	; 0x2876 <DrawPixel>
    2a4a:	cc 0f       	add	r28, r28
    2a4c:	d1 50       	subi	r29, 0x01	; 1
    2a4e:	88 f6       	brcc	.-94     	; 0x29f2 <DrawChar+0x15c>
    2a50:	ea 94       	dec	r14
    2a52:	ff ef       	ldi	r31, 0xFF	; 255
    2a54:	ef 12       	cpse	r14, r31
    2a56:	c4 cf       	rjmp	.-120    	; 0x29e0 <DrawChar+0x14a>
    2a58:	80 e0       	ldi	r24, 0x00	; 0
    2a5a:	df 91       	pop	r29
    2a5c:	cf 91       	pop	r28
    2a5e:	1f 91       	pop	r17
    2a60:	ff 90       	pop	r15
    2a62:	ef 90       	pop	r14
    2a64:	df 90       	pop	r13
    2a66:	cf 90       	pop	r12
    2a68:	bf 90       	pop	r11
    2a6a:	af 90       	pop	r10
    2a6c:	9f 90       	pop	r9
    2a6e:	8f 90       	pop	r8
    2a70:	7f 90       	pop	r7
    2a72:	5f 90       	pop	r5
    2a74:	4f 90       	pop	r4
    2a76:	08 95       	ret

00002a78 <DrawString>:
    2a78:	9f 92       	push	r9
    2a7a:	af 92       	push	r10
    2a7c:	bf 92       	push	r11
    2a7e:	cf 92       	push	r12
    2a80:	df 92       	push	r13
    2a82:	ef 92       	push	r14
    2a84:	ff 92       	push	r15
    2a86:	0f 93       	push	r16
    2a88:	1f 93       	push	r17
    2a8a:	cf 93       	push	r28
    2a8c:	df 93       	push	r29
    2a8e:	ec 01       	movw	r28, r24
    2a90:	88 81       	ld	r24, Y
    2a92:	88 23       	and	r24, r24
    2a94:	21 f1       	breq	.+72     	; 0x2ade <DrawString+0x66>
    2a96:	a4 2e       	mov	r10, r20
    2a98:	8b 01       	movw	r16, r22
    2a9a:	94 2e       	mov	r9, r20
    2a9c:	96 94       	lsr	r9
    2a9e:	b1 2c       	mov	r11, r1
    2aa0:	0f 2e       	mov	r0, r31
    2aa2:	f2 eb       	ldi	r31, 0xB2	; 178
    2aa4:	cf 2e       	mov	r12, r31
    2aa6:	f1 e0       	ldi	r31, 0x01	; 1
    2aa8:	df 2e       	mov	r13, r31
    2aaa:	f0 2d       	mov	r31, r0
    2aac:	0f 2e       	mov	r0, r31
    2aae:	f0 eb       	ldi	r31, 0xB0	; 176
    2ab0:	ef 2e       	mov	r14, r31
    2ab2:	f1 e0       	ldi	r31, 0x01	; 1
    2ab4:	ff 2e       	mov	r15, r31
    2ab6:	f0 2d       	mov	r31, r0
    2ab8:	b3 94       	inc	r11
    2aba:	4a 2d       	mov	r20, r10
    2abc:	b8 01       	movw	r22, r16
    2abe:	0e 94 4b 14 	call	0x2896	; 0x2896 <DrawChar>
    2ac2:	f7 01       	movw	r30, r14
    2ac4:	80 81       	ld	r24, Z
    2ac6:	8a 5f       	subi	r24, 0xFA	; 250
    2ac8:	f6 01       	movw	r30, r12
    2aca:	60 81       	ld	r22, Z
    2acc:	89 0d       	add	r24, r9
    2ace:	0e 94 19 14 	call	0x2832	; 0x2832 <SetPosition>
    2ad2:	fe 01       	movw	r30, r28
    2ad4:	eb 0d       	add	r30, r11
    2ad6:	f1 1d       	adc	r31, r1
    2ad8:	80 81       	ld	r24, Z
    2ada:	81 11       	cpse	r24, r1
    2adc:	ed cf       	rjmp	.-38     	; 0x2ab8 <DrawString+0x40>
    2ade:	df 91       	pop	r29
    2ae0:	cf 91       	pop	r28
    2ae2:	1f 91       	pop	r17
    2ae4:	0f 91       	pop	r16
    2ae6:	ff 90       	pop	r15
    2ae8:	ef 90       	pop	r14
    2aea:	df 90       	pop	r13
    2aec:	cf 90       	pop	r12
    2aee:	bf 90       	pop	r11
    2af0:	af 90       	pop	r10
    2af2:	9f 90       	pop	r9
    2af4:	08 95       	ret

00002af6 <ClearScreen>:

void ClearScreen(uint16_t color)
{
    2af6:	cf 93       	push	r28
    2af8:	df 93       	push	r29
    2afa:	ec 01       	movw	r28, r24
  // set whole window
  SetWindow(0, SIZE_X, 0, SIZE_Y);
    2afc:	23 e8       	ldi	r18, 0x83	; 131
    2afe:	40 e0       	ldi	r20, 0x00	; 0
    2b00:	61 ea       	ldi	r22, 0xA1	; 161
    2b02:	80 e0       	ldi	r24, 0x00	; 0
    2b04:	0e 94 dd 13 	call	0x27ba	; 0x27ba <SetWindow>
  // draw individual pixels 
  // CACHE_SIZE_MEM = SIZE_X * SIZE_Y
  SendColor565(color, CACHE_SIZE_MEM);
    2b08:	68 e8       	ldi	r22, 0x88	; 136
    2b0a:	73 e5       	ldi	r23, 0x53	; 83
    2b0c:	ce 01       	movw	r24, r28
    2b0e:	0e 94 c8 13 	call	0x2790	; 0x2790 <SendColor565>
}
    2b12:	df 91       	pop	r29
    2b14:	cf 91       	pop	r28
    2b16:	08 95       	ret

00002b18 <UpdateScreen>:

void UpdateScreen(void)
{
  // display on
  CommandSend(DISPON);
    2b18:	89 e2       	ldi	r24, 0x29	; 41
    2b1a:	0e 94 a9 13 	call	0x2752	; 0x2752 <CommandSend>
    2b1e:	08 95       	ret

00002b20 <DelayMs>:
}

void DelayMs(uint8_t time)
{
  // loop through real time
  while (time--) {
    2b20:	88 23       	and	r24, r24
    2b22:	41 f0       	breq	.+16     	; 0x2b34 <DelayMs+0x14>
    2b24:	ef e9       	ldi	r30, 0x9F	; 159
    2b26:	ff e0       	ldi	r31, 0x0F	; 15
    2b28:	31 97       	sbiw	r30, 0x01	; 1
    2b2a:	f1 f7       	brne	.-4      	; 0x2b28 <DelayMs+0x8>
    2b2c:	00 c0       	rjmp	.+0      	; 0x2b2e <DelayMs+0xe>
    2b2e:	00 00       	nop
    2b30:	81 50       	subi	r24, 0x01	; 1
    2b32:	c1 f7       	brne	.-16     	; 0x2b24 <DelayMs+0x4>
    2b34:	08 95       	ret

00002b36 <St7735Commands>:
 *
 * @param const uint8_t *
 * @return void
 */
void St7735Commands(const uint8_t *commands)
{
    2b36:	cf 92       	push	r12
    2b38:	df 92       	push	r13
    2b3a:	ef 92       	push	r14
    2b3c:	ff 92       	push	r15
    2b3e:	0f 93       	push	r16
    2b40:	1f 93       	push	r17
    2b42:	cf 93       	push	r28
    2b44:	df 93       	push	r29
  uint8_t milliseconds;
  uint8_t numOfCommands;
  uint8_t numOfArguments;

  // number of commands
  numOfCommands = pgm_read_byte(commands++);
    2b46:	7c 01       	movw	r14, r24
    2b48:	2f ef       	ldi	r18, 0xFF	; 255
    2b4a:	e2 1a       	sub	r14, r18
    2b4c:	f2 0a       	sbc	r15, r18
    2b4e:	fc 01       	movw	r30, r24
    2b50:	d4 90       	lpm	r13, Z
  
  // loop through whole command list
  while (numOfCommands--) {
    2b52:	2d c0       	rjmp	.+90     	; 0x2bae <St7735Commands+0x78>
    // send command
    CommandSend(pgm_read_byte(commands++));
    2b54:	f7 01       	movw	r30, r14
    2b56:	84 91       	lpm	r24, Z
    2b58:	0e 94 a9 13 	call	0x2752	; 0x2752 <CommandSend>
    // read number of arguments
    numOfArguments = pgm_read_byte(commands++);
    2b5c:	f7 01       	movw	r30, r14
    2b5e:	31 96       	adiw	r30, 0x01	; 1
    2b60:	e4 91       	lpm	r30, Z
    2b62:	f2 e0       	ldi	r31, 0x02	; 2
    2b64:	ef 0e       	add	r14, r31
    2b66:	f1 1c       	adc	r15, r1
    // check if delay set
    milliseconds = numOfArguments & DELAY;
    2b68:	2e 2f       	mov	r18, r30
    2b6a:	20 78       	andi	r18, 0x80	; 128
    2b6c:	c2 2e       	mov	r12, r18
    // remove delay flag
    numOfArguments &= ~DELAY;
    2b6e:	ef 77       	andi	r30, 0x7F	; 127
    // loop through number of arguments
    while (numOfArguments--) {
    2b70:	8f ef       	ldi	r24, 0xFF	; 255
    2b72:	8e 0f       	add	r24, r30
    2b74:	ee 23       	and	r30, r30
    2b76:	89 f0       	breq	.+34     	; 0x2b9a <St7735Commands+0x64>
    2b78:	3e 2d       	mov	r19, r14
    2b7a:	2f 2d       	mov	r18, r15
    2b7c:	90 e0       	ldi	r25, 0x00	; 0
    2b7e:	01 96       	adiw	r24, 0x01	; 1
    2b80:	e8 0e       	add	r14, r24
    2b82:	f9 1e       	adc	r15, r25
    2b84:	87 01       	movw	r16, r14
    2b86:	c3 2f       	mov	r28, r19
    2b88:	d2 2f       	mov	r29, r18
      // send arguments
      Data8BitsSend(pgm_read_byte(commands++));
    2b8a:	fe 01       	movw	r30, r28
    2b8c:	84 91       	lpm	r24, Z
    2b8e:	0e 94 b2 13 	call	0x2764	; 0x2764 <Data8BitsSend>
    2b92:	21 96       	adiw	r28, 0x01	; 1
    // check if delay set
    milliseconds = numOfArguments & DELAY;
    // remove delay flag
    numOfArguments &= ~DELAY;
    // loop through number of arguments
    while (numOfArguments--) {
    2b94:	c0 17       	cp	r28, r16
    2b96:	d1 07       	cpc	r29, r17
    2b98:	c1 f7       	brne	.-16     	; 0x2b8a <St7735Commands+0x54>
      // send arguments
      Data8BitsSend(pgm_read_byte(commands++));
    }
    // check if delay set
    if (milliseconds) {
    2b9a:	cc 20       	and	r12, r12
    2b9c:	39 f0       	breq	.+14     	; 0x2bac <St7735Commands+0x76>
      // value in milliseconds
      milliseconds = pgm_read_byte(commands++);
    2b9e:	e7 01       	movw	r28, r14
    2ba0:	21 96       	adiw	r28, 0x01	; 1
    2ba2:	f7 01       	movw	r30, r14
    2ba4:	84 91       	lpm	r24, Z
      // delay
      DelayMs(milliseconds);
    2ba6:	0e 94 90 15 	call	0x2b20	; 0x2b20 <DelayMs>
      Data8BitsSend(pgm_read_byte(commands++));
    }
    // check if delay set
    if (milliseconds) {
      // value in milliseconds
      milliseconds = pgm_read_byte(commands++);
    2baa:	7e 01       	movw	r14, r28
    2bac:	da 94       	dec	r13

  // number of commands
  numOfCommands = pgm_read_byte(commands++);
  
  // loop through whole command list
  while (numOfCommands--) {
    2bae:	d1 10       	cpse	r13, r1
    2bb0:	d1 cf       	rjmp	.-94     	; 0x2b54 <St7735Commands+0x1e>
      milliseconds = pgm_read_byte(commands++);
      // delay
      DelayMs(milliseconds);
    }
  }
}
    2bb2:	df 91       	pop	r29
    2bb4:	cf 91       	pop	r28
    2bb6:	1f 91       	pop	r17
    2bb8:	0f 91       	pop	r16
    2bba:	ff 90       	pop	r15
    2bbc:	ef 90       	pop	r14
    2bbe:	df 90       	pop	r13
    2bc0:	cf 90       	pop	r12
    2bc2:	08 95       	ret

00002bc4 <St7735Init>:


void St7735Init(void)
{
  // hardware reset
  HardwareReset();
    2bc4:	0e 94 8a 13 	call	0x2714	; 0x2714 <HardwareReset>
  // init spi
  SpiInit();
    2bc8:	0e 94 9b 13 	call	0x2736	; 0x2736 <SpiInit>
  // load list of commands
  St7735Commands(INIT_ST7735B);
    2bcc:	88 e0       	ldi	r24, 0x08	; 8
    2bce:	95 e0       	ldi	r25, 0x05	; 5
    2bd0:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <St7735Commands>
    2bd4:	08 95       	ret

00002bd6 <tecladoInit>:


void tecladoInit(void)
{
	//OUTPUTS
	DDRC |= (1 << DDC0) | (1 << DDC1);
    2bd6:	87 b1       	in	r24, 0x07	; 7
    2bd8:	83 60       	ori	r24, 0x03	; 3
    2bda:	87 b9       	out	0x07, r24	; 7
	DDRD |= (1 << DDD2) | (1 << DDD3);
    2bdc:	8a b1       	in	r24, 0x0a	; 10
    2bde:	8c 60       	ori	r24, 0x0C	; 12
    2be0:	8a b9       	out	0x0a, r24	; 10
	
	//INPUTS
	DDRC &= ~((1 << DDC2) | (1 << DDC3) | (1 << DDC4) | (1 << DDC5));
    2be2:	87 b1       	in	r24, 0x07	; 7
    2be4:	83 7c       	andi	r24, 0xC3	; 195
    2be6:	87 b9       	out	0x07, r24	; 7
	DDRD &= ~((1 << DDD4) | (1 << DDD5) | (1 << DDD6) | (1 << DDD7));
    2be8:	8a b1       	in	r24, 0x0a	; 10
    2bea:	8f 70       	andi	r24, 0x0F	; 15
    2bec:	8a b9       	out	0x0a, r24	; 10
	
	//PULL-UP
	PORTC |= (1 << PORTC2) | (1 << PORTC3) | (1 << PORTC4) | (1 << PORTC5);
    2bee:	88 b1       	in	r24, 0x08	; 8
    2bf0:	8c 63       	ori	r24, 0x3C	; 60
    2bf2:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD4) | (1 << PORTD5) | (1 << PORTD6) | (1 << PORTD7);
    2bf4:	8b b1       	in	r24, 0x0b	; 11
    2bf6:	80 6f       	ori	r24, 0xF0	; 240
    2bf8:	8b b9       	out	0x0b, r24	; 11
	
	//OUTPUTS HIGH (neutro)
	PORTC |= (1 << PORTC0) | (1 << PORTC1);
    2bfa:	88 b1       	in	r24, 0x08	; 8
    2bfc:	83 60       	ori	r24, 0x03	; 3
    2bfe:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD2) | (1 << PORTC3);
    2c00:	8b b1       	in	r24, 0x0b	; 11
    2c02:	8c 60       	ori	r24, 0x0C	; 12
    2c04:	8b b9       	out	0x0b, r24	; 11
	
	PCMSK1 |= 0x3C; //PC2,3,4,5
    2c06:	ec e6       	ldi	r30, 0x6C	; 108
    2c08:	f0 e0       	ldi	r31, 0x00	; 0
    2c0a:	80 81       	ld	r24, Z
    2c0c:	8c 63       	ori	r24, 0x3C	; 60
    2c0e:	80 83       	st	Z, r24
	PCMSK2 |= 0xF0; //PD4,5,6,7
    2c10:	ed e6       	ldi	r30, 0x6D	; 109
    2c12:	f0 e0       	ldi	r31, 0x00	; 0
    2c14:	80 81       	ld	r24, Z
    2c16:	80 6f       	ori	r24, 0xF0	; 240
    2c18:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE1) | (1<<PCIE2);   //interrupts de cambio habilitados
    2c1a:	e8 e6       	ldi	r30, 0x68	; 104
    2c1c:	f0 e0       	ldi	r31, 0x00	; 0
    2c1e:	80 81       	ld	r24, Z
    2c20:	86 60       	ori	r24, 0x06	; 6
    2c22:	80 83       	st	Z, r24
	
	//seteoTimmer2
	
	TCCR2A = 0;
    2c24:	a0 eb       	ldi	r26, 0xB0	; 176
    2c26:	b0 e0       	ldi	r27, 0x00	; 0
    2c28:	1c 92       	st	X, r1
	TCCR2B = 0;
    2c2a:	e1 eb       	ldi	r30, 0xB1	; 177
    2c2c:	f0 e0       	ldi	r31, 0x00	; 0
    2c2e:	10 82       	st	Z, r1
	TCNT2 = 0;
    2c30:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>

	// 1000 Hz (16000000/((124+1)*128))
	OCR2A = 124;
    2c34:	8c e7       	ldi	r24, 0x7C	; 124
    2c36:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	// CTC
	TCCR2A |= (1 << WGM21);
    2c3a:	8c 91       	ld	r24, X
    2c3c:	82 60       	ori	r24, 0x02	; 2
    2c3e:	8c 93       	st	X, r24
	// Prescaler 128
	TCCR2B |= (1 << CS22) | (1 << CS20);
    2c40:	80 81       	ld	r24, Z
    2c42:	85 60       	ori	r24, 0x05	; 5
    2c44:	80 83       	st	Z, r24
	// Output Compare Match A Interrupt Enable
	TIMSK2 |= (1 << OCIE2A);
    2c46:	e0 e7       	ldi	r30, 0x70	; 112
    2c48:	f0 e0       	ldi	r31, 0x00	; 0
    2c4a:	80 81       	ld	r24, Z
    2c4c:	82 60       	ori	r24, 0x02	; 2
    2c4e:	80 83       	st	Z, r24
    2c50:	08 95       	ret

00002c52 <USART_Transmit_char>:


void USART_Transmit_char( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
    2c52:	e0 ec       	ldi	r30, 0xC0	; 192
    2c54:	f0 e0       	ldi	r31, 0x00	; 0
    2c56:	90 81       	ld	r25, Z
    2c58:	95 ff       	sbrs	r25, 5
    2c5a:	fd cf       	rjmp	.-6      	; 0x2c56 <USART_Transmit_char+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
    2c5c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    2c60:	08 95       	ret

00002c62 <USART_Transmit_String>:
}

void USART_Transmit_String(char* StringPtr)
{
    2c62:	cf 93       	push	r28
    2c64:	df 93       	push	r29
    2c66:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
    2c68:	88 81       	ld	r24, Y
    2c6a:	88 23       	and	r24, r24
    2c6c:	31 f0       	breq	.+12     	; 0x2c7a <USART_Transmit_String+0x18>
    2c6e:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit_char(*StringPtr);
    2c70:	0e 94 29 16 	call	0x2c52	; 0x2c52 <USART_Transmit_char>
	UDR0 = data;
}

void USART_Transmit_String(char* StringPtr)
{
	while(*StringPtr != 0x00){
    2c74:	89 91       	ld	r24, Y+
    2c76:	81 11       	cpse	r24, r1
    2c78:	fb cf       	rjmp	.-10     	; 0x2c70 <USART_Transmit_String+0xe>
		USART_Transmit_char(*StringPtr);
		StringPtr++;
	}
}
    2c7a:	df 91       	pop	r29
    2c7c:	cf 91       	pop	r28
    2c7e:	08 95       	ret

00002c80 <USART_Init>:

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
    2c80:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
    2c84:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);			//habilitamos tx y rx
    2c88:	88 e1       	ldi	r24, 0x18	; 24
    2c8a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (3<<UCSZ00);					//decimos cuantos stopbit queremos y que data -> 8bits, 1stpobit
    2c8e:	86 e0       	ldi	r24, 0x06	; 6
    2c90:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    2c94:	08 95       	ret

00002c96 <__subsf3>:
    2c96:	50 58       	subi	r21, 0x80	; 128

00002c98 <__addsf3>:
    2c98:	bb 27       	eor	r27, r27
    2c9a:	aa 27       	eor	r26, r26
    2c9c:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <__addsf3x>
    2ca0:	0c 94 38 18 	jmp	0x3070	; 0x3070 <__fp_round>
    2ca4:	0e 94 ff 17 	call	0x2ffe	; 0x2ffe <__fp_pscA>
    2ca8:	38 f0       	brcs	.+14     	; 0x2cb8 <__addsf3+0x20>
    2caa:	0e 94 06 18 	call	0x300c	; 0x300c <__fp_pscB>
    2cae:	20 f0       	brcs	.+8      	; 0x2cb8 <__addsf3+0x20>
    2cb0:	39 f4       	brne	.+14     	; 0x2cc0 <__addsf3+0x28>
    2cb2:	9f 3f       	cpi	r25, 0xFF	; 255
    2cb4:	19 f4       	brne	.+6      	; 0x2cbc <__addsf3+0x24>
    2cb6:	26 f4       	brtc	.+8      	; 0x2cc0 <__addsf3+0x28>
    2cb8:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>
    2cbc:	0e f4       	brtc	.+2      	; 0x2cc0 <__addsf3+0x28>
    2cbe:	e0 95       	com	r30
    2cc0:	e7 fb       	bst	r30, 7
    2cc2:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>

00002cc6 <__addsf3x>:
    2cc6:	e9 2f       	mov	r30, r25
    2cc8:	0e 94 5d 18 	call	0x30ba	; 0x30ba <__fp_split3>
    2ccc:	58 f3       	brcs	.-42     	; 0x2ca4 <__addsf3+0xc>
    2cce:	ba 17       	cp	r27, r26
    2cd0:	62 07       	cpc	r22, r18
    2cd2:	73 07       	cpc	r23, r19
    2cd4:	84 07       	cpc	r24, r20
    2cd6:	95 07       	cpc	r25, r21
    2cd8:	20 f0       	brcs	.+8      	; 0x2ce2 <__addsf3x+0x1c>
    2cda:	79 f4       	brne	.+30     	; 0x2cfa <__addsf3x+0x34>
    2cdc:	a6 f5       	brtc	.+104    	; 0x2d46 <__addsf3x+0x80>
    2cde:	0c 94 7f 18 	jmp	0x30fe	; 0x30fe <__fp_zero>
    2ce2:	0e f4       	brtc	.+2      	; 0x2ce6 <__addsf3x+0x20>
    2ce4:	e0 95       	com	r30
    2ce6:	0b 2e       	mov	r0, r27
    2ce8:	ba 2f       	mov	r27, r26
    2cea:	a0 2d       	mov	r26, r0
    2cec:	0b 01       	movw	r0, r22
    2cee:	b9 01       	movw	r22, r18
    2cf0:	90 01       	movw	r18, r0
    2cf2:	0c 01       	movw	r0, r24
    2cf4:	ca 01       	movw	r24, r20
    2cf6:	a0 01       	movw	r20, r0
    2cf8:	11 24       	eor	r1, r1
    2cfa:	ff 27       	eor	r31, r31
    2cfc:	59 1b       	sub	r21, r25
    2cfe:	99 f0       	breq	.+38     	; 0x2d26 <__addsf3x+0x60>
    2d00:	59 3f       	cpi	r21, 0xF9	; 249
    2d02:	50 f4       	brcc	.+20     	; 0x2d18 <__addsf3x+0x52>
    2d04:	50 3e       	cpi	r21, 0xE0	; 224
    2d06:	68 f1       	brcs	.+90     	; 0x2d62 <__addsf3x+0x9c>
    2d08:	1a 16       	cp	r1, r26
    2d0a:	f0 40       	sbci	r31, 0x00	; 0
    2d0c:	a2 2f       	mov	r26, r18
    2d0e:	23 2f       	mov	r18, r19
    2d10:	34 2f       	mov	r19, r20
    2d12:	44 27       	eor	r20, r20
    2d14:	58 5f       	subi	r21, 0xF8	; 248
    2d16:	f3 cf       	rjmp	.-26     	; 0x2cfe <__addsf3x+0x38>
    2d18:	46 95       	lsr	r20
    2d1a:	37 95       	ror	r19
    2d1c:	27 95       	ror	r18
    2d1e:	a7 95       	ror	r26
    2d20:	f0 40       	sbci	r31, 0x00	; 0
    2d22:	53 95       	inc	r21
    2d24:	c9 f7       	brne	.-14     	; 0x2d18 <__addsf3x+0x52>
    2d26:	7e f4       	brtc	.+30     	; 0x2d46 <__addsf3x+0x80>
    2d28:	1f 16       	cp	r1, r31
    2d2a:	ba 0b       	sbc	r27, r26
    2d2c:	62 0b       	sbc	r22, r18
    2d2e:	73 0b       	sbc	r23, r19
    2d30:	84 0b       	sbc	r24, r20
    2d32:	ba f0       	brmi	.+46     	; 0x2d62 <__addsf3x+0x9c>
    2d34:	91 50       	subi	r25, 0x01	; 1
    2d36:	a1 f0       	breq	.+40     	; 0x2d60 <__addsf3x+0x9a>
    2d38:	ff 0f       	add	r31, r31
    2d3a:	bb 1f       	adc	r27, r27
    2d3c:	66 1f       	adc	r22, r22
    2d3e:	77 1f       	adc	r23, r23
    2d40:	88 1f       	adc	r24, r24
    2d42:	c2 f7       	brpl	.-16     	; 0x2d34 <__addsf3x+0x6e>
    2d44:	0e c0       	rjmp	.+28     	; 0x2d62 <__addsf3x+0x9c>
    2d46:	ba 0f       	add	r27, r26
    2d48:	62 1f       	adc	r22, r18
    2d4a:	73 1f       	adc	r23, r19
    2d4c:	84 1f       	adc	r24, r20
    2d4e:	48 f4       	brcc	.+18     	; 0x2d62 <__addsf3x+0x9c>
    2d50:	87 95       	ror	r24
    2d52:	77 95       	ror	r23
    2d54:	67 95       	ror	r22
    2d56:	b7 95       	ror	r27
    2d58:	f7 95       	ror	r31
    2d5a:	9e 3f       	cpi	r25, 0xFE	; 254
    2d5c:	08 f0       	brcs	.+2      	; 0x2d60 <__addsf3x+0x9a>
    2d5e:	b0 cf       	rjmp	.-160    	; 0x2cc0 <__addsf3+0x28>
    2d60:	93 95       	inc	r25
    2d62:	88 0f       	add	r24, r24
    2d64:	08 f0       	brcs	.+2      	; 0x2d68 <__addsf3x+0xa2>
    2d66:	99 27       	eor	r25, r25
    2d68:	ee 0f       	add	r30, r30
    2d6a:	97 95       	ror	r25
    2d6c:	87 95       	ror	r24
    2d6e:	08 95       	ret

00002d70 <__cmpsf2>:
    2d70:	0e 94 ab 17 	call	0x2f56	; 0x2f56 <__fp_cmp>
    2d74:	08 f4       	brcc	.+2      	; 0x2d78 <__cmpsf2+0x8>
    2d76:	81 e0       	ldi	r24, 0x01	; 1
    2d78:	08 95       	ret

00002d7a <cos>:
    2d7a:	0e 94 0f 18 	call	0x301e	; 0x301e <__fp_rempio2>
    2d7e:	e3 95       	inc	r30
    2d80:	0c 94 49 18 	jmp	0x3092	; 0x3092 <__fp_sinus>

00002d84 <__divsf3>:
    2d84:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divsf3x>
    2d88:	0c 94 38 18 	jmp	0x3070	; 0x3070 <__fp_round>
    2d8c:	0e 94 06 18 	call	0x300c	; 0x300c <__fp_pscB>
    2d90:	58 f0       	brcs	.+22     	; 0x2da8 <__divsf3+0x24>
    2d92:	0e 94 ff 17 	call	0x2ffe	; 0x2ffe <__fp_pscA>
    2d96:	40 f0       	brcs	.+16     	; 0x2da8 <__divsf3+0x24>
    2d98:	29 f4       	brne	.+10     	; 0x2da4 <__divsf3+0x20>
    2d9a:	5f 3f       	cpi	r21, 0xFF	; 255
    2d9c:	29 f0       	breq	.+10     	; 0x2da8 <__divsf3+0x24>
    2d9e:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    2da2:	51 11       	cpse	r21, r1
    2da4:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__fp_szero>
    2da8:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>

00002dac <__divsf3x>:
    2dac:	0e 94 5d 18 	call	0x30ba	; 0x30ba <__fp_split3>
    2db0:	68 f3       	brcs	.-38     	; 0x2d8c <__divsf3+0x8>

00002db2 <__divsf3_pse>:
    2db2:	99 23       	and	r25, r25
    2db4:	b1 f3       	breq	.-20     	; 0x2da2 <__divsf3+0x1e>
    2db6:	55 23       	and	r21, r21
    2db8:	91 f3       	breq	.-28     	; 0x2d9e <__divsf3+0x1a>
    2dba:	95 1b       	sub	r25, r21
    2dbc:	55 0b       	sbc	r21, r21
    2dbe:	bb 27       	eor	r27, r27
    2dc0:	aa 27       	eor	r26, r26
    2dc2:	62 17       	cp	r22, r18
    2dc4:	73 07       	cpc	r23, r19
    2dc6:	84 07       	cpc	r24, r20
    2dc8:	38 f0       	brcs	.+14     	; 0x2dd8 <__divsf3_pse+0x26>
    2dca:	9f 5f       	subi	r25, 0xFF	; 255
    2dcc:	5f 4f       	sbci	r21, 0xFF	; 255
    2dce:	22 0f       	add	r18, r18
    2dd0:	33 1f       	adc	r19, r19
    2dd2:	44 1f       	adc	r20, r20
    2dd4:	aa 1f       	adc	r26, r26
    2dd6:	a9 f3       	breq	.-22     	; 0x2dc2 <__divsf3_pse+0x10>
    2dd8:	35 d0       	rcall	.+106    	; 0x2e44 <__divsf3_pse+0x92>
    2dda:	0e 2e       	mov	r0, r30
    2ddc:	3a f0       	brmi	.+14     	; 0x2dec <__divsf3_pse+0x3a>
    2dde:	e0 e8       	ldi	r30, 0x80	; 128
    2de0:	32 d0       	rcall	.+100    	; 0x2e46 <__divsf3_pse+0x94>
    2de2:	91 50       	subi	r25, 0x01	; 1
    2de4:	50 40       	sbci	r21, 0x00	; 0
    2de6:	e6 95       	lsr	r30
    2de8:	00 1c       	adc	r0, r0
    2dea:	ca f7       	brpl	.-14     	; 0x2dde <__divsf3_pse+0x2c>
    2dec:	2b d0       	rcall	.+86     	; 0x2e44 <__divsf3_pse+0x92>
    2dee:	fe 2f       	mov	r31, r30
    2df0:	29 d0       	rcall	.+82     	; 0x2e44 <__divsf3_pse+0x92>
    2df2:	66 0f       	add	r22, r22
    2df4:	77 1f       	adc	r23, r23
    2df6:	88 1f       	adc	r24, r24
    2df8:	bb 1f       	adc	r27, r27
    2dfa:	26 17       	cp	r18, r22
    2dfc:	37 07       	cpc	r19, r23
    2dfe:	48 07       	cpc	r20, r24
    2e00:	ab 07       	cpc	r26, r27
    2e02:	b0 e8       	ldi	r27, 0x80	; 128
    2e04:	09 f0       	breq	.+2      	; 0x2e08 <__divsf3_pse+0x56>
    2e06:	bb 0b       	sbc	r27, r27
    2e08:	80 2d       	mov	r24, r0
    2e0a:	bf 01       	movw	r22, r30
    2e0c:	ff 27       	eor	r31, r31
    2e0e:	93 58       	subi	r25, 0x83	; 131
    2e10:	5f 4f       	sbci	r21, 0xFF	; 255
    2e12:	3a f0       	brmi	.+14     	; 0x2e22 <__divsf3_pse+0x70>
    2e14:	9e 3f       	cpi	r25, 0xFE	; 254
    2e16:	51 05       	cpc	r21, r1
    2e18:	78 f0       	brcs	.+30     	; 0x2e38 <__divsf3_pse+0x86>
    2e1a:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    2e1e:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__fp_szero>
    2e22:	5f 3f       	cpi	r21, 0xFF	; 255
    2e24:	e4 f3       	brlt	.-8      	; 0x2e1e <__divsf3_pse+0x6c>
    2e26:	98 3e       	cpi	r25, 0xE8	; 232
    2e28:	d4 f3       	brlt	.-12     	; 0x2e1e <__divsf3_pse+0x6c>
    2e2a:	86 95       	lsr	r24
    2e2c:	77 95       	ror	r23
    2e2e:	67 95       	ror	r22
    2e30:	b7 95       	ror	r27
    2e32:	f7 95       	ror	r31
    2e34:	9f 5f       	subi	r25, 0xFF	; 255
    2e36:	c9 f7       	brne	.-14     	; 0x2e2a <__divsf3_pse+0x78>
    2e38:	88 0f       	add	r24, r24
    2e3a:	91 1d       	adc	r25, r1
    2e3c:	96 95       	lsr	r25
    2e3e:	87 95       	ror	r24
    2e40:	97 f9       	bld	r25, 7
    2e42:	08 95       	ret
    2e44:	e1 e0       	ldi	r30, 0x01	; 1
    2e46:	66 0f       	add	r22, r22
    2e48:	77 1f       	adc	r23, r23
    2e4a:	88 1f       	adc	r24, r24
    2e4c:	bb 1f       	adc	r27, r27
    2e4e:	62 17       	cp	r22, r18
    2e50:	73 07       	cpc	r23, r19
    2e52:	84 07       	cpc	r24, r20
    2e54:	ba 07       	cpc	r27, r26
    2e56:	20 f0       	brcs	.+8      	; 0x2e60 <__divsf3_pse+0xae>
    2e58:	62 1b       	sub	r22, r18
    2e5a:	73 0b       	sbc	r23, r19
    2e5c:	84 0b       	sbc	r24, r20
    2e5e:	ba 0b       	sbc	r27, r26
    2e60:	ee 1f       	adc	r30, r30
    2e62:	88 f7       	brcc	.-30     	; 0x2e46 <__divsf3_pse+0x94>
    2e64:	e0 95       	com	r30
    2e66:	08 95       	ret
    2e68:	29 f4       	brne	.+10     	; 0x2e74 <__divsf3_pse+0xc2>
    2e6a:	16 f0       	brts	.+4      	; 0x2e70 <__divsf3_pse+0xbe>
    2e6c:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    2e70:	0c 94 7f 18 	jmp	0x30fe	; 0x30fe <__fp_zero>
    2e74:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>

00002e78 <exp>:
    2e78:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_splitA>
    2e7c:	a8 f3       	brcs	.-22     	; 0x2e68 <__divsf3_pse+0xb6>
    2e7e:	96 38       	cpi	r25, 0x86	; 134
    2e80:	a0 f7       	brcc	.-24     	; 0x2e6a <__divsf3_pse+0xb8>
    2e82:	07 f8       	bld	r0, 7
    2e84:	0f 92       	push	r0
    2e86:	e8 94       	clt
    2e88:	2b e3       	ldi	r18, 0x3B	; 59
    2e8a:	3a ea       	ldi	r19, 0xAA	; 170
    2e8c:	48 eb       	ldi	r20, 0xB8	; 184
    2e8e:	5f e7       	ldi	r21, 0x7F	; 127
    2e90:	0e 94 6f 19 	call	0x32de	; 0x32de <__mulsf3_pse>
    2e94:	0f 92       	push	r0
    2e96:	0f 92       	push	r0
    2e98:	0f 92       	push	r0
    2e9a:	4d b7       	in	r20, 0x3d	; 61
    2e9c:	5e b7       	in	r21, 0x3e	; 62
    2e9e:	0f 92       	push	r0
    2ea0:	0e 94 25 19 	call	0x324a	; 0x324a <modf>
    2ea4:	ea e6       	ldi	r30, 0x6A	; 106
    2ea6:	f1 e0       	ldi	r31, 0x01	; 1
    2ea8:	0e 94 d8 17 	call	0x2fb0	; 0x2fb0 <__fp_powser>
    2eac:	4f 91       	pop	r20
    2eae:	5f 91       	pop	r21
    2eb0:	ef 91       	pop	r30
    2eb2:	ff 91       	pop	r31
    2eb4:	e5 95       	asr	r30
    2eb6:	ee 1f       	adc	r30, r30
    2eb8:	ff 1f       	adc	r31, r31
    2eba:	49 f0       	breq	.+18     	; 0x2ece <exp+0x56>
    2ebc:	fe 57       	subi	r31, 0x7E	; 126
    2ebe:	e0 68       	ori	r30, 0x80	; 128
    2ec0:	44 27       	eor	r20, r20
    2ec2:	ee 0f       	add	r30, r30
    2ec4:	44 1f       	adc	r20, r20
    2ec6:	fa 95       	dec	r31
    2ec8:	e1 f7       	brne	.-8      	; 0x2ec2 <exp+0x4a>
    2eca:	41 95       	neg	r20
    2ecc:	55 0b       	sbc	r21, r21
    2ece:	0e 94 97 18 	call	0x312e	; 0x312e <ldexp>
    2ed2:	0f 90       	pop	r0
    2ed4:	07 fe       	sbrs	r0, 7
    2ed6:	0c 94 8b 18 	jmp	0x3116	; 0x3116 <inverse>
    2eda:	08 95       	ret

00002edc <__floatunsisf>:
    2edc:	e8 94       	clt
    2ede:	09 c0       	rjmp	.+18     	; 0x2ef2 <__floatsisf+0x12>

00002ee0 <__floatsisf>:
    2ee0:	97 fb       	bst	r25, 7
    2ee2:	3e f4       	brtc	.+14     	; 0x2ef2 <__floatsisf+0x12>
    2ee4:	90 95       	com	r25
    2ee6:	80 95       	com	r24
    2ee8:	70 95       	com	r23
    2eea:	61 95       	neg	r22
    2eec:	7f 4f       	sbci	r23, 0xFF	; 255
    2eee:	8f 4f       	sbci	r24, 0xFF	; 255
    2ef0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ef2:	99 23       	and	r25, r25
    2ef4:	a9 f0       	breq	.+42     	; 0x2f20 <__floatsisf+0x40>
    2ef6:	f9 2f       	mov	r31, r25
    2ef8:	96 e9       	ldi	r25, 0x96	; 150
    2efa:	bb 27       	eor	r27, r27
    2efc:	93 95       	inc	r25
    2efe:	f6 95       	lsr	r31
    2f00:	87 95       	ror	r24
    2f02:	77 95       	ror	r23
    2f04:	67 95       	ror	r22
    2f06:	b7 95       	ror	r27
    2f08:	f1 11       	cpse	r31, r1
    2f0a:	f8 cf       	rjmp	.-16     	; 0x2efc <__floatsisf+0x1c>
    2f0c:	fa f4       	brpl	.+62     	; 0x2f4c <__floatsisf+0x6c>
    2f0e:	bb 0f       	add	r27, r27
    2f10:	11 f4       	brne	.+4      	; 0x2f16 <__floatsisf+0x36>
    2f12:	60 ff       	sbrs	r22, 0
    2f14:	1b c0       	rjmp	.+54     	; 0x2f4c <__floatsisf+0x6c>
    2f16:	6f 5f       	subi	r22, 0xFF	; 255
    2f18:	7f 4f       	sbci	r23, 0xFF	; 255
    2f1a:	8f 4f       	sbci	r24, 0xFF	; 255
    2f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f1e:	16 c0       	rjmp	.+44     	; 0x2f4c <__floatsisf+0x6c>
    2f20:	88 23       	and	r24, r24
    2f22:	11 f0       	breq	.+4      	; 0x2f28 <__floatsisf+0x48>
    2f24:	96 e9       	ldi	r25, 0x96	; 150
    2f26:	11 c0       	rjmp	.+34     	; 0x2f4a <__floatsisf+0x6a>
    2f28:	77 23       	and	r23, r23
    2f2a:	21 f0       	breq	.+8      	; 0x2f34 <__floatsisf+0x54>
    2f2c:	9e e8       	ldi	r25, 0x8E	; 142
    2f2e:	87 2f       	mov	r24, r23
    2f30:	76 2f       	mov	r23, r22
    2f32:	05 c0       	rjmp	.+10     	; 0x2f3e <__floatsisf+0x5e>
    2f34:	66 23       	and	r22, r22
    2f36:	71 f0       	breq	.+28     	; 0x2f54 <__floatsisf+0x74>
    2f38:	96 e8       	ldi	r25, 0x86	; 134
    2f3a:	86 2f       	mov	r24, r22
    2f3c:	70 e0       	ldi	r23, 0x00	; 0
    2f3e:	60 e0       	ldi	r22, 0x00	; 0
    2f40:	2a f0       	brmi	.+10     	; 0x2f4c <__floatsisf+0x6c>
    2f42:	9a 95       	dec	r25
    2f44:	66 0f       	add	r22, r22
    2f46:	77 1f       	adc	r23, r23
    2f48:	88 1f       	adc	r24, r24
    2f4a:	da f7       	brpl	.-10     	; 0x2f42 <__floatsisf+0x62>
    2f4c:	88 0f       	add	r24, r24
    2f4e:	96 95       	lsr	r25
    2f50:	87 95       	ror	r24
    2f52:	97 f9       	bld	r25, 7
    2f54:	08 95       	ret

00002f56 <__fp_cmp>:
    2f56:	99 0f       	add	r25, r25
    2f58:	00 08       	sbc	r0, r0
    2f5a:	55 0f       	add	r21, r21
    2f5c:	aa 0b       	sbc	r26, r26
    2f5e:	e0 e8       	ldi	r30, 0x80	; 128
    2f60:	fe ef       	ldi	r31, 0xFE	; 254
    2f62:	16 16       	cp	r1, r22
    2f64:	17 06       	cpc	r1, r23
    2f66:	e8 07       	cpc	r30, r24
    2f68:	f9 07       	cpc	r31, r25
    2f6a:	c0 f0       	brcs	.+48     	; 0x2f9c <__fp_cmp+0x46>
    2f6c:	12 16       	cp	r1, r18
    2f6e:	13 06       	cpc	r1, r19
    2f70:	e4 07       	cpc	r30, r20
    2f72:	f5 07       	cpc	r31, r21
    2f74:	98 f0       	brcs	.+38     	; 0x2f9c <__fp_cmp+0x46>
    2f76:	62 1b       	sub	r22, r18
    2f78:	73 0b       	sbc	r23, r19
    2f7a:	84 0b       	sbc	r24, r20
    2f7c:	95 0b       	sbc	r25, r21
    2f7e:	39 f4       	brne	.+14     	; 0x2f8e <__fp_cmp+0x38>
    2f80:	0a 26       	eor	r0, r26
    2f82:	61 f0       	breq	.+24     	; 0x2f9c <__fp_cmp+0x46>
    2f84:	23 2b       	or	r18, r19
    2f86:	24 2b       	or	r18, r20
    2f88:	25 2b       	or	r18, r21
    2f8a:	21 f4       	brne	.+8      	; 0x2f94 <__fp_cmp+0x3e>
    2f8c:	08 95       	ret
    2f8e:	0a 26       	eor	r0, r26
    2f90:	09 f4       	brne	.+2      	; 0x2f94 <__fp_cmp+0x3e>
    2f92:	a1 40       	sbci	r26, 0x01	; 1
    2f94:	a6 95       	lsr	r26
    2f96:	8f ef       	ldi	r24, 0xFF	; 255
    2f98:	81 1d       	adc	r24, r1
    2f9a:	81 1d       	adc	r24, r1
    2f9c:	08 95       	ret

00002f9e <__fp_inf>:
    2f9e:	97 f9       	bld	r25, 7
    2fa0:	9f 67       	ori	r25, 0x7F	; 127
    2fa2:	80 e8       	ldi	r24, 0x80	; 128
    2fa4:	70 e0       	ldi	r23, 0x00	; 0
    2fa6:	60 e0       	ldi	r22, 0x00	; 0
    2fa8:	08 95       	ret

00002faa <__fp_nan>:
    2faa:	9f ef       	ldi	r25, 0xFF	; 255
    2fac:	80 ec       	ldi	r24, 0xC0	; 192
    2fae:	08 95       	ret

00002fb0 <__fp_powser>:
    2fb0:	df 93       	push	r29
    2fb2:	cf 93       	push	r28
    2fb4:	1f 93       	push	r17
    2fb6:	0f 93       	push	r16
    2fb8:	ff 92       	push	r15
    2fba:	ef 92       	push	r14
    2fbc:	df 92       	push	r13
    2fbe:	7b 01       	movw	r14, r22
    2fc0:	8c 01       	movw	r16, r24
    2fc2:	68 94       	set
    2fc4:	06 c0       	rjmp	.+12     	; 0x2fd2 <__fp_powser+0x22>
    2fc6:	da 2e       	mov	r13, r26
    2fc8:	ef 01       	movw	r28, r30
    2fca:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <__mulsf3x>
    2fce:	fe 01       	movw	r30, r28
    2fd0:	e8 94       	clt
    2fd2:	a5 91       	lpm	r26, Z+
    2fd4:	25 91       	lpm	r18, Z+
    2fd6:	35 91       	lpm	r19, Z+
    2fd8:	45 91       	lpm	r20, Z+
    2fda:	55 91       	lpm	r21, Z+
    2fdc:	a6 f3       	brts	.-24     	; 0x2fc6 <__fp_powser+0x16>
    2fde:	ef 01       	movw	r28, r30
    2fe0:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <__addsf3x>
    2fe4:	fe 01       	movw	r30, r28
    2fe6:	97 01       	movw	r18, r14
    2fe8:	a8 01       	movw	r20, r16
    2fea:	da 94       	dec	r13
    2fec:	69 f7       	brne	.-38     	; 0x2fc8 <__fp_powser+0x18>
    2fee:	df 90       	pop	r13
    2ff0:	ef 90       	pop	r14
    2ff2:	ff 90       	pop	r15
    2ff4:	0f 91       	pop	r16
    2ff6:	1f 91       	pop	r17
    2ff8:	cf 91       	pop	r28
    2ffa:	df 91       	pop	r29
    2ffc:	08 95       	ret

00002ffe <__fp_pscA>:
    2ffe:	00 24       	eor	r0, r0
    3000:	0a 94       	dec	r0
    3002:	16 16       	cp	r1, r22
    3004:	17 06       	cpc	r1, r23
    3006:	18 06       	cpc	r1, r24
    3008:	09 06       	cpc	r0, r25
    300a:	08 95       	ret

0000300c <__fp_pscB>:
    300c:	00 24       	eor	r0, r0
    300e:	0a 94       	dec	r0
    3010:	12 16       	cp	r1, r18
    3012:	13 06       	cpc	r1, r19
    3014:	14 06       	cpc	r1, r20
    3016:	05 06       	cpc	r0, r21
    3018:	08 95       	ret
    301a:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>

0000301e <__fp_rempio2>:
    301e:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_splitA>
    3022:	d8 f3       	brcs	.-10     	; 0x301a <__fp_pscB+0xe>
    3024:	e8 94       	clt
    3026:	e0 e0       	ldi	r30, 0x00	; 0
    3028:	bb 27       	eor	r27, r27
    302a:	9f 57       	subi	r25, 0x7F	; 127
    302c:	f0 f0       	brcs	.+60     	; 0x306a <__fp_rempio2+0x4c>
    302e:	2a ed       	ldi	r18, 0xDA	; 218
    3030:	3f e0       	ldi	r19, 0x0F	; 15
    3032:	49 ec       	ldi	r20, 0xC9	; 201
    3034:	06 c0       	rjmp	.+12     	; 0x3042 <__fp_rempio2+0x24>
    3036:	ee 0f       	add	r30, r30
    3038:	bb 0f       	add	r27, r27
    303a:	66 1f       	adc	r22, r22
    303c:	77 1f       	adc	r23, r23
    303e:	88 1f       	adc	r24, r24
    3040:	28 f0       	brcs	.+10     	; 0x304c <__fp_rempio2+0x2e>
    3042:	b2 3a       	cpi	r27, 0xA2	; 162
    3044:	62 07       	cpc	r22, r18
    3046:	73 07       	cpc	r23, r19
    3048:	84 07       	cpc	r24, r20
    304a:	28 f0       	brcs	.+10     	; 0x3056 <__fp_rempio2+0x38>
    304c:	b2 5a       	subi	r27, 0xA2	; 162
    304e:	62 0b       	sbc	r22, r18
    3050:	73 0b       	sbc	r23, r19
    3052:	84 0b       	sbc	r24, r20
    3054:	e3 95       	inc	r30
    3056:	9a 95       	dec	r25
    3058:	72 f7       	brpl	.-36     	; 0x3036 <__fp_rempio2+0x18>
    305a:	80 38       	cpi	r24, 0x80	; 128
    305c:	30 f4       	brcc	.+12     	; 0x306a <__fp_rempio2+0x4c>
    305e:	9a 95       	dec	r25
    3060:	bb 0f       	add	r27, r27
    3062:	66 1f       	adc	r22, r22
    3064:	77 1f       	adc	r23, r23
    3066:	88 1f       	adc	r24, r24
    3068:	d2 f7       	brpl	.-12     	; 0x305e <__fp_rempio2+0x40>
    306a:	90 48       	sbci	r25, 0x80	; 128
    306c:	0c 94 8b 1a 	jmp	0x3516	; 0x3516 <__fp_mpack_finite>

00003070 <__fp_round>:
    3070:	09 2e       	mov	r0, r25
    3072:	03 94       	inc	r0
    3074:	00 0c       	add	r0, r0
    3076:	11 f4       	brne	.+4      	; 0x307c <__fp_round+0xc>
    3078:	88 23       	and	r24, r24
    307a:	52 f0       	brmi	.+20     	; 0x3090 <__fp_round+0x20>
    307c:	bb 0f       	add	r27, r27
    307e:	40 f4       	brcc	.+16     	; 0x3090 <__fp_round+0x20>
    3080:	bf 2b       	or	r27, r31
    3082:	11 f4       	brne	.+4      	; 0x3088 <__fp_round+0x18>
    3084:	60 ff       	sbrs	r22, 0
    3086:	04 c0       	rjmp	.+8      	; 0x3090 <__fp_round+0x20>
    3088:	6f 5f       	subi	r22, 0xFF	; 255
    308a:	7f 4f       	sbci	r23, 0xFF	; 255
    308c:	8f 4f       	sbci	r24, 0xFF	; 255
    308e:	9f 4f       	sbci	r25, 0xFF	; 255
    3090:	08 95       	ret

00003092 <__fp_sinus>:
    3092:	ef 93       	push	r30
    3094:	e0 ff       	sbrs	r30, 0
    3096:	07 c0       	rjmp	.+14     	; 0x30a6 <__fp_sinus+0x14>
    3098:	a2 ea       	ldi	r26, 0xA2	; 162
    309a:	2a ed       	ldi	r18, 0xDA	; 218
    309c:	3f e0       	ldi	r19, 0x0F	; 15
    309e:	49 ec       	ldi	r20, 0xC9	; 201
    30a0:	5f eb       	ldi	r21, 0xBF	; 191
    30a2:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <__addsf3x>
    30a6:	0e 94 38 18 	call	0x3070	; 0x3070 <__fp_round>
    30aa:	0f 90       	pop	r0
    30ac:	03 94       	inc	r0
    30ae:	01 fc       	sbrc	r0, 1
    30b0:	90 58       	subi	r25, 0x80	; 128
    30b2:	e2 e9       	ldi	r30, 0x92	; 146
    30b4:	f1 e0       	ldi	r31, 0x01	; 1
    30b6:	0c 94 9e 1a 	jmp	0x353c	; 0x353c <__fp_powsodd>

000030ba <__fp_split3>:
    30ba:	57 fd       	sbrc	r21, 7
    30bc:	90 58       	subi	r25, 0x80	; 128
    30be:	44 0f       	add	r20, r20
    30c0:	55 1f       	adc	r21, r21
    30c2:	59 f0       	breq	.+22     	; 0x30da <__fp_splitA+0x10>
    30c4:	5f 3f       	cpi	r21, 0xFF	; 255
    30c6:	71 f0       	breq	.+28     	; 0x30e4 <__fp_splitA+0x1a>
    30c8:	47 95       	ror	r20

000030ca <__fp_splitA>:
    30ca:	88 0f       	add	r24, r24
    30cc:	97 fb       	bst	r25, 7
    30ce:	99 1f       	adc	r25, r25
    30d0:	61 f0       	breq	.+24     	; 0x30ea <__fp_splitA+0x20>
    30d2:	9f 3f       	cpi	r25, 0xFF	; 255
    30d4:	79 f0       	breq	.+30     	; 0x30f4 <__fp_splitA+0x2a>
    30d6:	87 95       	ror	r24
    30d8:	08 95       	ret
    30da:	12 16       	cp	r1, r18
    30dc:	13 06       	cpc	r1, r19
    30de:	14 06       	cpc	r1, r20
    30e0:	55 1f       	adc	r21, r21
    30e2:	f2 cf       	rjmp	.-28     	; 0x30c8 <__fp_split3+0xe>
    30e4:	46 95       	lsr	r20
    30e6:	f1 df       	rcall	.-30     	; 0x30ca <__fp_splitA>
    30e8:	08 c0       	rjmp	.+16     	; 0x30fa <__fp_splitA+0x30>
    30ea:	16 16       	cp	r1, r22
    30ec:	17 06       	cpc	r1, r23
    30ee:	18 06       	cpc	r1, r24
    30f0:	99 1f       	adc	r25, r25
    30f2:	f1 cf       	rjmp	.-30     	; 0x30d6 <__fp_splitA+0xc>
    30f4:	86 95       	lsr	r24
    30f6:	71 05       	cpc	r23, r1
    30f8:	61 05       	cpc	r22, r1
    30fa:	08 94       	sec
    30fc:	08 95       	ret

000030fe <__fp_zero>:
    30fe:	e8 94       	clt

00003100 <__fp_szero>:
    3100:	bb 27       	eor	r27, r27
    3102:	66 27       	eor	r22, r22
    3104:	77 27       	eor	r23, r23
    3106:	cb 01       	movw	r24, r22
    3108:	97 f9       	bld	r25, 7
    310a:	08 95       	ret

0000310c <__gesf2>:
    310c:	0e 94 ab 17 	call	0x2f56	; 0x2f56 <__fp_cmp>
    3110:	08 f4       	brcc	.+2      	; 0x3114 <__gesf2+0x8>
    3112:	8f ef       	ldi	r24, 0xFF	; 255
    3114:	08 95       	ret

00003116 <inverse>:
    3116:	9b 01       	movw	r18, r22
    3118:	ac 01       	movw	r20, r24
    311a:	60 e0       	ldi	r22, 0x00	; 0
    311c:	70 e0       	ldi	r23, 0x00	; 0
    311e:	80 e8       	ldi	r24, 0x80	; 128
    3120:	9f e3       	ldi	r25, 0x3F	; 63
    3122:	0c 94 c2 16 	jmp	0x2d84	; 0x2d84 <__divsf3>
    3126:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    312a:	0c 94 89 1a 	jmp	0x3512	; 0x3512 <__fp_mpack>

0000312e <ldexp>:
    312e:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_splitA>
    3132:	d8 f3       	brcs	.-10     	; 0x312a <inverse+0x14>
    3134:	99 23       	and	r25, r25
    3136:	c9 f3       	breq	.-14     	; 0x312a <inverse+0x14>
    3138:	94 0f       	add	r25, r20
    313a:	51 1d       	adc	r21, r1
    313c:	a3 f3       	brvs	.-24     	; 0x3126 <inverse+0x10>
    313e:	91 50       	subi	r25, 0x01	; 1
    3140:	50 40       	sbci	r21, 0x00	; 0
    3142:	94 f0       	brlt	.+36     	; 0x3168 <ldexp+0x3a>
    3144:	59 f0       	breq	.+22     	; 0x315c <ldexp+0x2e>
    3146:	88 23       	and	r24, r24
    3148:	32 f0       	brmi	.+12     	; 0x3156 <ldexp+0x28>
    314a:	66 0f       	add	r22, r22
    314c:	77 1f       	adc	r23, r23
    314e:	88 1f       	adc	r24, r24
    3150:	91 50       	subi	r25, 0x01	; 1
    3152:	50 40       	sbci	r21, 0x00	; 0
    3154:	c1 f7       	brne	.-16     	; 0x3146 <ldexp+0x18>
    3156:	9e 3f       	cpi	r25, 0xFE	; 254
    3158:	51 05       	cpc	r21, r1
    315a:	2c f7       	brge	.-54     	; 0x3126 <inverse+0x10>
    315c:	88 0f       	add	r24, r24
    315e:	91 1d       	adc	r25, r1
    3160:	96 95       	lsr	r25
    3162:	87 95       	ror	r24
    3164:	97 f9       	bld	r25, 7
    3166:	08 95       	ret
    3168:	5f 3f       	cpi	r21, 0xFF	; 255
    316a:	ac f0       	brlt	.+42     	; 0x3196 <ldexp+0x68>
    316c:	98 3e       	cpi	r25, 0xE8	; 232
    316e:	9c f0       	brlt	.+38     	; 0x3196 <ldexp+0x68>
    3170:	bb 27       	eor	r27, r27
    3172:	86 95       	lsr	r24
    3174:	77 95       	ror	r23
    3176:	67 95       	ror	r22
    3178:	b7 95       	ror	r27
    317a:	08 f4       	brcc	.+2      	; 0x317e <ldexp+0x50>
    317c:	b1 60       	ori	r27, 0x01	; 1
    317e:	93 95       	inc	r25
    3180:	c1 f7       	brne	.-16     	; 0x3172 <ldexp+0x44>
    3182:	bb 0f       	add	r27, r27
    3184:	58 f7       	brcc	.-42     	; 0x315c <ldexp+0x2e>
    3186:	11 f4       	brne	.+4      	; 0x318c <ldexp+0x5e>
    3188:	60 ff       	sbrs	r22, 0
    318a:	e8 cf       	rjmp	.-48     	; 0x315c <ldexp+0x2e>
    318c:	6f 5f       	subi	r22, 0xFF	; 255
    318e:	7f 4f       	sbci	r23, 0xFF	; 255
    3190:	8f 4f       	sbci	r24, 0xFF	; 255
    3192:	9f 4f       	sbci	r25, 0xFF	; 255
    3194:	e3 cf       	rjmp	.-58     	; 0x315c <ldexp+0x2e>
    3196:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__fp_szero>

0000319a <log10>:
    319a:	0e 94 dd 18 	call	0x31ba	; 0x31ba <log>
    319e:	29 ed       	ldi	r18, 0xD9	; 217
    31a0:	3b e5       	ldi	r19, 0x5B	; 91
    31a2:	4e ed       	ldi	r20, 0xDE	; 222
    31a4:	5e e3       	ldi	r21, 0x3E	; 62
    31a6:	0c 94 59 19 	jmp	0x32b2	; 0x32b2 <__mulsf3>
    31aa:	16 f0       	brts	.+4      	; 0x31b0 <log10+0x16>
    31ac:	0c 94 89 1a 	jmp	0x3512	; 0x3512 <__fp_mpack>
    31b0:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>
    31b4:	68 94       	set
    31b6:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>

000031ba <log>:
    31ba:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_splitA>
    31be:	a8 f3       	brcs	.-22     	; 0x31aa <log10+0x10>
    31c0:	99 23       	and	r25, r25
    31c2:	c1 f3       	breq	.-16     	; 0x31b4 <log10+0x1a>
    31c4:	ae f3       	brts	.-22     	; 0x31b0 <log10+0x16>
    31c6:	df 93       	push	r29
    31c8:	cf 93       	push	r28
    31ca:	1f 93       	push	r17
    31cc:	0f 93       	push	r16
    31ce:	ff 92       	push	r15
    31d0:	c9 2f       	mov	r28, r25
    31d2:	dd 27       	eor	r29, r29
    31d4:	88 23       	and	r24, r24
    31d6:	2a f0       	brmi	.+10     	; 0x31e2 <log+0x28>
    31d8:	21 97       	sbiw	r28, 0x01	; 1
    31da:	66 0f       	add	r22, r22
    31dc:	77 1f       	adc	r23, r23
    31de:	88 1f       	adc	r24, r24
    31e0:	da f7       	brpl	.-10     	; 0x31d8 <log+0x1e>
    31e2:	20 e0       	ldi	r18, 0x00	; 0
    31e4:	30 e0       	ldi	r19, 0x00	; 0
    31e6:	40 e8       	ldi	r20, 0x80	; 128
    31e8:	5f eb       	ldi	r21, 0xBF	; 191
    31ea:	9f e3       	ldi	r25, 0x3F	; 63
    31ec:	88 39       	cpi	r24, 0x98	; 152
    31ee:	20 f0       	brcs	.+8      	; 0x31f8 <log+0x3e>
    31f0:	80 3e       	cpi	r24, 0xE0	; 224
    31f2:	38 f0       	brcs	.+14     	; 0x3202 <log+0x48>
    31f4:	21 96       	adiw	r28, 0x01	; 1
    31f6:	8f 77       	andi	r24, 0x7F	; 127
    31f8:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    31fc:	e0 eb       	ldi	r30, 0xB0	; 176
    31fe:	f1 e0       	ldi	r31, 0x01	; 1
    3200:	04 c0       	rjmp	.+8      	; 0x320a <log+0x50>
    3202:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__addsf3>
    3206:	ed ed       	ldi	r30, 0xDD	; 221
    3208:	f1 e0       	ldi	r31, 0x01	; 1
    320a:	0e 94 d8 17 	call	0x2fb0	; 0x2fb0 <__fp_powser>
    320e:	8b 01       	movw	r16, r22
    3210:	be 01       	movw	r22, r28
    3212:	ec 01       	movw	r28, r24
    3214:	fb 2e       	mov	r15, r27
    3216:	6f 57       	subi	r22, 0x7F	; 127
    3218:	71 09       	sbc	r23, r1
    321a:	75 95       	asr	r23
    321c:	77 1f       	adc	r23, r23
    321e:	88 0b       	sbc	r24, r24
    3220:	99 0b       	sbc	r25, r25
    3222:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <__floatsisf>
    3226:	28 e1       	ldi	r18, 0x18	; 24
    3228:	32 e7       	ldi	r19, 0x72	; 114
    322a:	41 e3       	ldi	r20, 0x31	; 49
    322c:	5f e3       	ldi	r21, 0x3F	; 63
    322e:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <__mulsf3x>
    3232:	af 2d       	mov	r26, r15
    3234:	98 01       	movw	r18, r16
    3236:	ae 01       	movw	r20, r28
    3238:	ff 90       	pop	r15
    323a:	0f 91       	pop	r16
    323c:	1f 91       	pop	r17
    323e:	cf 91       	pop	r28
    3240:	df 91       	pop	r29
    3242:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <__addsf3x>
    3246:	0c 94 38 18 	jmp	0x3070	; 0x3070 <__fp_round>

0000324a <modf>:
    324a:	fa 01       	movw	r30, r20
    324c:	dc 01       	movw	r26, r24
    324e:	aa 0f       	add	r26, r26
    3250:	bb 1f       	adc	r27, r27
    3252:	9b 01       	movw	r18, r22
    3254:	ac 01       	movw	r20, r24
    3256:	bf 57       	subi	r27, 0x7F	; 127
    3258:	28 f4       	brcc	.+10     	; 0x3264 <modf+0x1a>
    325a:	22 27       	eor	r18, r18
    325c:	33 27       	eor	r19, r19
    325e:	44 27       	eor	r20, r20
    3260:	50 78       	andi	r21, 0x80	; 128
    3262:	20 c0       	rjmp	.+64     	; 0x32a4 <modf+0x5a>
    3264:	b7 51       	subi	r27, 0x17	; 23
    3266:	90 f4       	brcc	.+36     	; 0x328c <modf+0x42>
    3268:	ab 2f       	mov	r26, r27
    326a:	00 24       	eor	r0, r0
    326c:	46 95       	lsr	r20
    326e:	37 95       	ror	r19
    3270:	27 95       	ror	r18
    3272:	01 1c       	adc	r0, r1
    3274:	a3 95       	inc	r26
    3276:	d2 f3       	brmi	.-12     	; 0x326c <modf+0x22>
    3278:	00 20       	and	r0, r0
    327a:	71 f0       	breq	.+28     	; 0x3298 <modf+0x4e>
    327c:	22 0f       	add	r18, r18
    327e:	33 1f       	adc	r19, r19
    3280:	44 1f       	adc	r20, r20
    3282:	b3 95       	inc	r27
    3284:	da f3       	brmi	.-10     	; 0x327c <modf+0x32>
    3286:	0e d0       	rcall	.+28     	; 0x32a4 <modf+0x5a>
    3288:	0c 94 4b 16 	jmp	0x2c96	; 0x2c96 <__subsf3>
    328c:	61 30       	cpi	r22, 0x01	; 1
    328e:	71 05       	cpc	r23, r1
    3290:	a0 e8       	ldi	r26, 0x80	; 128
    3292:	8a 07       	cpc	r24, r26
    3294:	b9 46       	sbci	r27, 0x69	; 105
    3296:	30 f4       	brcc	.+12     	; 0x32a4 <modf+0x5a>
    3298:	9b 01       	movw	r18, r22
    329a:	ac 01       	movw	r20, r24
    329c:	66 27       	eor	r22, r22
    329e:	77 27       	eor	r23, r23
    32a0:	88 27       	eor	r24, r24
    32a2:	90 78       	andi	r25, 0x80	; 128
    32a4:	30 96       	adiw	r30, 0x00	; 0
    32a6:	21 f0       	breq	.+8      	; 0x32b0 <modf+0x66>
    32a8:	20 83       	st	Z, r18
    32aa:	31 83       	std	Z+1, r19	; 0x01
    32ac:	42 83       	std	Z+2, r20	; 0x02
    32ae:	53 83       	std	Z+3, r21	; 0x03
    32b0:	08 95       	ret

000032b2 <__mulsf3>:
    32b2:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <__mulsf3x>
    32b6:	0c 94 38 18 	jmp	0x3070	; 0x3070 <__fp_round>
    32ba:	0e 94 ff 17 	call	0x2ffe	; 0x2ffe <__fp_pscA>
    32be:	38 f0       	brcs	.+14     	; 0x32ce <__mulsf3+0x1c>
    32c0:	0e 94 06 18 	call	0x300c	; 0x300c <__fp_pscB>
    32c4:	20 f0       	brcs	.+8      	; 0x32ce <__mulsf3+0x1c>
    32c6:	95 23       	and	r25, r21
    32c8:	11 f0       	breq	.+4      	; 0x32ce <__mulsf3+0x1c>
    32ca:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    32ce:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>
    32d2:	11 24       	eor	r1, r1
    32d4:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__fp_szero>

000032d8 <__mulsf3x>:
    32d8:	0e 94 5d 18 	call	0x30ba	; 0x30ba <__fp_split3>
    32dc:	70 f3       	brcs	.-36     	; 0x32ba <__mulsf3+0x8>

000032de <__mulsf3_pse>:
    32de:	95 9f       	mul	r25, r21
    32e0:	c1 f3       	breq	.-16     	; 0x32d2 <__mulsf3+0x20>
    32e2:	95 0f       	add	r25, r21
    32e4:	50 e0       	ldi	r21, 0x00	; 0
    32e6:	55 1f       	adc	r21, r21
    32e8:	62 9f       	mul	r22, r18
    32ea:	f0 01       	movw	r30, r0
    32ec:	72 9f       	mul	r23, r18
    32ee:	bb 27       	eor	r27, r27
    32f0:	f0 0d       	add	r31, r0
    32f2:	b1 1d       	adc	r27, r1
    32f4:	63 9f       	mul	r22, r19
    32f6:	aa 27       	eor	r26, r26
    32f8:	f0 0d       	add	r31, r0
    32fa:	b1 1d       	adc	r27, r1
    32fc:	aa 1f       	adc	r26, r26
    32fe:	64 9f       	mul	r22, r20
    3300:	66 27       	eor	r22, r22
    3302:	b0 0d       	add	r27, r0
    3304:	a1 1d       	adc	r26, r1
    3306:	66 1f       	adc	r22, r22
    3308:	82 9f       	mul	r24, r18
    330a:	22 27       	eor	r18, r18
    330c:	b0 0d       	add	r27, r0
    330e:	a1 1d       	adc	r26, r1
    3310:	62 1f       	adc	r22, r18
    3312:	73 9f       	mul	r23, r19
    3314:	b0 0d       	add	r27, r0
    3316:	a1 1d       	adc	r26, r1
    3318:	62 1f       	adc	r22, r18
    331a:	83 9f       	mul	r24, r19
    331c:	a0 0d       	add	r26, r0
    331e:	61 1d       	adc	r22, r1
    3320:	22 1f       	adc	r18, r18
    3322:	74 9f       	mul	r23, r20
    3324:	33 27       	eor	r19, r19
    3326:	a0 0d       	add	r26, r0
    3328:	61 1d       	adc	r22, r1
    332a:	23 1f       	adc	r18, r19
    332c:	84 9f       	mul	r24, r20
    332e:	60 0d       	add	r22, r0
    3330:	21 1d       	adc	r18, r1
    3332:	82 2f       	mov	r24, r18
    3334:	76 2f       	mov	r23, r22
    3336:	6a 2f       	mov	r22, r26
    3338:	11 24       	eor	r1, r1
    333a:	9f 57       	subi	r25, 0x7F	; 127
    333c:	50 40       	sbci	r21, 0x00	; 0
    333e:	9a f0       	brmi	.+38     	; 0x3366 <__mulsf3_pse+0x88>
    3340:	f1 f0       	breq	.+60     	; 0x337e <__mulsf3_pse+0xa0>
    3342:	88 23       	and	r24, r24
    3344:	4a f0       	brmi	.+18     	; 0x3358 <__mulsf3_pse+0x7a>
    3346:	ee 0f       	add	r30, r30
    3348:	ff 1f       	adc	r31, r31
    334a:	bb 1f       	adc	r27, r27
    334c:	66 1f       	adc	r22, r22
    334e:	77 1f       	adc	r23, r23
    3350:	88 1f       	adc	r24, r24
    3352:	91 50       	subi	r25, 0x01	; 1
    3354:	50 40       	sbci	r21, 0x00	; 0
    3356:	a9 f7       	brne	.-22     	; 0x3342 <__mulsf3_pse+0x64>
    3358:	9e 3f       	cpi	r25, 0xFE	; 254
    335a:	51 05       	cpc	r21, r1
    335c:	80 f0       	brcs	.+32     	; 0x337e <__mulsf3_pse+0xa0>
    335e:	0c 94 cf 17 	jmp	0x2f9e	; 0x2f9e <__fp_inf>
    3362:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__fp_szero>
    3366:	5f 3f       	cpi	r21, 0xFF	; 255
    3368:	e4 f3       	brlt	.-8      	; 0x3362 <__mulsf3_pse+0x84>
    336a:	98 3e       	cpi	r25, 0xE8	; 232
    336c:	d4 f3       	brlt	.-12     	; 0x3362 <__mulsf3_pse+0x84>
    336e:	86 95       	lsr	r24
    3370:	77 95       	ror	r23
    3372:	67 95       	ror	r22
    3374:	b7 95       	ror	r27
    3376:	f7 95       	ror	r31
    3378:	e7 95       	ror	r30
    337a:	9f 5f       	subi	r25, 0xFF	; 255
    337c:	c1 f7       	brne	.-16     	; 0x336e <__mulsf3_pse+0x90>
    337e:	fe 2b       	or	r31, r30
    3380:	88 0f       	add	r24, r24
    3382:	91 1d       	adc	r25, r1
    3384:	96 95       	lsr	r25
    3386:	87 95       	ror	r24
    3388:	97 f9       	bld	r25, 7
    338a:	08 95       	ret

0000338c <pow>:
    338c:	fa 01       	movw	r30, r20
    338e:	ee 0f       	add	r30, r30
    3390:	ff 1f       	adc	r31, r31
    3392:	30 96       	adiw	r30, 0x00	; 0
    3394:	21 05       	cpc	r18, r1
    3396:	31 05       	cpc	r19, r1
    3398:	a1 f1       	breq	.+104    	; 0x3402 <pow+0x76>
    339a:	61 15       	cp	r22, r1
    339c:	71 05       	cpc	r23, r1
    339e:	61 f4       	brne	.+24     	; 0x33b8 <pow+0x2c>
    33a0:	80 38       	cpi	r24, 0x80	; 128
    33a2:	bf e3       	ldi	r27, 0x3F	; 63
    33a4:	9b 07       	cpc	r25, r27
    33a6:	49 f1       	breq	.+82     	; 0x33fa <pow+0x6e>
    33a8:	68 94       	set
    33aa:	90 38       	cpi	r25, 0x80	; 128
    33ac:	81 05       	cpc	r24, r1
    33ae:	61 f0       	breq	.+24     	; 0x33c8 <pow+0x3c>
    33b0:	80 38       	cpi	r24, 0x80	; 128
    33b2:	bf ef       	ldi	r27, 0xFF	; 255
    33b4:	9b 07       	cpc	r25, r27
    33b6:	41 f0       	breq	.+16     	; 0x33c8 <pow+0x3c>
    33b8:	99 23       	and	r25, r25
    33ba:	4a f5       	brpl	.+82     	; 0x340e <pow+0x82>
    33bc:	ff 3f       	cpi	r31, 0xFF	; 255
    33be:	e1 05       	cpc	r30, r1
    33c0:	31 05       	cpc	r19, r1
    33c2:	21 05       	cpc	r18, r1
    33c4:	19 f1       	breq	.+70     	; 0x340c <pow+0x80>
    33c6:	e8 94       	clt
    33c8:	08 94       	sec
    33ca:	e7 95       	ror	r30
    33cc:	d9 01       	movw	r26, r18
    33ce:	aa 23       	and	r26, r26
    33d0:	29 f4       	brne	.+10     	; 0x33dc <pow+0x50>
    33d2:	ab 2f       	mov	r26, r27
    33d4:	be 2f       	mov	r27, r30
    33d6:	f8 5f       	subi	r31, 0xF8	; 248
    33d8:	d0 f3       	brcs	.-12     	; 0x33ce <pow+0x42>
    33da:	10 c0       	rjmp	.+32     	; 0x33fc <pow+0x70>
    33dc:	ff 5f       	subi	r31, 0xFF	; 255
    33de:	70 f4       	brcc	.+28     	; 0x33fc <pow+0x70>
    33e0:	a6 95       	lsr	r26
    33e2:	e0 f7       	brcc	.-8      	; 0x33dc <pow+0x50>
    33e4:	f7 39       	cpi	r31, 0x97	; 151
    33e6:	50 f0       	brcs	.+20     	; 0x33fc <pow+0x70>
    33e8:	19 f0       	breq	.+6      	; 0x33f0 <pow+0x64>
    33ea:	ff 3a       	cpi	r31, 0xAF	; 175
    33ec:	38 f4       	brcc	.+14     	; 0x33fc <pow+0x70>
    33ee:	9f 77       	andi	r25, 0x7F	; 127
    33f0:	9f 93       	push	r25
    33f2:	0d d0       	rcall	.+26     	; 0x340e <pow+0x82>
    33f4:	0f 90       	pop	r0
    33f6:	07 fc       	sbrc	r0, 7
    33f8:	90 58       	subi	r25, 0x80	; 128
    33fa:	08 95       	ret
    33fc:	46 f0       	brts	.+16     	; 0x340e <pow+0x82>
    33fe:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>
    3402:	60 e0       	ldi	r22, 0x00	; 0
    3404:	70 e0       	ldi	r23, 0x00	; 0
    3406:	80 e8       	ldi	r24, 0x80	; 128
    3408:	9f e3       	ldi	r25, 0x3F	; 63
    340a:	08 95       	ret
    340c:	4f e7       	ldi	r20, 0x7F	; 127
    340e:	9f 77       	andi	r25, 0x7F	; 127
    3410:	5f 93       	push	r21
    3412:	4f 93       	push	r20
    3414:	3f 93       	push	r19
    3416:	2f 93       	push	r18
    3418:	0e 94 dd 18 	call	0x31ba	; 0x31ba <log>
    341c:	2f 91       	pop	r18
    341e:	3f 91       	pop	r19
    3420:	4f 91       	pop	r20
    3422:	5f 91       	pop	r21
    3424:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    3428:	0c 94 3c 17 	jmp	0x2e78	; 0x2e78 <exp>

0000342c <sin>:
    342c:	9f 93       	push	r25
    342e:	0e 94 0f 18 	call	0x301e	; 0x301e <__fp_rempio2>
    3432:	0f 90       	pop	r0
    3434:	07 fc       	sbrc	r0, 7
    3436:	ee 5f       	subi	r30, 0xFE	; 254
    3438:	0c 94 49 18 	jmp	0x3092	; 0x3092 <__fp_sinus>
    343c:	19 f4       	brne	.+6      	; 0x3444 <sin+0x18>
    343e:	16 f4       	brtc	.+4      	; 0x3444 <sin+0x18>
    3440:	0c 94 d5 17 	jmp	0x2faa	; 0x2faa <__fp_nan>
    3444:	0c 94 89 1a 	jmp	0x3512	; 0x3512 <__fp_mpack>

00003448 <sqrt>:
    3448:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_splitA>
    344c:	b8 f3       	brcs	.-18     	; 0x343c <sin+0x10>
    344e:	99 23       	and	r25, r25
    3450:	c9 f3       	breq	.-14     	; 0x3444 <sin+0x18>
    3452:	b6 f3       	brts	.-20     	; 0x3440 <sin+0x14>
    3454:	9f 57       	subi	r25, 0x7F	; 127
    3456:	55 0b       	sbc	r21, r21
    3458:	87 ff       	sbrs	r24, 7
    345a:	0e 94 97 1a 	call	0x352e	; 0x352e <__fp_norm2>
    345e:	00 24       	eor	r0, r0
    3460:	a0 e6       	ldi	r26, 0x60	; 96
    3462:	40 ea       	ldi	r20, 0xA0	; 160
    3464:	90 01       	movw	r18, r0
    3466:	80 58       	subi	r24, 0x80	; 128
    3468:	56 95       	lsr	r21
    346a:	97 95       	ror	r25
    346c:	28 f4       	brcc	.+10     	; 0x3478 <sqrt+0x30>
    346e:	80 5c       	subi	r24, 0xC0	; 192
    3470:	66 0f       	add	r22, r22
    3472:	77 1f       	adc	r23, r23
    3474:	88 1f       	adc	r24, r24
    3476:	20 f0       	brcs	.+8      	; 0x3480 <sqrt+0x38>
    3478:	26 17       	cp	r18, r22
    347a:	37 07       	cpc	r19, r23
    347c:	48 07       	cpc	r20, r24
    347e:	30 f4       	brcc	.+12     	; 0x348c <sqrt+0x44>
    3480:	62 1b       	sub	r22, r18
    3482:	73 0b       	sbc	r23, r19
    3484:	84 0b       	sbc	r24, r20
    3486:	20 29       	or	r18, r0
    3488:	31 29       	or	r19, r1
    348a:	4a 2b       	or	r20, r26
    348c:	a6 95       	lsr	r26
    348e:	17 94       	ror	r1
    3490:	07 94       	ror	r0
    3492:	20 25       	eor	r18, r0
    3494:	31 25       	eor	r19, r1
    3496:	4a 27       	eor	r20, r26
    3498:	58 f7       	brcc	.-42     	; 0x3470 <sqrt+0x28>
    349a:	66 0f       	add	r22, r22
    349c:	77 1f       	adc	r23, r23
    349e:	88 1f       	adc	r24, r24
    34a0:	20 f0       	brcs	.+8      	; 0x34aa <sqrt+0x62>
    34a2:	26 17       	cp	r18, r22
    34a4:	37 07       	cpc	r19, r23
    34a6:	48 07       	cpc	r20, r24
    34a8:	30 f4       	brcc	.+12     	; 0x34b6 <sqrt+0x6e>
    34aa:	62 0b       	sbc	r22, r18
    34ac:	73 0b       	sbc	r23, r19
    34ae:	84 0b       	sbc	r24, r20
    34b0:	20 0d       	add	r18, r0
    34b2:	31 1d       	adc	r19, r1
    34b4:	41 1d       	adc	r20, r1
    34b6:	a0 95       	com	r26
    34b8:	81 f7       	brne	.-32     	; 0x349a <sqrt+0x52>
    34ba:	b9 01       	movw	r22, r18
    34bc:	84 2f       	mov	r24, r20
    34be:	91 58       	subi	r25, 0x81	; 129
    34c0:	88 0f       	add	r24, r24
    34c2:	96 95       	lsr	r25
    34c4:	87 95       	ror	r24
    34c6:	08 95       	ret

000034c8 <tan>:
    34c8:	df 93       	push	r29
    34ca:	d9 2f       	mov	r29, r25
    34cc:	0e 94 0f 18 	call	0x301e	; 0x301e <__fp_rempio2>
    34d0:	e6 95       	lsr	r30
    34d2:	d7 95       	ror	r29
    34d4:	2a ed       	ldi	r18, 0xDA	; 218
    34d6:	3f e0       	ldi	r19, 0x0F	; 15
    34d8:	49 e4       	ldi	r20, 0x49	; 73
    34da:	5f e3       	ldi	r21, 0x3F	; 63
    34dc:	b3 3a       	cpi	r27, 0xA3	; 163
    34de:	62 07       	cpc	r22, r18
    34e0:	73 07       	cpc	r23, r19
    34e2:	84 07       	cpc	r24, r20
    34e4:	95 07       	cpc	r25, r21
    34e6:	d7 95       	ror	r29
    34e8:	3a f0       	brmi	.+14     	; 0x34f8 <tan+0x30>
    34ea:	a2 ea       	ldi	r26, 0xA2	; 162
    34ec:	49 ec       	ldi	r20, 0xC9	; 201
    34ee:	90 68       	ori	r25, 0x80	; 128
    34f0:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <__addsf3x>
    34f4:	0e 94 38 18 	call	0x3070	; 0x3070 <__fp_round>
    34f8:	ea e0       	ldi	r30, 0x0A	; 10
    34fa:	f2 e0       	ldi	r31, 0x02	; 2
    34fc:	0e 94 9e 1a 	call	0x353c	; 0x353c <__fp_powsodd>
    3500:	dd 0f       	add	r29, r29
    3502:	13 f0       	brvs	.+4      	; 0x3508 <tan+0x40>
    3504:	0e 94 8b 18 	call	0x3116	; 0x3116 <inverse>
    3508:	dd 0f       	add	r29, r29
    350a:	0b f4       	brvc	.+2      	; 0x350e <tan+0x46>
    350c:	90 58       	subi	r25, 0x80	; 128
    350e:	df 91       	pop	r29
    3510:	08 95       	ret

00003512 <__fp_mpack>:
    3512:	9f 3f       	cpi	r25, 0xFF	; 255
    3514:	31 f0       	breq	.+12     	; 0x3522 <__fp_mpack_finite+0xc>

00003516 <__fp_mpack_finite>:
    3516:	91 50       	subi	r25, 0x01	; 1
    3518:	20 f4       	brcc	.+8      	; 0x3522 <__fp_mpack_finite+0xc>
    351a:	87 95       	ror	r24
    351c:	77 95       	ror	r23
    351e:	67 95       	ror	r22
    3520:	b7 95       	ror	r27
    3522:	88 0f       	add	r24, r24
    3524:	91 1d       	adc	r25, r1
    3526:	96 95       	lsr	r25
    3528:	87 95       	ror	r24
    352a:	97 f9       	bld	r25, 7
    352c:	08 95       	ret

0000352e <__fp_norm2>:
    352e:	91 50       	subi	r25, 0x01	; 1
    3530:	50 40       	sbci	r21, 0x00	; 0
    3532:	66 0f       	add	r22, r22
    3534:	77 1f       	adc	r23, r23
    3536:	88 1f       	adc	r24, r24
    3538:	d2 f7       	brpl	.-12     	; 0x352e <__fp_norm2>
    353a:	08 95       	ret

0000353c <__fp_powsodd>:
    353c:	9f 93       	push	r25
    353e:	8f 93       	push	r24
    3540:	7f 93       	push	r23
    3542:	6f 93       	push	r22
    3544:	ff 93       	push	r31
    3546:	ef 93       	push	r30
    3548:	9b 01       	movw	r18, r22
    354a:	ac 01       	movw	r20, r24
    354c:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__mulsf3>
    3550:	ef 91       	pop	r30
    3552:	ff 91       	pop	r31
    3554:	0e 94 d8 17 	call	0x2fb0	; 0x2fb0 <__fp_powser>
    3558:	2f 91       	pop	r18
    355a:	3f 91       	pop	r19
    355c:	4f 91       	pop	r20
    355e:	5f 91       	pop	r21
    3560:	0c 94 59 19 	jmp	0x32b2	; 0x32b2 <__mulsf3>

00003564 <__tablejump2__>:
    3564:	ee 0f       	add	r30, r30
    3566:	ff 1f       	adc	r31, r31
    3568:	05 90       	lpm	r0, Z+
    356a:	f4 91       	lpm	r31, Z
    356c:	e0 2d       	mov	r30, r0
    356e:	09 94       	ijmp

00003570 <dtostrf>:
    3570:	ef 92       	push	r14
    3572:	0f 93       	push	r16
    3574:	1f 93       	push	r17
    3576:	cf 93       	push	r28
    3578:	df 93       	push	r29
    357a:	e8 01       	movw	r28, r16
    357c:	47 fd       	sbrc	r20, 7
    357e:	02 c0       	rjmp	.+4      	; 0x3584 <dtostrf+0x14>
    3580:	34 e0       	ldi	r19, 0x04	; 4
    3582:	01 c0       	rjmp	.+2      	; 0x3586 <dtostrf+0x16>
    3584:	34 e1       	ldi	r19, 0x14	; 20
    3586:	04 2e       	mov	r0, r20
    3588:	00 0c       	add	r0, r0
    358a:	55 0b       	sbc	r21, r21
    358c:	57 ff       	sbrs	r21, 7
    358e:	03 c0       	rjmp	.+6      	; 0x3596 <dtostrf+0x26>
    3590:	51 95       	neg	r21
    3592:	41 95       	neg	r20
    3594:	51 09       	sbc	r21, r1
    3596:	e3 2e       	mov	r14, r19
    3598:	02 2f       	mov	r16, r18
    359a:	24 2f       	mov	r18, r20
    359c:	ae 01       	movw	r20, r28
    359e:	0e 94 e2 1c 	call	0x39c4	; 0x39c4 <dtoa_prf>
    35a2:	ce 01       	movw	r24, r28
    35a4:	df 91       	pop	r29
    35a6:	cf 91       	pop	r28
    35a8:	1f 91       	pop	r17
    35aa:	0f 91       	pop	r16
    35ac:	ef 90       	pop	r14
    35ae:	08 95       	ret

000035b0 <strcpy>:
    35b0:	fb 01       	movw	r30, r22
    35b2:	dc 01       	movw	r26, r24
    35b4:	01 90       	ld	r0, Z+
    35b6:	0d 92       	st	X+, r0
    35b8:	00 20       	and	r0, r0
    35ba:	e1 f7       	brne	.-8      	; 0x35b4 <strcpy+0x4>
    35bc:	08 95       	ret

000035be <sprintf>:
    35be:	ae e0       	ldi	r26, 0x0E	; 14
    35c0:	b0 e0       	ldi	r27, 0x00	; 0
    35c2:	e5 ee       	ldi	r30, 0xE5	; 229
    35c4:	fa e1       	ldi	r31, 0x1A	; 26
    35c6:	0c 94 d2 1f 	jmp	0x3fa4	; 0x3fa4 <__prologue_saves__+0x1c>
    35ca:	0d 89       	ldd	r16, Y+21	; 0x15
    35cc:	1e 89       	ldd	r17, Y+22	; 0x16
    35ce:	86 e0       	ldi	r24, 0x06	; 6
    35d0:	8c 83       	std	Y+4, r24	; 0x04
    35d2:	1a 83       	std	Y+2, r17	; 0x02
    35d4:	09 83       	std	Y+1, r16	; 0x01
    35d6:	8f ef       	ldi	r24, 0xFF	; 255
    35d8:	9f e7       	ldi	r25, 0x7F	; 127
    35da:	9e 83       	std	Y+6, r25	; 0x06
    35dc:	8d 83       	std	Y+5, r24	; 0x05
    35de:	ae 01       	movw	r20, r28
    35e0:	47 5e       	subi	r20, 0xE7	; 231
    35e2:	5f 4f       	sbci	r21, 0xFF	; 255
    35e4:	6f 89       	ldd	r22, Y+23	; 0x17
    35e6:	78 8d       	ldd	r23, Y+24	; 0x18
    35e8:	ce 01       	movw	r24, r28
    35ea:	01 96       	adiw	r24, 0x01	; 1
    35ec:	0e 94 01 1b 	call	0x3602	; 0x3602 <vfprintf>
    35f0:	ef 81       	ldd	r30, Y+7	; 0x07
    35f2:	f8 85       	ldd	r31, Y+8	; 0x08
    35f4:	e0 0f       	add	r30, r16
    35f6:	f1 1f       	adc	r31, r17
    35f8:	10 82       	st	Z, r1
    35fa:	2e 96       	adiw	r28, 0x0e	; 14
    35fc:	e4 e0       	ldi	r30, 0x04	; 4
    35fe:	0c 94 ee 1f 	jmp	0x3fdc	; 0x3fdc <__epilogue_restores__+0x1c>

00003602 <vfprintf>:
    3602:	ab e0       	ldi	r26, 0x0B	; 11
    3604:	b0 e0       	ldi	r27, 0x00	; 0
    3606:	e7 e0       	ldi	r30, 0x07	; 7
    3608:	fb e1       	ldi	r31, 0x1B	; 27
    360a:	0c 94 c4 1f 	jmp	0x3f88	; 0x3f88 <__prologue_saves__>
    360e:	6c 01       	movw	r12, r24
    3610:	7b 01       	movw	r14, r22
    3612:	8a 01       	movw	r16, r20
    3614:	fc 01       	movw	r30, r24
    3616:	17 82       	std	Z+7, r1	; 0x07
    3618:	16 82       	std	Z+6, r1	; 0x06
    361a:	83 81       	ldd	r24, Z+3	; 0x03
    361c:	81 ff       	sbrs	r24, 1
    361e:	cc c1       	rjmp	.+920    	; 0x39b8 <vfprintf+0x3b6>
    3620:	ce 01       	movw	r24, r28
    3622:	01 96       	adiw	r24, 0x01	; 1
    3624:	3c 01       	movw	r6, r24
    3626:	f6 01       	movw	r30, r12
    3628:	93 81       	ldd	r25, Z+3	; 0x03
    362a:	f7 01       	movw	r30, r14
    362c:	93 fd       	sbrc	r25, 3
    362e:	85 91       	lpm	r24, Z+
    3630:	93 ff       	sbrs	r25, 3
    3632:	81 91       	ld	r24, Z+
    3634:	7f 01       	movw	r14, r30
    3636:	88 23       	and	r24, r24
    3638:	09 f4       	brne	.+2      	; 0x363c <vfprintf+0x3a>
    363a:	ba c1       	rjmp	.+884    	; 0x39b0 <vfprintf+0x3ae>
    363c:	85 32       	cpi	r24, 0x25	; 37
    363e:	39 f4       	brne	.+14     	; 0x364e <vfprintf+0x4c>
    3640:	93 fd       	sbrc	r25, 3
    3642:	85 91       	lpm	r24, Z+
    3644:	93 ff       	sbrs	r25, 3
    3646:	81 91       	ld	r24, Z+
    3648:	7f 01       	movw	r14, r30
    364a:	85 32       	cpi	r24, 0x25	; 37
    364c:	29 f4       	brne	.+10     	; 0x3658 <vfprintf+0x56>
    364e:	b6 01       	movw	r22, r12
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3656:	e7 cf       	rjmp	.-50     	; 0x3626 <vfprintf+0x24>
    3658:	91 2c       	mov	r9, r1
    365a:	21 2c       	mov	r2, r1
    365c:	31 2c       	mov	r3, r1
    365e:	ff e1       	ldi	r31, 0x1F	; 31
    3660:	f3 15       	cp	r31, r3
    3662:	d8 f0       	brcs	.+54     	; 0x369a <vfprintf+0x98>
    3664:	8b 32       	cpi	r24, 0x2B	; 43
    3666:	79 f0       	breq	.+30     	; 0x3686 <vfprintf+0x84>
    3668:	38 f4       	brcc	.+14     	; 0x3678 <vfprintf+0x76>
    366a:	80 32       	cpi	r24, 0x20	; 32
    366c:	79 f0       	breq	.+30     	; 0x368c <vfprintf+0x8a>
    366e:	83 32       	cpi	r24, 0x23	; 35
    3670:	a1 f4       	brne	.+40     	; 0x369a <vfprintf+0x98>
    3672:	23 2d       	mov	r18, r3
    3674:	20 61       	ori	r18, 0x10	; 16
    3676:	1d c0       	rjmp	.+58     	; 0x36b2 <vfprintf+0xb0>
    3678:	8d 32       	cpi	r24, 0x2D	; 45
    367a:	61 f0       	breq	.+24     	; 0x3694 <vfprintf+0x92>
    367c:	80 33       	cpi	r24, 0x30	; 48
    367e:	69 f4       	brne	.+26     	; 0x369a <vfprintf+0x98>
    3680:	23 2d       	mov	r18, r3
    3682:	21 60       	ori	r18, 0x01	; 1
    3684:	16 c0       	rjmp	.+44     	; 0x36b2 <vfprintf+0xb0>
    3686:	83 2d       	mov	r24, r3
    3688:	82 60       	ori	r24, 0x02	; 2
    368a:	38 2e       	mov	r3, r24
    368c:	e3 2d       	mov	r30, r3
    368e:	e4 60       	ori	r30, 0x04	; 4
    3690:	3e 2e       	mov	r3, r30
    3692:	2a c0       	rjmp	.+84     	; 0x36e8 <vfprintf+0xe6>
    3694:	f3 2d       	mov	r31, r3
    3696:	f8 60       	ori	r31, 0x08	; 8
    3698:	1d c0       	rjmp	.+58     	; 0x36d4 <vfprintf+0xd2>
    369a:	37 fc       	sbrc	r3, 7
    369c:	2d c0       	rjmp	.+90     	; 0x36f8 <vfprintf+0xf6>
    369e:	20 ed       	ldi	r18, 0xD0	; 208
    36a0:	28 0f       	add	r18, r24
    36a2:	2a 30       	cpi	r18, 0x0A	; 10
    36a4:	40 f0       	brcs	.+16     	; 0x36b6 <vfprintf+0xb4>
    36a6:	8e 32       	cpi	r24, 0x2E	; 46
    36a8:	b9 f4       	brne	.+46     	; 0x36d8 <vfprintf+0xd6>
    36aa:	36 fc       	sbrc	r3, 6
    36ac:	81 c1       	rjmp	.+770    	; 0x39b0 <vfprintf+0x3ae>
    36ae:	23 2d       	mov	r18, r3
    36b0:	20 64       	ori	r18, 0x40	; 64
    36b2:	32 2e       	mov	r3, r18
    36b4:	19 c0       	rjmp	.+50     	; 0x36e8 <vfprintf+0xe6>
    36b6:	36 fe       	sbrs	r3, 6
    36b8:	06 c0       	rjmp	.+12     	; 0x36c6 <vfprintf+0xc4>
    36ba:	8a e0       	ldi	r24, 0x0A	; 10
    36bc:	98 9e       	mul	r9, r24
    36be:	20 0d       	add	r18, r0
    36c0:	11 24       	eor	r1, r1
    36c2:	92 2e       	mov	r9, r18
    36c4:	11 c0       	rjmp	.+34     	; 0x36e8 <vfprintf+0xe6>
    36c6:	ea e0       	ldi	r30, 0x0A	; 10
    36c8:	2e 9e       	mul	r2, r30
    36ca:	20 0d       	add	r18, r0
    36cc:	11 24       	eor	r1, r1
    36ce:	22 2e       	mov	r2, r18
    36d0:	f3 2d       	mov	r31, r3
    36d2:	f0 62       	ori	r31, 0x20	; 32
    36d4:	3f 2e       	mov	r3, r31
    36d6:	08 c0       	rjmp	.+16     	; 0x36e8 <vfprintf+0xe6>
    36d8:	8c 36       	cpi	r24, 0x6C	; 108
    36da:	21 f4       	brne	.+8      	; 0x36e4 <vfprintf+0xe2>
    36dc:	83 2d       	mov	r24, r3
    36de:	80 68       	ori	r24, 0x80	; 128
    36e0:	38 2e       	mov	r3, r24
    36e2:	02 c0       	rjmp	.+4      	; 0x36e8 <vfprintf+0xe6>
    36e4:	88 36       	cpi	r24, 0x68	; 104
    36e6:	41 f4       	brne	.+16     	; 0x36f8 <vfprintf+0xf6>
    36e8:	f7 01       	movw	r30, r14
    36ea:	93 fd       	sbrc	r25, 3
    36ec:	85 91       	lpm	r24, Z+
    36ee:	93 ff       	sbrs	r25, 3
    36f0:	81 91       	ld	r24, Z+
    36f2:	7f 01       	movw	r14, r30
    36f4:	81 11       	cpse	r24, r1
    36f6:	b3 cf       	rjmp	.-154    	; 0x365e <vfprintf+0x5c>
    36f8:	98 2f       	mov	r25, r24
    36fa:	9f 7d       	andi	r25, 0xDF	; 223
    36fc:	95 54       	subi	r25, 0x45	; 69
    36fe:	93 30       	cpi	r25, 0x03	; 3
    3700:	28 f4       	brcc	.+10     	; 0x370c <vfprintf+0x10a>
    3702:	0c 5f       	subi	r16, 0xFC	; 252
    3704:	1f 4f       	sbci	r17, 0xFF	; 255
    3706:	9f e3       	ldi	r25, 0x3F	; 63
    3708:	99 83       	std	Y+1, r25	; 0x01
    370a:	0d c0       	rjmp	.+26     	; 0x3726 <vfprintf+0x124>
    370c:	83 36       	cpi	r24, 0x63	; 99
    370e:	31 f0       	breq	.+12     	; 0x371c <vfprintf+0x11a>
    3710:	83 37       	cpi	r24, 0x73	; 115
    3712:	71 f0       	breq	.+28     	; 0x3730 <vfprintf+0x12e>
    3714:	83 35       	cpi	r24, 0x53	; 83
    3716:	09 f0       	breq	.+2      	; 0x371a <vfprintf+0x118>
    3718:	59 c0       	rjmp	.+178    	; 0x37cc <vfprintf+0x1ca>
    371a:	21 c0       	rjmp	.+66     	; 0x375e <vfprintf+0x15c>
    371c:	f8 01       	movw	r30, r16
    371e:	80 81       	ld	r24, Z
    3720:	89 83       	std	Y+1, r24	; 0x01
    3722:	0e 5f       	subi	r16, 0xFE	; 254
    3724:	1f 4f       	sbci	r17, 0xFF	; 255
    3726:	88 24       	eor	r8, r8
    3728:	83 94       	inc	r8
    372a:	91 2c       	mov	r9, r1
    372c:	53 01       	movw	r10, r6
    372e:	13 c0       	rjmp	.+38     	; 0x3756 <vfprintf+0x154>
    3730:	28 01       	movw	r4, r16
    3732:	f2 e0       	ldi	r31, 0x02	; 2
    3734:	4f 0e       	add	r4, r31
    3736:	51 1c       	adc	r5, r1
    3738:	f8 01       	movw	r30, r16
    373a:	a0 80       	ld	r10, Z
    373c:	b1 80       	ldd	r11, Z+1	; 0x01
    373e:	36 fe       	sbrs	r3, 6
    3740:	03 c0       	rjmp	.+6      	; 0x3748 <vfprintf+0x146>
    3742:	69 2d       	mov	r22, r9
    3744:	70 e0       	ldi	r23, 0x00	; 0
    3746:	02 c0       	rjmp	.+4      	; 0x374c <vfprintf+0x14a>
    3748:	6f ef       	ldi	r22, 0xFF	; 255
    374a:	7f ef       	ldi	r23, 0xFF	; 255
    374c:	c5 01       	movw	r24, r10
    374e:	0e 94 1f 1f 	call	0x3e3e	; 0x3e3e <strnlen>
    3752:	4c 01       	movw	r8, r24
    3754:	82 01       	movw	r16, r4
    3756:	f3 2d       	mov	r31, r3
    3758:	ff 77       	andi	r31, 0x7F	; 127
    375a:	3f 2e       	mov	r3, r31
    375c:	16 c0       	rjmp	.+44     	; 0x378a <vfprintf+0x188>
    375e:	28 01       	movw	r4, r16
    3760:	22 e0       	ldi	r18, 0x02	; 2
    3762:	42 0e       	add	r4, r18
    3764:	51 1c       	adc	r5, r1
    3766:	f8 01       	movw	r30, r16
    3768:	a0 80       	ld	r10, Z
    376a:	b1 80       	ldd	r11, Z+1	; 0x01
    376c:	36 fe       	sbrs	r3, 6
    376e:	03 c0       	rjmp	.+6      	; 0x3776 <vfprintf+0x174>
    3770:	69 2d       	mov	r22, r9
    3772:	70 e0       	ldi	r23, 0x00	; 0
    3774:	02 c0       	rjmp	.+4      	; 0x377a <vfprintf+0x178>
    3776:	6f ef       	ldi	r22, 0xFF	; 255
    3778:	7f ef       	ldi	r23, 0xFF	; 255
    377a:	c5 01       	movw	r24, r10
    377c:	0e 94 14 1f 	call	0x3e28	; 0x3e28 <strnlen_P>
    3780:	4c 01       	movw	r8, r24
    3782:	f3 2d       	mov	r31, r3
    3784:	f0 68       	ori	r31, 0x80	; 128
    3786:	3f 2e       	mov	r3, r31
    3788:	82 01       	movw	r16, r4
    378a:	33 fc       	sbrc	r3, 3
    378c:	1b c0       	rjmp	.+54     	; 0x37c4 <vfprintf+0x1c2>
    378e:	82 2d       	mov	r24, r2
    3790:	90 e0       	ldi	r25, 0x00	; 0
    3792:	88 16       	cp	r8, r24
    3794:	99 06       	cpc	r9, r25
    3796:	b0 f4       	brcc	.+44     	; 0x37c4 <vfprintf+0x1c2>
    3798:	b6 01       	movw	r22, r12
    379a:	80 e2       	ldi	r24, 0x20	; 32
    379c:	90 e0       	ldi	r25, 0x00	; 0
    379e:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    37a2:	2a 94       	dec	r2
    37a4:	f4 cf       	rjmp	.-24     	; 0x378e <vfprintf+0x18c>
    37a6:	f5 01       	movw	r30, r10
    37a8:	37 fc       	sbrc	r3, 7
    37aa:	85 91       	lpm	r24, Z+
    37ac:	37 fe       	sbrs	r3, 7
    37ae:	81 91       	ld	r24, Z+
    37b0:	5f 01       	movw	r10, r30
    37b2:	b6 01       	movw	r22, r12
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    37ba:	21 10       	cpse	r2, r1
    37bc:	2a 94       	dec	r2
    37be:	21 e0       	ldi	r18, 0x01	; 1
    37c0:	82 1a       	sub	r8, r18
    37c2:	91 08       	sbc	r9, r1
    37c4:	81 14       	cp	r8, r1
    37c6:	91 04       	cpc	r9, r1
    37c8:	71 f7       	brne	.-36     	; 0x37a6 <vfprintf+0x1a4>
    37ca:	e8 c0       	rjmp	.+464    	; 0x399c <vfprintf+0x39a>
    37cc:	84 36       	cpi	r24, 0x64	; 100
    37ce:	11 f0       	breq	.+4      	; 0x37d4 <vfprintf+0x1d2>
    37d0:	89 36       	cpi	r24, 0x69	; 105
    37d2:	41 f5       	brne	.+80     	; 0x3824 <vfprintf+0x222>
    37d4:	f8 01       	movw	r30, r16
    37d6:	37 fe       	sbrs	r3, 7
    37d8:	07 c0       	rjmp	.+14     	; 0x37e8 <vfprintf+0x1e6>
    37da:	60 81       	ld	r22, Z
    37dc:	71 81       	ldd	r23, Z+1	; 0x01
    37de:	82 81       	ldd	r24, Z+2	; 0x02
    37e0:	93 81       	ldd	r25, Z+3	; 0x03
    37e2:	0c 5f       	subi	r16, 0xFC	; 252
    37e4:	1f 4f       	sbci	r17, 0xFF	; 255
    37e6:	08 c0       	rjmp	.+16     	; 0x37f8 <vfprintf+0x1f6>
    37e8:	60 81       	ld	r22, Z
    37ea:	71 81       	ldd	r23, Z+1	; 0x01
    37ec:	07 2e       	mov	r0, r23
    37ee:	00 0c       	add	r0, r0
    37f0:	88 0b       	sbc	r24, r24
    37f2:	99 0b       	sbc	r25, r25
    37f4:	0e 5f       	subi	r16, 0xFE	; 254
    37f6:	1f 4f       	sbci	r17, 0xFF	; 255
    37f8:	f3 2d       	mov	r31, r3
    37fa:	ff 76       	andi	r31, 0x6F	; 111
    37fc:	3f 2e       	mov	r3, r31
    37fe:	97 ff       	sbrs	r25, 7
    3800:	09 c0       	rjmp	.+18     	; 0x3814 <vfprintf+0x212>
    3802:	90 95       	com	r25
    3804:	80 95       	com	r24
    3806:	70 95       	com	r23
    3808:	61 95       	neg	r22
    380a:	7f 4f       	sbci	r23, 0xFF	; 255
    380c:	8f 4f       	sbci	r24, 0xFF	; 255
    380e:	9f 4f       	sbci	r25, 0xFF	; 255
    3810:	f0 68       	ori	r31, 0x80	; 128
    3812:	3f 2e       	mov	r3, r31
    3814:	2a e0       	ldi	r18, 0x0A	; 10
    3816:	30 e0       	ldi	r19, 0x00	; 0
    3818:	a3 01       	movw	r20, r6
    381a:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <__ultoa_invert>
    381e:	88 2e       	mov	r8, r24
    3820:	86 18       	sub	r8, r6
    3822:	45 c0       	rjmp	.+138    	; 0x38ae <vfprintf+0x2ac>
    3824:	85 37       	cpi	r24, 0x75	; 117
    3826:	31 f4       	brne	.+12     	; 0x3834 <vfprintf+0x232>
    3828:	23 2d       	mov	r18, r3
    382a:	2f 7e       	andi	r18, 0xEF	; 239
    382c:	b2 2e       	mov	r11, r18
    382e:	2a e0       	ldi	r18, 0x0A	; 10
    3830:	30 e0       	ldi	r19, 0x00	; 0
    3832:	25 c0       	rjmp	.+74     	; 0x387e <vfprintf+0x27c>
    3834:	93 2d       	mov	r25, r3
    3836:	99 7f       	andi	r25, 0xF9	; 249
    3838:	b9 2e       	mov	r11, r25
    383a:	8f 36       	cpi	r24, 0x6F	; 111
    383c:	c1 f0       	breq	.+48     	; 0x386e <vfprintf+0x26c>
    383e:	18 f4       	brcc	.+6      	; 0x3846 <vfprintf+0x244>
    3840:	88 35       	cpi	r24, 0x58	; 88
    3842:	79 f0       	breq	.+30     	; 0x3862 <vfprintf+0x260>
    3844:	b5 c0       	rjmp	.+362    	; 0x39b0 <vfprintf+0x3ae>
    3846:	80 37       	cpi	r24, 0x70	; 112
    3848:	19 f0       	breq	.+6      	; 0x3850 <vfprintf+0x24e>
    384a:	88 37       	cpi	r24, 0x78	; 120
    384c:	21 f0       	breq	.+8      	; 0x3856 <vfprintf+0x254>
    384e:	b0 c0       	rjmp	.+352    	; 0x39b0 <vfprintf+0x3ae>
    3850:	e9 2f       	mov	r30, r25
    3852:	e0 61       	ori	r30, 0x10	; 16
    3854:	be 2e       	mov	r11, r30
    3856:	b4 fe       	sbrs	r11, 4
    3858:	0d c0       	rjmp	.+26     	; 0x3874 <vfprintf+0x272>
    385a:	fb 2d       	mov	r31, r11
    385c:	f4 60       	ori	r31, 0x04	; 4
    385e:	bf 2e       	mov	r11, r31
    3860:	09 c0       	rjmp	.+18     	; 0x3874 <vfprintf+0x272>
    3862:	34 fe       	sbrs	r3, 4
    3864:	0a c0       	rjmp	.+20     	; 0x387a <vfprintf+0x278>
    3866:	29 2f       	mov	r18, r25
    3868:	26 60       	ori	r18, 0x06	; 6
    386a:	b2 2e       	mov	r11, r18
    386c:	06 c0       	rjmp	.+12     	; 0x387a <vfprintf+0x278>
    386e:	28 e0       	ldi	r18, 0x08	; 8
    3870:	30 e0       	ldi	r19, 0x00	; 0
    3872:	05 c0       	rjmp	.+10     	; 0x387e <vfprintf+0x27c>
    3874:	20 e1       	ldi	r18, 0x10	; 16
    3876:	30 e0       	ldi	r19, 0x00	; 0
    3878:	02 c0       	rjmp	.+4      	; 0x387e <vfprintf+0x27c>
    387a:	20 e1       	ldi	r18, 0x10	; 16
    387c:	32 e0       	ldi	r19, 0x02	; 2
    387e:	f8 01       	movw	r30, r16
    3880:	b7 fe       	sbrs	r11, 7
    3882:	07 c0       	rjmp	.+14     	; 0x3892 <vfprintf+0x290>
    3884:	60 81       	ld	r22, Z
    3886:	71 81       	ldd	r23, Z+1	; 0x01
    3888:	82 81       	ldd	r24, Z+2	; 0x02
    388a:	93 81       	ldd	r25, Z+3	; 0x03
    388c:	0c 5f       	subi	r16, 0xFC	; 252
    388e:	1f 4f       	sbci	r17, 0xFF	; 255
    3890:	06 c0       	rjmp	.+12     	; 0x389e <vfprintf+0x29c>
    3892:	60 81       	ld	r22, Z
    3894:	71 81       	ldd	r23, Z+1	; 0x01
    3896:	80 e0       	ldi	r24, 0x00	; 0
    3898:	90 e0       	ldi	r25, 0x00	; 0
    389a:	0e 5f       	subi	r16, 0xFE	; 254
    389c:	1f 4f       	sbci	r17, 0xFF	; 255
    389e:	a3 01       	movw	r20, r6
    38a0:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <__ultoa_invert>
    38a4:	88 2e       	mov	r8, r24
    38a6:	86 18       	sub	r8, r6
    38a8:	fb 2d       	mov	r31, r11
    38aa:	ff 77       	andi	r31, 0x7F	; 127
    38ac:	3f 2e       	mov	r3, r31
    38ae:	36 fe       	sbrs	r3, 6
    38b0:	0d c0       	rjmp	.+26     	; 0x38cc <vfprintf+0x2ca>
    38b2:	23 2d       	mov	r18, r3
    38b4:	2e 7f       	andi	r18, 0xFE	; 254
    38b6:	a2 2e       	mov	r10, r18
    38b8:	89 14       	cp	r8, r9
    38ba:	58 f4       	brcc	.+22     	; 0x38d2 <vfprintf+0x2d0>
    38bc:	34 fe       	sbrs	r3, 4
    38be:	0b c0       	rjmp	.+22     	; 0x38d6 <vfprintf+0x2d4>
    38c0:	32 fc       	sbrc	r3, 2
    38c2:	09 c0       	rjmp	.+18     	; 0x38d6 <vfprintf+0x2d4>
    38c4:	83 2d       	mov	r24, r3
    38c6:	8e 7e       	andi	r24, 0xEE	; 238
    38c8:	a8 2e       	mov	r10, r24
    38ca:	05 c0       	rjmp	.+10     	; 0x38d6 <vfprintf+0x2d4>
    38cc:	b8 2c       	mov	r11, r8
    38ce:	a3 2c       	mov	r10, r3
    38d0:	03 c0       	rjmp	.+6      	; 0x38d8 <vfprintf+0x2d6>
    38d2:	b8 2c       	mov	r11, r8
    38d4:	01 c0       	rjmp	.+2      	; 0x38d8 <vfprintf+0x2d6>
    38d6:	b9 2c       	mov	r11, r9
    38d8:	a4 fe       	sbrs	r10, 4
    38da:	0f c0       	rjmp	.+30     	; 0x38fa <vfprintf+0x2f8>
    38dc:	fe 01       	movw	r30, r28
    38de:	e8 0d       	add	r30, r8
    38e0:	f1 1d       	adc	r31, r1
    38e2:	80 81       	ld	r24, Z
    38e4:	80 33       	cpi	r24, 0x30	; 48
    38e6:	21 f4       	brne	.+8      	; 0x38f0 <vfprintf+0x2ee>
    38e8:	9a 2d       	mov	r25, r10
    38ea:	99 7e       	andi	r25, 0xE9	; 233
    38ec:	a9 2e       	mov	r10, r25
    38ee:	09 c0       	rjmp	.+18     	; 0x3902 <vfprintf+0x300>
    38f0:	a2 fe       	sbrs	r10, 2
    38f2:	06 c0       	rjmp	.+12     	; 0x3900 <vfprintf+0x2fe>
    38f4:	b3 94       	inc	r11
    38f6:	b3 94       	inc	r11
    38f8:	04 c0       	rjmp	.+8      	; 0x3902 <vfprintf+0x300>
    38fa:	8a 2d       	mov	r24, r10
    38fc:	86 78       	andi	r24, 0x86	; 134
    38fe:	09 f0       	breq	.+2      	; 0x3902 <vfprintf+0x300>
    3900:	b3 94       	inc	r11
    3902:	a3 fc       	sbrc	r10, 3
    3904:	11 c0       	rjmp	.+34     	; 0x3928 <vfprintf+0x326>
    3906:	a0 fe       	sbrs	r10, 0
    3908:	06 c0       	rjmp	.+12     	; 0x3916 <vfprintf+0x314>
    390a:	b2 14       	cp	r11, r2
    390c:	88 f4       	brcc	.+34     	; 0x3930 <vfprintf+0x32e>
    390e:	28 0c       	add	r2, r8
    3910:	92 2c       	mov	r9, r2
    3912:	9b 18       	sub	r9, r11
    3914:	0e c0       	rjmp	.+28     	; 0x3932 <vfprintf+0x330>
    3916:	b2 14       	cp	r11, r2
    3918:	60 f4       	brcc	.+24     	; 0x3932 <vfprintf+0x330>
    391a:	b6 01       	movw	r22, r12
    391c:	80 e2       	ldi	r24, 0x20	; 32
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3924:	b3 94       	inc	r11
    3926:	f7 cf       	rjmp	.-18     	; 0x3916 <vfprintf+0x314>
    3928:	b2 14       	cp	r11, r2
    392a:	18 f4       	brcc	.+6      	; 0x3932 <vfprintf+0x330>
    392c:	2b 18       	sub	r2, r11
    392e:	02 c0       	rjmp	.+4      	; 0x3934 <vfprintf+0x332>
    3930:	98 2c       	mov	r9, r8
    3932:	21 2c       	mov	r2, r1
    3934:	a4 fe       	sbrs	r10, 4
    3936:	10 c0       	rjmp	.+32     	; 0x3958 <vfprintf+0x356>
    3938:	b6 01       	movw	r22, r12
    393a:	80 e3       	ldi	r24, 0x30	; 48
    393c:	90 e0       	ldi	r25, 0x00	; 0
    393e:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3942:	a2 fe       	sbrs	r10, 2
    3944:	17 c0       	rjmp	.+46     	; 0x3974 <vfprintf+0x372>
    3946:	a1 fc       	sbrc	r10, 1
    3948:	03 c0       	rjmp	.+6      	; 0x3950 <vfprintf+0x34e>
    394a:	88 e7       	ldi	r24, 0x78	; 120
    394c:	90 e0       	ldi	r25, 0x00	; 0
    394e:	02 c0       	rjmp	.+4      	; 0x3954 <vfprintf+0x352>
    3950:	88 e5       	ldi	r24, 0x58	; 88
    3952:	90 e0       	ldi	r25, 0x00	; 0
    3954:	b6 01       	movw	r22, r12
    3956:	0c c0       	rjmp	.+24     	; 0x3970 <vfprintf+0x36e>
    3958:	8a 2d       	mov	r24, r10
    395a:	86 78       	andi	r24, 0x86	; 134
    395c:	59 f0       	breq	.+22     	; 0x3974 <vfprintf+0x372>
    395e:	a1 fe       	sbrs	r10, 1
    3960:	02 c0       	rjmp	.+4      	; 0x3966 <vfprintf+0x364>
    3962:	8b e2       	ldi	r24, 0x2B	; 43
    3964:	01 c0       	rjmp	.+2      	; 0x3968 <vfprintf+0x366>
    3966:	80 e2       	ldi	r24, 0x20	; 32
    3968:	a7 fc       	sbrc	r10, 7
    396a:	8d e2       	ldi	r24, 0x2D	; 45
    396c:	b6 01       	movw	r22, r12
    396e:	90 e0       	ldi	r25, 0x00	; 0
    3970:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3974:	89 14       	cp	r8, r9
    3976:	38 f4       	brcc	.+14     	; 0x3986 <vfprintf+0x384>
    3978:	b6 01       	movw	r22, r12
    397a:	80 e3       	ldi	r24, 0x30	; 48
    397c:	90 e0       	ldi	r25, 0x00	; 0
    397e:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3982:	9a 94       	dec	r9
    3984:	f7 cf       	rjmp	.-18     	; 0x3974 <vfprintf+0x372>
    3986:	8a 94       	dec	r8
    3988:	f3 01       	movw	r30, r6
    398a:	e8 0d       	add	r30, r8
    398c:	f1 1d       	adc	r31, r1
    398e:	80 81       	ld	r24, Z
    3990:	b6 01       	movw	r22, r12
    3992:	90 e0       	ldi	r25, 0x00	; 0
    3994:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    3998:	81 10       	cpse	r8, r1
    399a:	f5 cf       	rjmp	.-22     	; 0x3986 <vfprintf+0x384>
    399c:	22 20       	and	r2, r2
    399e:	09 f4       	brne	.+2      	; 0x39a2 <vfprintf+0x3a0>
    39a0:	42 ce       	rjmp	.-892    	; 0x3626 <vfprintf+0x24>
    39a2:	b6 01       	movw	r22, r12
    39a4:	80 e2       	ldi	r24, 0x20	; 32
    39a6:	90 e0       	ldi	r25, 0x00	; 0
    39a8:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <fputc>
    39ac:	2a 94       	dec	r2
    39ae:	f6 cf       	rjmp	.-20     	; 0x399c <vfprintf+0x39a>
    39b0:	f6 01       	movw	r30, r12
    39b2:	86 81       	ldd	r24, Z+6	; 0x06
    39b4:	97 81       	ldd	r25, Z+7	; 0x07
    39b6:	02 c0       	rjmp	.+4      	; 0x39bc <vfprintf+0x3ba>
    39b8:	8f ef       	ldi	r24, 0xFF	; 255
    39ba:	9f ef       	ldi	r25, 0xFF	; 255
    39bc:	2b 96       	adiw	r28, 0x0b	; 11
    39be:	e2 e1       	ldi	r30, 0x12	; 18
    39c0:	0c 94 e0 1f 	jmp	0x3fc0	; 0x3fc0 <__epilogue_restores__>

000039c4 <dtoa_prf>:
    39c4:	a9 e0       	ldi	r26, 0x09	; 9
    39c6:	b0 e0       	ldi	r27, 0x00	; 0
    39c8:	e8 ee       	ldi	r30, 0xE8	; 232
    39ca:	fc e1       	ldi	r31, 0x1C	; 28
    39cc:	0c 94 ca 1f 	jmp	0x3f94	; 0x3f94 <__prologue_saves__+0xc>
    39d0:	6a 01       	movw	r12, r20
    39d2:	12 2f       	mov	r17, r18
    39d4:	b0 2e       	mov	r11, r16
    39d6:	2b e3       	ldi	r18, 0x3B	; 59
    39d8:	20 17       	cp	r18, r16
    39da:	20 f0       	brcs	.+8      	; 0x39e4 <dtoa_prf+0x20>
    39dc:	ff 24       	eor	r15, r15
    39de:	f3 94       	inc	r15
    39e0:	f0 0e       	add	r15, r16
    39e2:	02 c0       	rjmp	.+4      	; 0x39e8 <dtoa_prf+0x24>
    39e4:	2c e3       	ldi	r18, 0x3C	; 60
    39e6:	f2 2e       	mov	r15, r18
    39e8:	0f 2d       	mov	r16, r15
    39ea:	27 e0       	ldi	r18, 0x07	; 7
    39ec:	ae 01       	movw	r20, r28
    39ee:	4f 5f       	subi	r20, 0xFF	; 255
    39f0:	5f 4f       	sbci	r21, 0xFF	; 255
    39f2:	0e 94 3c 1e 	call	0x3c78	; 0x3c78 <__ftoa_engine>
    39f6:	bc 01       	movw	r22, r24
    39f8:	49 81       	ldd	r20, Y+1	; 0x01
    39fa:	84 2f       	mov	r24, r20
    39fc:	89 70       	andi	r24, 0x09	; 9
    39fe:	81 30       	cpi	r24, 0x01	; 1
    3a00:	31 f0       	breq	.+12     	; 0x3a0e <dtoa_prf+0x4a>
    3a02:	e1 fc       	sbrc	r14, 1
    3a04:	06 c0       	rjmp	.+12     	; 0x3a12 <dtoa_prf+0x4e>
    3a06:	e0 fe       	sbrs	r14, 0
    3a08:	06 c0       	rjmp	.+12     	; 0x3a16 <dtoa_prf+0x52>
    3a0a:	90 e2       	ldi	r25, 0x20	; 32
    3a0c:	05 c0       	rjmp	.+10     	; 0x3a18 <dtoa_prf+0x54>
    3a0e:	9d e2       	ldi	r25, 0x2D	; 45
    3a10:	03 c0       	rjmp	.+6      	; 0x3a18 <dtoa_prf+0x54>
    3a12:	9b e2       	ldi	r25, 0x2B	; 43
    3a14:	01 c0       	rjmp	.+2      	; 0x3a18 <dtoa_prf+0x54>
    3a16:	90 e0       	ldi	r25, 0x00	; 0
    3a18:	5e 2d       	mov	r21, r14
    3a1a:	50 71       	andi	r21, 0x10	; 16
    3a1c:	43 ff       	sbrs	r20, 3
    3a1e:	3c c0       	rjmp	.+120    	; 0x3a98 <dtoa_prf+0xd4>
    3a20:	91 11       	cpse	r25, r1
    3a22:	02 c0       	rjmp	.+4      	; 0x3a28 <dtoa_prf+0x64>
    3a24:	83 e0       	ldi	r24, 0x03	; 3
    3a26:	01 c0       	rjmp	.+2      	; 0x3a2a <dtoa_prf+0x66>
    3a28:	84 e0       	ldi	r24, 0x04	; 4
    3a2a:	81 17       	cp	r24, r17
    3a2c:	18 f4       	brcc	.+6      	; 0x3a34 <dtoa_prf+0x70>
    3a2e:	21 2f       	mov	r18, r17
    3a30:	28 1b       	sub	r18, r24
    3a32:	01 c0       	rjmp	.+2      	; 0x3a36 <dtoa_prf+0x72>
    3a34:	20 e0       	ldi	r18, 0x00	; 0
    3a36:	51 11       	cpse	r21, r1
    3a38:	0b c0       	rjmp	.+22     	; 0x3a50 <dtoa_prf+0x8c>
    3a3a:	f6 01       	movw	r30, r12
    3a3c:	82 2f       	mov	r24, r18
    3a3e:	30 e2       	ldi	r19, 0x20	; 32
    3a40:	88 23       	and	r24, r24
    3a42:	19 f0       	breq	.+6      	; 0x3a4a <dtoa_prf+0x86>
    3a44:	31 93       	st	Z+, r19
    3a46:	81 50       	subi	r24, 0x01	; 1
    3a48:	fb cf       	rjmp	.-10     	; 0x3a40 <dtoa_prf+0x7c>
    3a4a:	c2 0e       	add	r12, r18
    3a4c:	d1 1c       	adc	r13, r1
    3a4e:	20 e0       	ldi	r18, 0x00	; 0
    3a50:	99 23       	and	r25, r25
    3a52:	29 f0       	breq	.+10     	; 0x3a5e <dtoa_prf+0x9a>
    3a54:	d6 01       	movw	r26, r12
    3a56:	9c 93       	st	X, r25
    3a58:	f6 01       	movw	r30, r12
    3a5a:	31 96       	adiw	r30, 0x01	; 1
    3a5c:	6f 01       	movw	r12, r30
    3a5e:	c6 01       	movw	r24, r12
    3a60:	03 96       	adiw	r24, 0x03	; 3
    3a62:	e2 fe       	sbrs	r14, 2
    3a64:	0a c0       	rjmp	.+20     	; 0x3a7a <dtoa_prf+0xb6>
    3a66:	3e e4       	ldi	r19, 0x4E	; 78
    3a68:	d6 01       	movw	r26, r12
    3a6a:	3c 93       	st	X, r19
    3a6c:	41 e4       	ldi	r20, 0x41	; 65
    3a6e:	11 96       	adiw	r26, 0x01	; 1
    3a70:	4c 93       	st	X, r20
    3a72:	11 97       	sbiw	r26, 0x01	; 1
    3a74:	12 96       	adiw	r26, 0x02	; 2
    3a76:	3c 93       	st	X, r19
    3a78:	06 c0       	rjmp	.+12     	; 0x3a86 <dtoa_prf+0xc2>
    3a7a:	3e e6       	ldi	r19, 0x6E	; 110
    3a7c:	f6 01       	movw	r30, r12
    3a7e:	30 83       	st	Z, r19
    3a80:	41 e6       	ldi	r20, 0x61	; 97
    3a82:	41 83       	std	Z+1, r20	; 0x01
    3a84:	32 83       	std	Z+2, r19	; 0x02
    3a86:	fc 01       	movw	r30, r24
    3a88:	32 2f       	mov	r19, r18
    3a8a:	40 e2       	ldi	r20, 0x20	; 32
    3a8c:	33 23       	and	r19, r19
    3a8e:	09 f4       	brne	.+2      	; 0x3a92 <dtoa_prf+0xce>
    3a90:	42 c0       	rjmp	.+132    	; 0x3b16 <dtoa_prf+0x152>
    3a92:	41 93       	st	Z+, r20
    3a94:	31 50       	subi	r19, 0x01	; 1
    3a96:	fa cf       	rjmp	.-12     	; 0x3a8c <dtoa_prf+0xc8>
    3a98:	42 ff       	sbrs	r20, 2
    3a9a:	44 c0       	rjmp	.+136    	; 0x3b24 <dtoa_prf+0x160>
    3a9c:	91 11       	cpse	r25, r1
    3a9e:	02 c0       	rjmp	.+4      	; 0x3aa4 <dtoa_prf+0xe0>
    3aa0:	83 e0       	ldi	r24, 0x03	; 3
    3aa2:	01 c0       	rjmp	.+2      	; 0x3aa6 <dtoa_prf+0xe2>
    3aa4:	84 e0       	ldi	r24, 0x04	; 4
    3aa6:	81 17       	cp	r24, r17
    3aa8:	18 f4       	brcc	.+6      	; 0x3ab0 <dtoa_prf+0xec>
    3aaa:	21 2f       	mov	r18, r17
    3aac:	28 1b       	sub	r18, r24
    3aae:	01 c0       	rjmp	.+2      	; 0x3ab2 <dtoa_prf+0xee>
    3ab0:	20 e0       	ldi	r18, 0x00	; 0
    3ab2:	51 11       	cpse	r21, r1
    3ab4:	0b c0       	rjmp	.+22     	; 0x3acc <dtoa_prf+0x108>
    3ab6:	f6 01       	movw	r30, r12
    3ab8:	82 2f       	mov	r24, r18
    3aba:	30 e2       	ldi	r19, 0x20	; 32
    3abc:	88 23       	and	r24, r24
    3abe:	19 f0       	breq	.+6      	; 0x3ac6 <dtoa_prf+0x102>
    3ac0:	31 93       	st	Z+, r19
    3ac2:	81 50       	subi	r24, 0x01	; 1
    3ac4:	fb cf       	rjmp	.-10     	; 0x3abc <dtoa_prf+0xf8>
    3ac6:	c2 0e       	add	r12, r18
    3ac8:	d1 1c       	adc	r13, r1
    3aca:	20 e0       	ldi	r18, 0x00	; 0
    3acc:	99 23       	and	r25, r25
    3ace:	29 f0       	breq	.+10     	; 0x3ada <dtoa_prf+0x116>
    3ad0:	d6 01       	movw	r26, r12
    3ad2:	9c 93       	st	X, r25
    3ad4:	f6 01       	movw	r30, r12
    3ad6:	31 96       	adiw	r30, 0x01	; 1
    3ad8:	6f 01       	movw	r12, r30
    3ada:	c6 01       	movw	r24, r12
    3adc:	03 96       	adiw	r24, 0x03	; 3
    3ade:	e2 fe       	sbrs	r14, 2
    3ae0:	0b c0       	rjmp	.+22     	; 0x3af8 <dtoa_prf+0x134>
    3ae2:	39 e4       	ldi	r19, 0x49	; 73
    3ae4:	d6 01       	movw	r26, r12
    3ae6:	3c 93       	st	X, r19
    3ae8:	3e e4       	ldi	r19, 0x4E	; 78
    3aea:	11 96       	adiw	r26, 0x01	; 1
    3aec:	3c 93       	st	X, r19
    3aee:	11 97       	sbiw	r26, 0x01	; 1
    3af0:	36 e4       	ldi	r19, 0x46	; 70
    3af2:	12 96       	adiw	r26, 0x02	; 2
    3af4:	3c 93       	st	X, r19
    3af6:	07 c0       	rjmp	.+14     	; 0x3b06 <dtoa_prf+0x142>
    3af8:	39 e6       	ldi	r19, 0x69	; 105
    3afa:	f6 01       	movw	r30, r12
    3afc:	30 83       	st	Z, r19
    3afe:	3e e6       	ldi	r19, 0x6E	; 110
    3b00:	31 83       	std	Z+1, r19	; 0x01
    3b02:	36 e6       	ldi	r19, 0x66	; 102
    3b04:	32 83       	std	Z+2, r19	; 0x02
    3b06:	fc 01       	movw	r30, r24
    3b08:	32 2f       	mov	r19, r18
    3b0a:	40 e2       	ldi	r20, 0x20	; 32
    3b0c:	33 23       	and	r19, r19
    3b0e:	19 f0       	breq	.+6      	; 0x3b16 <dtoa_prf+0x152>
    3b10:	41 93       	st	Z+, r20
    3b12:	31 50       	subi	r19, 0x01	; 1
    3b14:	fb cf       	rjmp	.-10     	; 0x3b0c <dtoa_prf+0x148>
    3b16:	fc 01       	movw	r30, r24
    3b18:	e2 0f       	add	r30, r18
    3b1a:	f1 1d       	adc	r31, r1
    3b1c:	10 82       	st	Z, r1
    3b1e:	8e ef       	ldi	r24, 0xFE	; 254
    3b20:	9f ef       	ldi	r25, 0xFF	; 255
    3b22:	a6 c0       	rjmp	.+332    	; 0x3c70 <dtoa_prf+0x2ac>
    3b24:	21 e0       	ldi	r18, 0x01	; 1
    3b26:	30 e0       	ldi	r19, 0x00	; 0
    3b28:	91 11       	cpse	r25, r1
    3b2a:	02 c0       	rjmp	.+4      	; 0x3b30 <dtoa_prf+0x16c>
    3b2c:	20 e0       	ldi	r18, 0x00	; 0
    3b2e:	30 e0       	ldi	r19, 0x00	; 0
    3b30:	16 16       	cp	r1, r22
    3b32:	17 06       	cpc	r1, r23
    3b34:	1c f4       	brge	.+6      	; 0x3b3c <dtoa_prf+0x178>
    3b36:	fb 01       	movw	r30, r22
    3b38:	31 96       	adiw	r30, 0x01	; 1
    3b3a:	02 c0       	rjmp	.+4      	; 0x3b40 <dtoa_prf+0x17c>
    3b3c:	e1 e0       	ldi	r30, 0x01	; 1
    3b3e:	f0 e0       	ldi	r31, 0x00	; 0
    3b40:	2e 0f       	add	r18, r30
    3b42:	3f 1f       	adc	r19, r31
    3b44:	bb 20       	and	r11, r11
    3b46:	21 f0       	breq	.+8      	; 0x3b50 <dtoa_prf+0x18c>
    3b48:	eb 2d       	mov	r30, r11
    3b4a:	f0 e0       	ldi	r31, 0x00	; 0
    3b4c:	31 96       	adiw	r30, 0x01	; 1
    3b4e:	02 c0       	rjmp	.+4      	; 0x3b54 <dtoa_prf+0x190>
    3b50:	e0 e0       	ldi	r30, 0x00	; 0
    3b52:	f0 e0       	ldi	r31, 0x00	; 0
    3b54:	2e 0f       	add	r18, r30
    3b56:	3f 1f       	adc	r19, r31
    3b58:	e1 2f       	mov	r30, r17
    3b5a:	f0 e0       	ldi	r31, 0x00	; 0
    3b5c:	2e 17       	cp	r18, r30
    3b5e:	3f 07       	cpc	r19, r31
    3b60:	1c f4       	brge	.+6      	; 0x3b68 <dtoa_prf+0x1a4>
    3b62:	12 1b       	sub	r17, r18
    3b64:	21 2f       	mov	r18, r17
    3b66:	01 c0       	rjmp	.+2      	; 0x3b6a <dtoa_prf+0x1a6>
    3b68:	20 e0       	ldi	r18, 0x00	; 0
    3b6a:	8e 2d       	mov	r24, r14
    3b6c:	88 71       	andi	r24, 0x18	; 24
    3b6e:	59 f4       	brne	.+22     	; 0x3b86 <dtoa_prf+0x1c2>
    3b70:	f6 01       	movw	r30, r12
    3b72:	82 2f       	mov	r24, r18
    3b74:	30 e2       	ldi	r19, 0x20	; 32
    3b76:	88 23       	and	r24, r24
    3b78:	19 f0       	breq	.+6      	; 0x3b80 <dtoa_prf+0x1bc>
    3b7a:	31 93       	st	Z+, r19
    3b7c:	81 50       	subi	r24, 0x01	; 1
    3b7e:	fb cf       	rjmp	.-10     	; 0x3b76 <dtoa_prf+0x1b2>
    3b80:	c2 0e       	add	r12, r18
    3b82:	d1 1c       	adc	r13, r1
    3b84:	20 e0       	ldi	r18, 0x00	; 0
    3b86:	99 23       	and	r25, r25
    3b88:	29 f0       	breq	.+10     	; 0x3b94 <dtoa_prf+0x1d0>
    3b8a:	d6 01       	movw	r26, r12
    3b8c:	9c 93       	st	X, r25
    3b8e:	f6 01       	movw	r30, r12
    3b90:	31 96       	adiw	r30, 0x01	; 1
    3b92:	6f 01       	movw	r12, r30
    3b94:	51 11       	cpse	r21, r1
    3b96:	0b c0       	rjmp	.+22     	; 0x3bae <dtoa_prf+0x1ea>
    3b98:	f6 01       	movw	r30, r12
    3b9a:	82 2f       	mov	r24, r18
    3b9c:	90 e3       	ldi	r25, 0x30	; 48
    3b9e:	88 23       	and	r24, r24
    3ba0:	19 f0       	breq	.+6      	; 0x3ba8 <dtoa_prf+0x1e4>
    3ba2:	91 93       	st	Z+, r25
    3ba4:	81 50       	subi	r24, 0x01	; 1
    3ba6:	fb cf       	rjmp	.-10     	; 0x3b9e <dtoa_prf+0x1da>
    3ba8:	c2 0e       	add	r12, r18
    3baa:	d1 1c       	adc	r13, r1
    3bac:	20 e0       	ldi	r18, 0x00	; 0
    3bae:	0f 2d       	mov	r16, r15
    3bb0:	06 0f       	add	r16, r22
    3bb2:	9a 81       	ldd	r25, Y+2	; 0x02
    3bb4:	34 2f       	mov	r19, r20
    3bb6:	30 71       	andi	r19, 0x10	; 16
    3bb8:	44 ff       	sbrs	r20, 4
    3bba:	03 c0       	rjmp	.+6      	; 0x3bc2 <dtoa_prf+0x1fe>
    3bbc:	91 33       	cpi	r25, 0x31	; 49
    3bbe:	09 f4       	brne	.+2      	; 0x3bc2 <dtoa_prf+0x1fe>
    3bc0:	01 50       	subi	r16, 0x01	; 1
    3bc2:	10 16       	cp	r1, r16
    3bc4:	24 f4       	brge	.+8      	; 0x3bce <dtoa_prf+0x20a>
    3bc6:	09 30       	cpi	r16, 0x09	; 9
    3bc8:	18 f0       	brcs	.+6      	; 0x3bd0 <dtoa_prf+0x20c>
    3bca:	08 e0       	ldi	r16, 0x08	; 8
    3bcc:	01 c0       	rjmp	.+2      	; 0x3bd0 <dtoa_prf+0x20c>
    3bce:	01 e0       	ldi	r16, 0x01	; 1
    3bd0:	ab 01       	movw	r20, r22
    3bd2:	77 ff       	sbrs	r23, 7
    3bd4:	02 c0       	rjmp	.+4      	; 0x3bda <dtoa_prf+0x216>
    3bd6:	40 e0       	ldi	r20, 0x00	; 0
    3bd8:	50 e0       	ldi	r21, 0x00	; 0
    3bda:	fb 01       	movw	r30, r22
    3bdc:	e4 1b       	sub	r30, r20
    3bde:	f5 0b       	sbc	r31, r21
    3be0:	a1 e0       	ldi	r26, 0x01	; 1
    3be2:	b0 e0       	ldi	r27, 0x00	; 0
    3be4:	ac 0f       	add	r26, r28
    3be6:	bd 1f       	adc	r27, r29
    3be8:	ea 0f       	add	r30, r26
    3bea:	fb 1f       	adc	r31, r27
    3bec:	8e e2       	ldi	r24, 0x2E	; 46
    3bee:	a8 2e       	mov	r10, r24
    3bf0:	4b 01       	movw	r8, r22
    3bf2:	80 1a       	sub	r8, r16
    3bf4:	91 08       	sbc	r9, r1
    3bf6:	0b 2d       	mov	r16, r11
    3bf8:	10 e0       	ldi	r17, 0x00	; 0
    3bfa:	11 95       	neg	r17
    3bfc:	01 95       	neg	r16
    3bfe:	11 09       	sbc	r17, r1
    3c00:	4f 3f       	cpi	r20, 0xFF	; 255
    3c02:	bf ef       	ldi	r27, 0xFF	; 255
    3c04:	5b 07       	cpc	r21, r27
    3c06:	21 f4       	brne	.+8      	; 0x3c10 <dtoa_prf+0x24c>
    3c08:	d6 01       	movw	r26, r12
    3c0a:	ac 92       	st	X, r10
    3c0c:	11 96       	adiw	r26, 0x01	; 1
    3c0e:	6d 01       	movw	r12, r26
    3c10:	64 17       	cp	r22, r20
    3c12:	75 07       	cpc	r23, r21
    3c14:	2c f0       	brlt	.+10     	; 0x3c20 <dtoa_prf+0x25c>
    3c16:	84 16       	cp	r8, r20
    3c18:	95 06       	cpc	r9, r21
    3c1a:	14 f4       	brge	.+4      	; 0x3c20 <dtoa_prf+0x25c>
    3c1c:	81 81       	ldd	r24, Z+1	; 0x01
    3c1e:	01 c0       	rjmp	.+2      	; 0x3c22 <dtoa_prf+0x25e>
    3c20:	80 e3       	ldi	r24, 0x30	; 48
    3c22:	41 50       	subi	r20, 0x01	; 1
    3c24:	51 09       	sbc	r21, r1
    3c26:	31 96       	adiw	r30, 0x01	; 1
    3c28:	d6 01       	movw	r26, r12
    3c2a:	11 96       	adiw	r26, 0x01	; 1
    3c2c:	7d 01       	movw	r14, r26
    3c2e:	40 17       	cp	r20, r16
    3c30:	51 07       	cpc	r21, r17
    3c32:	24 f0       	brlt	.+8      	; 0x3c3c <dtoa_prf+0x278>
    3c34:	d6 01       	movw	r26, r12
    3c36:	8c 93       	st	X, r24
    3c38:	67 01       	movw	r12, r14
    3c3a:	e2 cf       	rjmp	.-60     	; 0x3c00 <dtoa_prf+0x23c>
    3c3c:	64 17       	cp	r22, r20
    3c3e:	75 07       	cpc	r23, r21
    3c40:	39 f4       	brne	.+14     	; 0x3c50 <dtoa_prf+0x28c>
    3c42:	96 33       	cpi	r25, 0x36	; 54
    3c44:	20 f4       	brcc	.+8      	; 0x3c4e <dtoa_prf+0x28a>
    3c46:	95 33       	cpi	r25, 0x35	; 53
    3c48:	19 f4       	brne	.+6      	; 0x3c50 <dtoa_prf+0x28c>
    3c4a:	31 11       	cpse	r19, r1
    3c4c:	01 c0       	rjmp	.+2      	; 0x3c50 <dtoa_prf+0x28c>
    3c4e:	81 e3       	ldi	r24, 0x31	; 49
    3c50:	f6 01       	movw	r30, r12
    3c52:	80 83       	st	Z, r24
    3c54:	f7 01       	movw	r30, r14
    3c56:	82 2f       	mov	r24, r18
    3c58:	90 e2       	ldi	r25, 0x20	; 32
    3c5a:	88 23       	and	r24, r24
    3c5c:	19 f0       	breq	.+6      	; 0x3c64 <dtoa_prf+0x2a0>
    3c5e:	91 93       	st	Z+, r25
    3c60:	81 50       	subi	r24, 0x01	; 1
    3c62:	fb cf       	rjmp	.-10     	; 0x3c5a <dtoa_prf+0x296>
    3c64:	f7 01       	movw	r30, r14
    3c66:	e2 0f       	add	r30, r18
    3c68:	f1 1d       	adc	r31, r1
    3c6a:	10 82       	st	Z, r1
    3c6c:	80 e0       	ldi	r24, 0x00	; 0
    3c6e:	90 e0       	ldi	r25, 0x00	; 0
    3c70:	29 96       	adiw	r28, 0x09	; 9
    3c72:	ec e0       	ldi	r30, 0x0C	; 12
    3c74:	0c 94 e6 1f 	jmp	0x3fcc	; 0x3fcc <__epilogue_restores__+0xc>

00003c78 <__ftoa_engine>:
    3c78:	28 30       	cpi	r18, 0x08	; 8
    3c7a:	08 f0       	brcs	.+2      	; 0x3c7e <__ftoa_engine+0x6>
    3c7c:	27 e0       	ldi	r18, 0x07	; 7
    3c7e:	33 27       	eor	r19, r19
    3c80:	da 01       	movw	r26, r20
    3c82:	99 0f       	add	r25, r25
    3c84:	31 1d       	adc	r19, r1
    3c86:	87 fd       	sbrc	r24, 7
    3c88:	91 60       	ori	r25, 0x01	; 1
    3c8a:	00 96       	adiw	r24, 0x00	; 0
    3c8c:	61 05       	cpc	r22, r1
    3c8e:	71 05       	cpc	r23, r1
    3c90:	39 f4       	brne	.+14     	; 0x3ca0 <__ftoa_engine+0x28>
    3c92:	32 60       	ori	r19, 0x02	; 2
    3c94:	2e 5f       	subi	r18, 0xFE	; 254
    3c96:	3d 93       	st	X+, r19
    3c98:	30 e3       	ldi	r19, 0x30	; 48
    3c9a:	2a 95       	dec	r18
    3c9c:	e1 f7       	brne	.-8      	; 0x3c96 <__ftoa_engine+0x1e>
    3c9e:	08 95       	ret
    3ca0:	9f 3f       	cpi	r25, 0xFF	; 255
    3ca2:	30 f0       	brcs	.+12     	; 0x3cb0 <__ftoa_engine+0x38>
    3ca4:	80 38       	cpi	r24, 0x80	; 128
    3ca6:	71 05       	cpc	r23, r1
    3ca8:	61 05       	cpc	r22, r1
    3caa:	09 f0       	breq	.+2      	; 0x3cae <__ftoa_engine+0x36>
    3cac:	3c 5f       	subi	r19, 0xFC	; 252
    3cae:	3c 5f       	subi	r19, 0xFC	; 252
    3cb0:	3d 93       	st	X+, r19
    3cb2:	91 30       	cpi	r25, 0x01	; 1
    3cb4:	08 f0       	brcs	.+2      	; 0x3cb8 <__ftoa_engine+0x40>
    3cb6:	80 68       	ori	r24, 0x80	; 128
    3cb8:	91 1d       	adc	r25, r1
    3cba:	df 93       	push	r29
    3cbc:	cf 93       	push	r28
    3cbe:	1f 93       	push	r17
    3cc0:	0f 93       	push	r16
    3cc2:	ff 92       	push	r15
    3cc4:	ef 92       	push	r14
    3cc6:	19 2f       	mov	r17, r25
    3cc8:	98 7f       	andi	r25, 0xF8	; 248
    3cca:	96 95       	lsr	r25
    3ccc:	e9 2f       	mov	r30, r25
    3cce:	96 95       	lsr	r25
    3cd0:	96 95       	lsr	r25
    3cd2:	e9 0f       	add	r30, r25
    3cd4:	ff 27       	eor	r31, r31
    3cd6:	e8 57       	subi	r30, 0x78	; 120
    3cd8:	fd 4f       	sbci	r31, 0xFD	; 253
    3cda:	99 27       	eor	r25, r25
    3cdc:	33 27       	eor	r19, r19
    3cde:	ee 24       	eor	r14, r14
    3ce0:	ff 24       	eor	r15, r15
    3ce2:	a7 01       	movw	r20, r14
    3ce4:	e7 01       	movw	r28, r14
    3ce6:	05 90       	lpm	r0, Z+
    3ce8:	08 94       	sec
    3cea:	07 94       	ror	r0
    3cec:	28 f4       	brcc	.+10     	; 0x3cf8 <__ftoa_engine+0x80>
    3cee:	36 0f       	add	r19, r22
    3cf0:	e7 1e       	adc	r14, r23
    3cf2:	f8 1e       	adc	r15, r24
    3cf4:	49 1f       	adc	r20, r25
    3cf6:	51 1d       	adc	r21, r1
    3cf8:	66 0f       	add	r22, r22
    3cfa:	77 1f       	adc	r23, r23
    3cfc:	88 1f       	adc	r24, r24
    3cfe:	99 1f       	adc	r25, r25
    3d00:	06 94       	lsr	r0
    3d02:	a1 f7       	brne	.-24     	; 0x3cec <__ftoa_engine+0x74>
    3d04:	05 90       	lpm	r0, Z+
    3d06:	07 94       	ror	r0
    3d08:	28 f4       	brcc	.+10     	; 0x3d14 <__ftoa_engine+0x9c>
    3d0a:	e7 0e       	add	r14, r23
    3d0c:	f8 1e       	adc	r15, r24
    3d0e:	49 1f       	adc	r20, r25
    3d10:	56 1f       	adc	r21, r22
    3d12:	c1 1d       	adc	r28, r1
    3d14:	77 0f       	add	r23, r23
    3d16:	88 1f       	adc	r24, r24
    3d18:	99 1f       	adc	r25, r25
    3d1a:	66 1f       	adc	r22, r22
    3d1c:	06 94       	lsr	r0
    3d1e:	a1 f7       	brne	.-24     	; 0x3d08 <__ftoa_engine+0x90>
    3d20:	05 90       	lpm	r0, Z+
    3d22:	07 94       	ror	r0
    3d24:	28 f4       	brcc	.+10     	; 0x3d30 <__ftoa_engine+0xb8>
    3d26:	f8 0e       	add	r15, r24
    3d28:	49 1f       	adc	r20, r25
    3d2a:	56 1f       	adc	r21, r22
    3d2c:	c7 1f       	adc	r28, r23
    3d2e:	d1 1d       	adc	r29, r1
    3d30:	88 0f       	add	r24, r24
    3d32:	99 1f       	adc	r25, r25
    3d34:	66 1f       	adc	r22, r22
    3d36:	77 1f       	adc	r23, r23
    3d38:	06 94       	lsr	r0
    3d3a:	a1 f7       	brne	.-24     	; 0x3d24 <__ftoa_engine+0xac>
    3d3c:	05 90       	lpm	r0, Z+
    3d3e:	07 94       	ror	r0
    3d40:	20 f4       	brcc	.+8      	; 0x3d4a <__ftoa_engine+0xd2>
    3d42:	49 0f       	add	r20, r25
    3d44:	56 1f       	adc	r21, r22
    3d46:	c7 1f       	adc	r28, r23
    3d48:	d8 1f       	adc	r29, r24
    3d4a:	99 0f       	add	r25, r25
    3d4c:	66 1f       	adc	r22, r22
    3d4e:	77 1f       	adc	r23, r23
    3d50:	88 1f       	adc	r24, r24
    3d52:	06 94       	lsr	r0
    3d54:	a9 f7       	brne	.-22     	; 0x3d40 <__ftoa_engine+0xc8>
    3d56:	84 91       	lpm	r24, Z
    3d58:	10 95       	com	r17
    3d5a:	17 70       	andi	r17, 0x07	; 7
    3d5c:	41 f0       	breq	.+16     	; 0x3d6e <__ftoa_engine+0xf6>
    3d5e:	d6 95       	lsr	r29
    3d60:	c7 95       	ror	r28
    3d62:	57 95       	ror	r21
    3d64:	47 95       	ror	r20
    3d66:	f7 94       	ror	r15
    3d68:	e7 94       	ror	r14
    3d6a:	1a 95       	dec	r17
    3d6c:	c1 f7       	brne	.-16     	; 0x3d5e <__ftoa_engine+0xe6>
    3d6e:	ee e2       	ldi	r30, 0x2E	; 46
    3d70:	f2 e0       	ldi	r31, 0x02	; 2
    3d72:	68 94       	set
    3d74:	15 90       	lpm	r1, Z+
    3d76:	15 91       	lpm	r17, Z+
    3d78:	35 91       	lpm	r19, Z+
    3d7a:	65 91       	lpm	r22, Z+
    3d7c:	95 91       	lpm	r25, Z+
    3d7e:	05 90       	lpm	r0, Z+
    3d80:	7f e2       	ldi	r23, 0x2F	; 47
    3d82:	73 95       	inc	r23
    3d84:	e1 18       	sub	r14, r1
    3d86:	f1 0a       	sbc	r15, r17
    3d88:	43 0b       	sbc	r20, r19
    3d8a:	56 0b       	sbc	r21, r22
    3d8c:	c9 0b       	sbc	r28, r25
    3d8e:	d0 09       	sbc	r29, r0
    3d90:	c0 f7       	brcc	.-16     	; 0x3d82 <__ftoa_engine+0x10a>
    3d92:	e1 0c       	add	r14, r1
    3d94:	f1 1e       	adc	r15, r17
    3d96:	43 1f       	adc	r20, r19
    3d98:	56 1f       	adc	r21, r22
    3d9a:	c9 1f       	adc	r28, r25
    3d9c:	d0 1d       	adc	r29, r0
    3d9e:	7e f4       	brtc	.+30     	; 0x3dbe <__ftoa_engine+0x146>
    3da0:	70 33       	cpi	r23, 0x30	; 48
    3da2:	11 f4       	brne	.+4      	; 0x3da8 <__ftoa_engine+0x130>
    3da4:	8a 95       	dec	r24
    3da6:	e6 cf       	rjmp	.-52     	; 0x3d74 <__ftoa_engine+0xfc>
    3da8:	e8 94       	clt
    3daa:	01 50       	subi	r16, 0x01	; 1
    3dac:	30 f0       	brcs	.+12     	; 0x3dba <__ftoa_engine+0x142>
    3dae:	08 0f       	add	r16, r24
    3db0:	0a f4       	brpl	.+2      	; 0x3db4 <__ftoa_engine+0x13c>
    3db2:	00 27       	eor	r16, r16
    3db4:	02 17       	cp	r16, r18
    3db6:	08 f4       	brcc	.+2      	; 0x3dba <__ftoa_engine+0x142>
    3db8:	20 2f       	mov	r18, r16
    3dba:	23 95       	inc	r18
    3dbc:	02 2f       	mov	r16, r18
    3dbe:	7a 33       	cpi	r23, 0x3A	; 58
    3dc0:	28 f0       	brcs	.+10     	; 0x3dcc <__ftoa_engine+0x154>
    3dc2:	79 e3       	ldi	r23, 0x39	; 57
    3dc4:	7d 93       	st	X+, r23
    3dc6:	2a 95       	dec	r18
    3dc8:	e9 f7       	brne	.-6      	; 0x3dc4 <__ftoa_engine+0x14c>
    3dca:	10 c0       	rjmp	.+32     	; 0x3dec <__ftoa_engine+0x174>
    3dcc:	7d 93       	st	X+, r23
    3dce:	2a 95       	dec	r18
    3dd0:	89 f6       	brne	.-94     	; 0x3d74 <__ftoa_engine+0xfc>
    3dd2:	06 94       	lsr	r0
    3dd4:	97 95       	ror	r25
    3dd6:	67 95       	ror	r22
    3dd8:	37 95       	ror	r19
    3dda:	17 95       	ror	r17
    3ddc:	17 94       	ror	r1
    3dde:	e1 18       	sub	r14, r1
    3de0:	f1 0a       	sbc	r15, r17
    3de2:	43 0b       	sbc	r20, r19
    3de4:	56 0b       	sbc	r21, r22
    3de6:	c9 0b       	sbc	r28, r25
    3de8:	d0 09       	sbc	r29, r0
    3dea:	98 f0       	brcs	.+38     	; 0x3e12 <__ftoa_engine+0x19a>
    3dec:	23 95       	inc	r18
    3dee:	7e 91       	ld	r23, -X
    3df0:	73 95       	inc	r23
    3df2:	7a 33       	cpi	r23, 0x3A	; 58
    3df4:	08 f0       	brcs	.+2      	; 0x3df8 <__ftoa_engine+0x180>
    3df6:	70 e3       	ldi	r23, 0x30	; 48
    3df8:	7c 93       	st	X, r23
    3dfa:	20 13       	cpse	r18, r16
    3dfc:	b8 f7       	brcc	.-18     	; 0x3dec <__ftoa_engine+0x174>
    3dfe:	7e 91       	ld	r23, -X
    3e00:	70 61       	ori	r23, 0x10	; 16
    3e02:	7d 93       	st	X+, r23
    3e04:	30 f0       	brcs	.+12     	; 0x3e12 <__ftoa_engine+0x19a>
    3e06:	83 95       	inc	r24
    3e08:	71 e3       	ldi	r23, 0x31	; 49
    3e0a:	7d 93       	st	X+, r23
    3e0c:	70 e3       	ldi	r23, 0x30	; 48
    3e0e:	2a 95       	dec	r18
    3e10:	e1 f7       	brne	.-8      	; 0x3e0a <__ftoa_engine+0x192>
    3e12:	11 24       	eor	r1, r1
    3e14:	ef 90       	pop	r14
    3e16:	ff 90       	pop	r15
    3e18:	0f 91       	pop	r16
    3e1a:	1f 91       	pop	r17
    3e1c:	cf 91       	pop	r28
    3e1e:	df 91       	pop	r29
    3e20:	99 27       	eor	r25, r25
    3e22:	87 fd       	sbrc	r24, 7
    3e24:	90 95       	com	r25
    3e26:	08 95       	ret

00003e28 <strnlen_P>:
    3e28:	fc 01       	movw	r30, r24
    3e2a:	05 90       	lpm	r0, Z+
    3e2c:	61 50       	subi	r22, 0x01	; 1
    3e2e:	70 40       	sbci	r23, 0x00	; 0
    3e30:	01 10       	cpse	r0, r1
    3e32:	d8 f7       	brcc	.-10     	; 0x3e2a <strnlen_P+0x2>
    3e34:	80 95       	com	r24
    3e36:	90 95       	com	r25
    3e38:	8e 0f       	add	r24, r30
    3e3a:	9f 1f       	adc	r25, r31
    3e3c:	08 95       	ret

00003e3e <strnlen>:
    3e3e:	fc 01       	movw	r30, r24
    3e40:	61 50       	subi	r22, 0x01	; 1
    3e42:	70 40       	sbci	r23, 0x00	; 0
    3e44:	01 90       	ld	r0, Z+
    3e46:	01 10       	cpse	r0, r1
    3e48:	d8 f7       	brcc	.-10     	; 0x3e40 <strnlen+0x2>
    3e4a:	80 95       	com	r24
    3e4c:	90 95       	com	r25
    3e4e:	8e 0f       	add	r24, r30
    3e50:	9f 1f       	adc	r25, r31
    3e52:	08 95       	ret

00003e54 <fputc>:
    3e54:	0f 93       	push	r16
    3e56:	1f 93       	push	r17
    3e58:	cf 93       	push	r28
    3e5a:	df 93       	push	r29
    3e5c:	fb 01       	movw	r30, r22
    3e5e:	23 81       	ldd	r18, Z+3	; 0x03
    3e60:	21 fd       	sbrc	r18, 1
    3e62:	03 c0       	rjmp	.+6      	; 0x3e6a <fputc+0x16>
    3e64:	8f ef       	ldi	r24, 0xFF	; 255
    3e66:	9f ef       	ldi	r25, 0xFF	; 255
    3e68:	2c c0       	rjmp	.+88     	; 0x3ec2 <fputc+0x6e>
    3e6a:	22 ff       	sbrs	r18, 2
    3e6c:	16 c0       	rjmp	.+44     	; 0x3e9a <fputc+0x46>
    3e6e:	46 81       	ldd	r20, Z+6	; 0x06
    3e70:	57 81       	ldd	r21, Z+7	; 0x07
    3e72:	24 81       	ldd	r18, Z+4	; 0x04
    3e74:	35 81       	ldd	r19, Z+5	; 0x05
    3e76:	42 17       	cp	r20, r18
    3e78:	53 07       	cpc	r21, r19
    3e7a:	44 f4       	brge	.+16     	; 0x3e8c <fputc+0x38>
    3e7c:	a0 81       	ld	r26, Z
    3e7e:	b1 81       	ldd	r27, Z+1	; 0x01
    3e80:	9d 01       	movw	r18, r26
    3e82:	2f 5f       	subi	r18, 0xFF	; 255
    3e84:	3f 4f       	sbci	r19, 0xFF	; 255
    3e86:	31 83       	std	Z+1, r19	; 0x01
    3e88:	20 83       	st	Z, r18
    3e8a:	8c 93       	st	X, r24
    3e8c:	26 81       	ldd	r18, Z+6	; 0x06
    3e8e:	37 81       	ldd	r19, Z+7	; 0x07
    3e90:	2f 5f       	subi	r18, 0xFF	; 255
    3e92:	3f 4f       	sbci	r19, 0xFF	; 255
    3e94:	37 83       	std	Z+7, r19	; 0x07
    3e96:	26 83       	std	Z+6, r18	; 0x06
    3e98:	14 c0       	rjmp	.+40     	; 0x3ec2 <fputc+0x6e>
    3e9a:	8b 01       	movw	r16, r22
    3e9c:	ec 01       	movw	r28, r24
    3e9e:	fb 01       	movw	r30, r22
    3ea0:	00 84       	ldd	r0, Z+8	; 0x08
    3ea2:	f1 85       	ldd	r31, Z+9	; 0x09
    3ea4:	e0 2d       	mov	r30, r0
    3ea6:	09 95       	icall
    3ea8:	89 2b       	or	r24, r25
    3eaa:	e1 f6       	brne	.-72     	; 0x3e64 <fputc+0x10>
    3eac:	d8 01       	movw	r26, r16
    3eae:	16 96       	adiw	r26, 0x06	; 6
    3eb0:	8d 91       	ld	r24, X+
    3eb2:	9c 91       	ld	r25, X
    3eb4:	17 97       	sbiw	r26, 0x07	; 7
    3eb6:	01 96       	adiw	r24, 0x01	; 1
    3eb8:	17 96       	adiw	r26, 0x07	; 7
    3eba:	9c 93       	st	X, r25
    3ebc:	8e 93       	st	-X, r24
    3ebe:	16 97       	sbiw	r26, 0x06	; 6
    3ec0:	ce 01       	movw	r24, r28
    3ec2:	df 91       	pop	r29
    3ec4:	cf 91       	pop	r28
    3ec6:	1f 91       	pop	r17
    3ec8:	0f 91       	pop	r16
    3eca:	08 95       	ret

00003ecc <__ultoa_invert>:
    3ecc:	fa 01       	movw	r30, r20
    3ece:	aa 27       	eor	r26, r26
    3ed0:	28 30       	cpi	r18, 0x08	; 8
    3ed2:	51 f1       	breq	.+84     	; 0x3f28 <__ultoa_invert+0x5c>
    3ed4:	20 31       	cpi	r18, 0x10	; 16
    3ed6:	81 f1       	breq	.+96     	; 0x3f38 <__ultoa_invert+0x6c>
    3ed8:	e8 94       	clt
    3eda:	6f 93       	push	r22
    3edc:	6e 7f       	andi	r22, 0xFE	; 254
    3ede:	6e 5f       	subi	r22, 0xFE	; 254
    3ee0:	7f 4f       	sbci	r23, 0xFF	; 255
    3ee2:	8f 4f       	sbci	r24, 0xFF	; 255
    3ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    3ee6:	af 4f       	sbci	r26, 0xFF	; 255
    3ee8:	b1 e0       	ldi	r27, 0x01	; 1
    3eea:	3e d0       	rcall	.+124    	; 0x3f68 <__ultoa_invert+0x9c>
    3eec:	b4 e0       	ldi	r27, 0x04	; 4
    3eee:	3c d0       	rcall	.+120    	; 0x3f68 <__ultoa_invert+0x9c>
    3ef0:	67 0f       	add	r22, r23
    3ef2:	78 1f       	adc	r23, r24
    3ef4:	89 1f       	adc	r24, r25
    3ef6:	9a 1f       	adc	r25, r26
    3ef8:	a1 1d       	adc	r26, r1
    3efa:	68 0f       	add	r22, r24
    3efc:	79 1f       	adc	r23, r25
    3efe:	8a 1f       	adc	r24, r26
    3f00:	91 1d       	adc	r25, r1
    3f02:	a1 1d       	adc	r26, r1
    3f04:	6a 0f       	add	r22, r26
    3f06:	71 1d       	adc	r23, r1
    3f08:	81 1d       	adc	r24, r1
    3f0a:	91 1d       	adc	r25, r1
    3f0c:	a1 1d       	adc	r26, r1
    3f0e:	20 d0       	rcall	.+64     	; 0x3f50 <__ultoa_invert+0x84>
    3f10:	09 f4       	brne	.+2      	; 0x3f14 <__ultoa_invert+0x48>
    3f12:	68 94       	set
    3f14:	3f 91       	pop	r19
    3f16:	2a e0       	ldi	r18, 0x0A	; 10
    3f18:	26 9f       	mul	r18, r22
    3f1a:	11 24       	eor	r1, r1
    3f1c:	30 19       	sub	r19, r0
    3f1e:	30 5d       	subi	r19, 0xD0	; 208
    3f20:	31 93       	st	Z+, r19
    3f22:	de f6       	brtc	.-74     	; 0x3eda <__ultoa_invert+0xe>
    3f24:	cf 01       	movw	r24, r30
    3f26:	08 95       	ret
    3f28:	46 2f       	mov	r20, r22
    3f2a:	47 70       	andi	r20, 0x07	; 7
    3f2c:	40 5d       	subi	r20, 0xD0	; 208
    3f2e:	41 93       	st	Z+, r20
    3f30:	b3 e0       	ldi	r27, 0x03	; 3
    3f32:	0f d0       	rcall	.+30     	; 0x3f52 <__ultoa_invert+0x86>
    3f34:	c9 f7       	brne	.-14     	; 0x3f28 <__ultoa_invert+0x5c>
    3f36:	f6 cf       	rjmp	.-20     	; 0x3f24 <__ultoa_invert+0x58>
    3f38:	46 2f       	mov	r20, r22
    3f3a:	4f 70       	andi	r20, 0x0F	; 15
    3f3c:	40 5d       	subi	r20, 0xD0	; 208
    3f3e:	4a 33       	cpi	r20, 0x3A	; 58
    3f40:	18 f0       	brcs	.+6      	; 0x3f48 <__ultoa_invert+0x7c>
    3f42:	49 5d       	subi	r20, 0xD9	; 217
    3f44:	31 fd       	sbrc	r19, 1
    3f46:	40 52       	subi	r20, 0x20	; 32
    3f48:	41 93       	st	Z+, r20
    3f4a:	02 d0       	rcall	.+4      	; 0x3f50 <__ultoa_invert+0x84>
    3f4c:	a9 f7       	brne	.-22     	; 0x3f38 <__ultoa_invert+0x6c>
    3f4e:	ea cf       	rjmp	.-44     	; 0x3f24 <__ultoa_invert+0x58>
    3f50:	b4 e0       	ldi	r27, 0x04	; 4
    3f52:	a6 95       	lsr	r26
    3f54:	97 95       	ror	r25
    3f56:	87 95       	ror	r24
    3f58:	77 95       	ror	r23
    3f5a:	67 95       	ror	r22
    3f5c:	ba 95       	dec	r27
    3f5e:	c9 f7       	brne	.-14     	; 0x3f52 <__ultoa_invert+0x86>
    3f60:	00 97       	sbiw	r24, 0x00	; 0
    3f62:	61 05       	cpc	r22, r1
    3f64:	71 05       	cpc	r23, r1
    3f66:	08 95       	ret
    3f68:	9b 01       	movw	r18, r22
    3f6a:	ac 01       	movw	r20, r24
    3f6c:	0a 2e       	mov	r0, r26
    3f6e:	06 94       	lsr	r0
    3f70:	57 95       	ror	r21
    3f72:	47 95       	ror	r20
    3f74:	37 95       	ror	r19
    3f76:	27 95       	ror	r18
    3f78:	ba 95       	dec	r27
    3f7a:	c9 f7       	brne	.-14     	; 0x3f6e <__ultoa_invert+0xa2>
    3f7c:	62 0f       	add	r22, r18
    3f7e:	73 1f       	adc	r23, r19
    3f80:	84 1f       	adc	r24, r20
    3f82:	95 1f       	adc	r25, r21
    3f84:	a0 1d       	adc	r26, r0
    3f86:	08 95       	ret

00003f88 <__prologue_saves__>:
    3f88:	2f 92       	push	r2
    3f8a:	3f 92       	push	r3
    3f8c:	4f 92       	push	r4
    3f8e:	5f 92       	push	r5
    3f90:	6f 92       	push	r6
    3f92:	7f 92       	push	r7
    3f94:	8f 92       	push	r8
    3f96:	9f 92       	push	r9
    3f98:	af 92       	push	r10
    3f9a:	bf 92       	push	r11
    3f9c:	cf 92       	push	r12
    3f9e:	df 92       	push	r13
    3fa0:	ef 92       	push	r14
    3fa2:	ff 92       	push	r15
    3fa4:	0f 93       	push	r16
    3fa6:	1f 93       	push	r17
    3fa8:	cf 93       	push	r28
    3faa:	df 93       	push	r29
    3fac:	cd b7       	in	r28, 0x3d	; 61
    3fae:	de b7       	in	r29, 0x3e	; 62
    3fb0:	ca 1b       	sub	r28, r26
    3fb2:	db 0b       	sbc	r29, r27
    3fb4:	0f b6       	in	r0, 0x3f	; 63
    3fb6:	f8 94       	cli
    3fb8:	de bf       	out	0x3e, r29	; 62
    3fba:	0f be       	out	0x3f, r0	; 63
    3fbc:	cd bf       	out	0x3d, r28	; 61
    3fbe:	09 94       	ijmp

00003fc0 <__epilogue_restores__>:
    3fc0:	2a 88       	ldd	r2, Y+18	; 0x12
    3fc2:	39 88       	ldd	r3, Y+17	; 0x11
    3fc4:	48 88       	ldd	r4, Y+16	; 0x10
    3fc6:	5f 84       	ldd	r5, Y+15	; 0x0f
    3fc8:	6e 84       	ldd	r6, Y+14	; 0x0e
    3fca:	7d 84       	ldd	r7, Y+13	; 0x0d
    3fcc:	8c 84       	ldd	r8, Y+12	; 0x0c
    3fce:	9b 84       	ldd	r9, Y+11	; 0x0b
    3fd0:	aa 84       	ldd	r10, Y+10	; 0x0a
    3fd2:	b9 84       	ldd	r11, Y+9	; 0x09
    3fd4:	c8 84       	ldd	r12, Y+8	; 0x08
    3fd6:	df 80       	ldd	r13, Y+7	; 0x07
    3fd8:	ee 80       	ldd	r14, Y+6	; 0x06
    3fda:	fd 80       	ldd	r15, Y+5	; 0x05
    3fdc:	0c 81       	ldd	r16, Y+4	; 0x04
    3fde:	1b 81       	ldd	r17, Y+3	; 0x03
    3fe0:	aa 81       	ldd	r26, Y+2	; 0x02
    3fe2:	b9 81       	ldd	r27, Y+1	; 0x01
    3fe4:	ce 0f       	add	r28, r30
    3fe6:	d1 1d       	adc	r29, r1
    3fe8:	0f b6       	in	r0, 0x3f	; 63
    3fea:	f8 94       	cli
    3fec:	de bf       	out	0x3e, r29	; 62
    3fee:	0f be       	out	0x3f, r0	; 63
    3ff0:	cd bf       	out	0x3d, r28	; 61
    3ff2:	ed 01       	movw	r28, r26
    3ff4:	08 95       	ret

00003ff6 <_exit>:
    3ff6:	f8 94       	cli

00003ff8 <__stop_program>:
    3ff8:	ff cf       	rjmp	.-2      	; 0x3ff8 <__stop_program>
