
Proyecto_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000009aa  00000a3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080012e  0080012e  00000a6c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ac8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b2d  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000869  00000000  00000000  000016ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000059b  00000000  00000000  00001f16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  000024b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000472  00000000  00000000  00002628  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000040f  00000000  00000000  00002a9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002ea9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 a9 00 	jmp	0x152	; 0x152 <__vector_4>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ea       	ldi	r30, 0xAA	; 170
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 32       	cpi	r26, 0x2E	; 46
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e2       	ldi	r26, 0x2E	; 46
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 00 01 	call	0x200	; 0x200 <main>
  9e:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_5>:
//PC2,3,4,5 -> PCINIT10,11,12,13 -> PCI1
//PD4,5,6,7 -> PCINIT20,21,22,23 -> PCI2

//agregar bool ocupado para no accionar multiples veces interrupcion!
ISR(PCINT2_vect) //seccion2 D
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	3f 93       	push	r19
  b4:	4f 93       	push	r20
  b6:	5f 93       	push	r21
  b8:	6f 93       	push	r22
  ba:	7f 93       	push	r23
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
  c0:	af 93       	push	r26
  c2:	bf 93       	push	r27
  c4:	ef 93       	push	r30
  c6:	ff 93       	push	r31
	//INICIO OCUPADO
	//Debounder in
	if      (!(PIND & (1<<PIND4))) { presionado = linea + 0;}
  c8:	4c 99       	sbic	0x09, 4	; 9
  ca:	09 c0       	rjmp	.+18     	; 0xde <__vector_5+0x38>
  cc:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
  d0:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
  d4:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
  d8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
  dc:	23 c0       	rjmp	.+70     	; 0x124 <__vector_5+0x7e>
	else if (!(PIND & (1<<PIND5))) { presionado = linea + 1;}
  de:	4d 99       	sbic	0x09, 5	; 9
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <__vector_5+0x50>
  e2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
  e6:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
  ea:	01 96       	adiw	r24, 0x01	; 1
  ec:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
  f0:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
  f4:	17 c0       	rjmp	.+46     	; 0x124 <__vector_5+0x7e>
	else if (!(PIND & (1<<PIND6))) { presionado = linea + 2;}
  f6:	4e 99       	sbic	0x09, 6	; 9
  f8:	0a c0       	rjmp	.+20     	; 0x10e <__vector_5+0x68>
  fa:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
  fe:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 102:	02 96       	adiw	r24, 0x02	; 2
 104:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 108:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 10c:	0b c0       	rjmp	.+22     	; 0x124 <__vector_5+0x7e>
	else if (!(PIND & (1<<PIND7))) { presionado = linea + 3;}
 10e:	4f 99       	sbic	0x09, 7	; 9
 110:	09 c0       	rjmp	.+18     	; 0x124 <__vector_5+0x7e>
 112:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
 116:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 11a:	03 96       	adiw	r24, 0x03	; 3
 11c:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 120:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
	mostrar(presionado);
 124:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 128:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
 12c:	0e 94 95 01 	call	0x32a	; 0x32a <mostrar>
	//debounceer out
}
 130:	ff 91       	pop	r31
 132:	ef 91       	pop	r30
 134:	bf 91       	pop	r27
 136:	af 91       	pop	r26
 138:	9f 91       	pop	r25
 13a:	8f 91       	pop	r24
 13c:	7f 91       	pop	r23
 13e:	6f 91       	pop	r22
 140:	5f 91       	pop	r21
 142:	4f 91       	pop	r20
 144:	3f 91       	pop	r19
 146:	2f 91       	pop	r18
 148:	0f 90       	pop	r0
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	0f 90       	pop	r0
 14e:	1f 90       	pop	r1
 150:	18 95       	reti

00000152 <__vector_4>:

ISR(PCINT1_vect) //seccion1 C
{
 152:	1f 92       	push	r1
 154:	0f 92       	push	r0
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	0f 92       	push	r0
 15a:	11 24       	eor	r1, r1
 15c:	2f 93       	push	r18
 15e:	3f 93       	push	r19
 160:	4f 93       	push	r20
 162:	5f 93       	push	r21
 164:	6f 93       	push	r22
 166:	7f 93       	push	r23
 168:	8f 93       	push	r24
 16a:	9f 93       	push	r25
 16c:	af 93       	push	r26
 16e:	bf 93       	push	r27
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
	//INICIO OCUPADO
	//debouncer in
	if      (!(PINC & (1<<PINC2))) { presionado = linea + 4;}
 174:	32 99       	sbic	0x06, 2	; 6
 176:	0a c0       	rjmp	.+20     	; 0x18c <__vector_4+0x3a>
 178:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
 17c:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 180:	04 96       	adiw	r24, 0x04	; 4
 182:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 186:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 18a:	23 c0       	rjmp	.+70     	; 0x1d2 <__vector_4+0x80>
	else if (!(PINC & (1<<PINC3))) { presionado = linea + 5;}
 18c:	33 99       	sbic	0x06, 3	; 6
 18e:	0a c0       	rjmp	.+20     	; 0x1a4 <__vector_4+0x52>
 190:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
 194:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 198:	05 96       	adiw	r24, 0x05	; 5
 19a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 19e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 1a2:	17 c0       	rjmp	.+46     	; 0x1d2 <__vector_4+0x80>
	else if (!(PINC & (1<<PINC4))) { presionado = linea + 6;}
 1a4:	34 99       	sbic	0x06, 4	; 6
 1a6:	0a c0       	rjmp	.+20     	; 0x1bc <__vector_4+0x6a>
 1a8:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
 1ac:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 1b0:	06 96       	adiw	r24, 0x06	; 6
 1b2:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 1b6:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 1ba:	0b c0       	rjmp	.+22     	; 0x1d2 <__vector_4+0x80>
	else if (!(PINC & (1<<PINC5))) { presionado = linea + 7;}
 1bc:	35 99       	sbic	0x06, 5	; 6
 1be:	09 c0       	rjmp	.+18     	; 0x1d2 <__vector_4+0x80>
 1c0:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <linea>
 1c4:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <linea+0x1>
 1c8:	07 96       	adiw	r24, 0x07	; 7
 1ca:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 1ce:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
	mostrar(presionado);
 1d2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 1d6:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
 1da:	0e 94 95 01 	call	0x32a	; 0x32a <mostrar>
	//debouncer out
}
 1de:	ff 91       	pop	r31
 1e0:	ef 91       	pop	r30
 1e2:	bf 91       	pop	r27
 1e4:	af 91       	pop	r26
 1e6:	9f 91       	pop	r25
 1e8:	8f 91       	pop	r24
 1ea:	7f 91       	pop	r23
 1ec:	6f 91       	pop	r22
 1ee:	5f 91       	pop	r21
 1f0:	4f 91       	pop	r20
 1f2:	3f 91       	pop	r19
 1f4:	2f 91       	pop	r18
 1f6:	0f 90       	pop	r0
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	0f 90       	pop	r0
 1fc:	1f 90       	pop	r1
 1fe:	18 95       	reti

00000200 <main>:


int main(void)
{
	
	tecladoInit();
 200:	0e 94 56 01 	call	0x2ac	; 0x2ac <tecladoInit>
	USART_Init(MYUBRR);
 204:	80 e1       	ldi	r24, 0x10	; 16
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 de 01 	call	0x3bc	; 0x3bc <USART_Init>
	USART_Transmit_String("HOLA");
 20c:	81 e2       	ldi	r24, 0x21	; 33
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 86 01 	call	0x30c	; 0x30c <USART_Transmit_String>
	
	sei();
 214:	78 94       	sei
	
    while (1) 
    {
		p1
		p2
 216:	68 e0       	ldi	r22, 0x08	; 8
 218:	70 e0       	ldi	r23, 0x00	; 0
		p3
 21a:	40 e1       	ldi	r20, 0x10	; 16
 21c:	50 e0       	ldi	r21, 0x00	; 0
		p4
 21e:	28 e1       	ldi	r18, 0x18	; 24
 220:	30 e0       	ldi	r19, 0x00	; 0
	
	sei();
	
    while (1) 
    {
		p1
 222:	40 98       	cbi	0x08, 0	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 224:	89 ef       	ldi	r24, 0xF9	; 249
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <main+0x28>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <main+0x2e>
 22e:	00 00       	nop
 230:	88 b1       	in	r24, 0x08	; 8
 232:	83 60       	ori	r24, 0x03	; 3
 234:	88 b9       	out	0x08, r24	; 8
 236:	8b b1       	in	r24, 0x0b	; 11
 238:	8c 60       	ori	r24, 0x0C	; 12
 23a:	8b b9       	out	0x0b, r24	; 11
 23c:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <linea+0x1>
 240:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <linea>
		p2
 244:	41 98       	cbi	0x08, 1	; 8
 246:	89 ef       	ldi	r24, 0xF9	; 249
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <main+0x4a>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <main+0x50>
 250:	00 00       	nop
 252:	88 b1       	in	r24, 0x08	; 8
 254:	83 60       	ori	r24, 0x03	; 3
 256:	88 b9       	out	0x08, r24	; 8
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	8c 60       	ori	r24, 0x0C	; 12
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <linea+0x1>
 262:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <linea>
		p3
 266:	5a 98       	cbi	0x0b, 2	; 11
 268:	89 ef       	ldi	r24, 0xF9	; 249
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <main+0x6c>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x72>
 272:	00 00       	nop
 274:	88 b1       	in	r24, 0x08	; 8
 276:	83 60       	ori	r24, 0x03	; 3
 278:	88 b9       	out	0x08, r24	; 8
 27a:	8b b1       	in	r24, 0x0b	; 11
 27c:	8c 60       	ori	r24, 0x0C	; 12
 27e:	8b b9       	out	0x0b, r24	; 11
 280:	50 93 31 01 	sts	0x0131, r21	; 0x800131 <linea+0x1>
 284:	40 93 30 01 	sts	0x0130, r20	; 0x800130 <linea>
		p4
 288:	5b 98       	cbi	0x0b, 3	; 11
 28a:	89 ef       	ldi	r24, 0xF9	; 249
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <main+0x8e>
 292:	00 c0       	rjmp	.+0      	; 0x294 <main+0x94>
 294:	00 00       	nop
 296:	88 b1       	in	r24, 0x08	; 8
 298:	83 60       	ori	r24, 0x03	; 3
 29a:	88 b9       	out	0x08, r24	; 8
 29c:	8b b1       	in	r24, 0x0b	; 11
 29e:	8c 60       	ori	r24, 0x0C	; 12
 2a0:	8b b9       	out	0x0b, r24	; 11
 2a2:	30 93 31 01 	sts	0x0131, r19	; 0x800131 <linea+0x1>
 2a6:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <linea>
 2aa:	bb cf       	rjmp	.-138    	; 0x222 <main+0x22>

000002ac <tecladoInit>:


void tecladoInit(void)
{
	//OUTPUTS
	DDRC |= (1 << DDC0) | (1 << DDC1);
 2ac:	87 b1       	in	r24, 0x07	; 7
 2ae:	83 60       	ori	r24, 0x03	; 3
 2b0:	87 b9       	out	0x07, r24	; 7
	DDRD |= (1 << DDD2) | (1 << DDD3);
 2b2:	8a b1       	in	r24, 0x0a	; 10
 2b4:	8c 60       	ori	r24, 0x0C	; 12
 2b6:	8a b9       	out	0x0a, r24	; 10
	
	//INPUTS
	DDRC &= ~((1 << DDC2) | (1 << DDC3) | (1 << DDC4) | (1 << DDC5));
 2b8:	87 b1       	in	r24, 0x07	; 7
 2ba:	83 7c       	andi	r24, 0xC3	; 195
 2bc:	87 b9       	out	0x07, r24	; 7
	DDRD &= ~((1 << DDD4) | (1 << DDD5) | (1 << DDD6) | (1 << DDD7));
 2be:	8a b1       	in	r24, 0x0a	; 10
 2c0:	8f 70       	andi	r24, 0x0F	; 15
 2c2:	8a b9       	out	0x0a, r24	; 10
	
	//PULL-UP
	PORTC |= (1 << PORTC2) | (1 << PORTC3) | (1 << PORTC4) | (1 << PORTC5);
 2c4:	88 b1       	in	r24, 0x08	; 8
 2c6:	8c 63       	ori	r24, 0x3C	; 60
 2c8:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD4) | (1 << PORTD5) | (1 << PORTD6) | (1 << PORTD7);
 2ca:	8b b1       	in	r24, 0x0b	; 11
 2cc:	80 6f       	ori	r24, 0xF0	; 240
 2ce:	8b b9       	out	0x0b, r24	; 11
	
	//OUTPUTS HIGH (neutro)
	PORTC |= (1 << PORTC0) | (1 << PORTC1);
 2d0:	88 b1       	in	r24, 0x08	; 8
 2d2:	83 60       	ori	r24, 0x03	; 3
 2d4:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD2) | (1 << PORTC3);
 2d6:	8b b1       	in	r24, 0x0b	; 11
 2d8:	8c 60       	ori	r24, 0x0C	; 12
 2da:	8b b9       	out	0x0b, r24	; 11
	
	PCMSK1 |= 0x3C; //PC2,3,4,5
 2dc:	ec e6       	ldi	r30, 0x6C	; 108
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	80 81       	ld	r24, Z
 2e2:	8c 63       	ori	r24, 0x3C	; 60
 2e4:	80 83       	st	Z, r24
	PCMSK2 |= 0xF0; //PD4,5,6,7
 2e6:	ed e6       	ldi	r30, 0x6D	; 109
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	80 6f       	ori	r24, 0xF0	; 240
 2ee:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE1) | (1<<PCIE2);   //interrupts de cambio habilitados
 2f0:	e8 e6       	ldi	r30, 0x68	; 104
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	86 60       	ori	r24, 0x06	; 6
 2f8:	80 83       	st	Z, r24
 2fa:	08 95       	ret

000002fc <USART_Transmit_char>:
	

void USART_Transmit_char( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 2fc:	e0 ec       	ldi	r30, 0xC0	; 192
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	90 81       	ld	r25, Z
 302:	95 ff       	sbrs	r25, 5
 304:	fd cf       	rjmp	.-6      	; 0x300 <USART_Transmit_char+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 306:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 30a:	08 95       	ret

0000030c <USART_Transmit_String>:
}

void USART_Transmit_String(char* StringPtr){
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
 312:	88 81       	ld	r24, Y
 314:	88 23       	and	r24, r24
 316:	31 f0       	breq	.+12     	; 0x324 <USART_Transmit_String+0x18>
 318:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit_char(*StringPtr);
 31a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USART_Transmit_char>
	/* Put data into buffer, sends the data */
	UDR0 = data;
}

void USART_Transmit_String(char* StringPtr){
	while(*StringPtr != 0x00){
 31e:	89 91       	ld	r24, Y+
 320:	81 11       	cpse	r24, r1
 322:	fb cf       	rjmp	.-10     	; 0x31a <USART_Transmit_String+0xe>
		USART_Transmit_char(*StringPtr);
		StringPtr++;
	}
}
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <mostrar>:
	PCICR |= (1<<PCIE1) | (1<<PCIE2);   //interrupts de cambio habilitados
}


void mostrar(int presionado) //interpretacion de seleccion, mapea input
{
 32a:	ff 92       	push	r15
 32c:	0f 93       	push	r16
 32e:	1f 93       	push	r17
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	cd b7       	in	r28, 0x3d	; 61
 336:	de b7       	in	r29, 0x3e	; 62
 338:	a1 97       	sbiw	r28, 0x21	; 33
 33a:	0f b6       	in	r0, 0x3f	; 63
 33c:	f8 94       	cli
 33e:	de bf       	out	0x3e, r29	; 62
 340:	0f be       	out	0x3f, r0	; 63
 342:	cd bf       	out	0x3d, r28	; 61
	//presionado es el input
	//mapear presionado con respectiva entrada en entradas
	//cambiar orden en este string segun se necesite
	char entradas[31] = "m123456789.+-*/^qlesctgxpofa0dn=";
 344:	2f e1       	ldi	r18, 0x1F	; 31
 346:	e0 e0       	ldi	r30, 0x00	; 0
 348:	f1 e0       	ldi	r31, 0x01	; 1
 34a:	de 01       	movw	r26, r28
 34c:	11 96       	adiw	r26, 0x01	; 1
 34e:	01 90       	ld	r0, Z+
 350:	0d 92       	st	X+, r0
 352:	2a 95       	dec	r18
 354:	e1 f7       	brne	.-8      	; 0x34e <mostrar+0x24>
	char ent = entradas[presionado];
 356:	e1 e0       	ldi	r30, 0x01	; 1
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	ec 0f       	add	r30, r28
 35c:	fd 1f       	adc	r31, r29
 35e:	e8 0f       	add	r30, r24
 360:	f9 1f       	adc	r31, r25
 362:	f0 80       	ld	r15, Z
	//calculadora(entrada); //le pasa la entrada a la calculadora
	
	//FIN OCUPADO
	//MOSTRAR PRESIONADO POR USART (por ahora)
	char str[2];
	sprintf(str, "%d", presionado);
 364:	9f 93       	push	r25
 366:	8f 93       	push	r24
 368:	86 e2       	ldi	r24, 0x26	; 38
 36a:	91 e0       	ldi	r25, 0x01	; 1
 36c:	9f 93       	push	r25
 36e:	8f 93       	push	r24
 370:	8e 01       	movw	r16, r28
 372:	00 5e       	subi	r16, 0xE0	; 224
 374:	1f 4f       	sbci	r17, 0xFF	; 255
 376:	1f 93       	push	r17
 378:	0f 93       	push	r16
 37a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <sprintf>
	USART_Transmit_String(str);
 37e:	c8 01       	movw	r24, r16
 380:	0e 94 86 01 	call	0x30c	; 0x30c <USART_Transmit_String>
	USART_Transmit_String(" -> ");
 384:	89 e2       	ldi	r24, 0x29	; 41
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	0e 94 86 01 	call	0x30c	; 0x30c <USART_Transmit_String>
	USART_Transmit_char(ent);
 38c:	8f 2d       	mov	r24, r15
 38e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USART_Transmit_char>
	USART_Transmit_char('\n');
 392:	8a e0       	ldi	r24, 0x0A	; 10
 394:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USART_Transmit_char>
	}
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	a1 96       	adiw	r28, 0x21	; 33
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	f8 94       	cli
 3aa:	de bf       	out	0x3e, r29	; 62
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	cd bf       	out	0x3d, r28	; 61
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	1f 91       	pop	r17
 3b6:	0f 91       	pop	r16
 3b8:	ff 90       	pop	r15
 3ba:	08 95       	ret

000003bc <USART_Init>:
}

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 3bc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 3c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);			//habilitamos tx y rx
 3c4:	88 e1       	ldi	r24, 0x18	; 24
 3c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (3<<UCSZ00);					//decimos cuantos stopbit queremos y que data -> 8bits, 1stpobit
 3ca:	86 e0       	ldi	r24, 0x06	; 6
 3cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 3d0:	08 95       	ret

000003d2 <sprintf>:
 3d2:	ae e0       	ldi	r26, 0x0E	; 14
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	ef ee       	ldi	r30, 0xEF	; 239
 3d8:	f1 e0       	ldi	r31, 0x01	; 1
 3da:	0c 94 aa 04 	jmp	0x954	; 0x954 <__prologue_saves__+0x1c>
 3de:	0d 89       	ldd	r16, Y+21	; 0x15
 3e0:	1e 89       	ldd	r17, Y+22	; 0x16
 3e2:	86 e0       	ldi	r24, 0x06	; 6
 3e4:	8c 83       	std	Y+4, r24	; 0x04
 3e6:	1a 83       	std	Y+2, r17	; 0x02
 3e8:	09 83       	std	Y+1, r16	; 0x01
 3ea:	8f ef       	ldi	r24, 0xFF	; 255
 3ec:	9f e7       	ldi	r25, 0x7F	; 127
 3ee:	9e 83       	std	Y+6, r25	; 0x06
 3f0:	8d 83       	std	Y+5, r24	; 0x05
 3f2:	ae 01       	movw	r20, r28
 3f4:	47 5e       	subi	r20, 0xE7	; 231
 3f6:	5f 4f       	sbci	r21, 0xFF	; 255
 3f8:	6f 89       	ldd	r22, Y+23	; 0x17
 3fa:	78 8d       	ldd	r23, Y+24	; 0x18
 3fc:	ce 01       	movw	r24, r28
 3fe:	01 96       	adiw	r24, 0x01	; 1
 400:	0e 94 0b 02 	call	0x416	; 0x416 <vfprintf>
 404:	ef 81       	ldd	r30, Y+7	; 0x07
 406:	f8 85       	ldd	r31, Y+8	; 0x08
 408:	e0 0f       	add	r30, r16
 40a:	f1 1f       	adc	r31, r17
 40c:	10 82       	st	Z, r1
 40e:	2e 96       	adiw	r28, 0x0e	; 14
 410:	e4 e0       	ldi	r30, 0x04	; 4
 412:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__epilogue_restores__+0x1c>

00000416 <vfprintf>:
 416:	ab e0       	ldi	r26, 0x0B	; 11
 418:	b0 e0       	ldi	r27, 0x00	; 0
 41a:	e1 e1       	ldi	r30, 0x11	; 17
 41c:	f2 e0       	ldi	r31, 0x02	; 2
 41e:	0c 94 9c 04 	jmp	0x938	; 0x938 <__prologue_saves__>
 422:	6c 01       	movw	r12, r24
 424:	7b 01       	movw	r14, r22
 426:	8a 01       	movw	r16, r20
 428:	fc 01       	movw	r30, r24
 42a:	17 82       	std	Z+7, r1	; 0x07
 42c:	16 82       	std	Z+6, r1	; 0x06
 42e:	83 81       	ldd	r24, Z+3	; 0x03
 430:	81 ff       	sbrs	r24, 1
 432:	cc c1       	rjmp	.+920    	; 0x7cc <vfprintf+0x3b6>
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	3c 01       	movw	r6, r24
 43a:	f6 01       	movw	r30, r12
 43c:	93 81       	ldd	r25, Z+3	; 0x03
 43e:	f7 01       	movw	r30, r14
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	7f 01       	movw	r14, r30
 44a:	88 23       	and	r24, r24
 44c:	09 f4       	brne	.+2      	; 0x450 <vfprintf+0x3a>
 44e:	ba c1       	rjmp	.+884    	; 0x7c4 <vfprintf+0x3ae>
 450:	85 32       	cpi	r24, 0x25	; 37
 452:	39 f4       	brne	.+14     	; 0x462 <vfprintf+0x4c>
 454:	93 fd       	sbrc	r25, 3
 456:	85 91       	lpm	r24, Z+
 458:	93 ff       	sbrs	r25, 3
 45a:	81 91       	ld	r24, Z+
 45c:	7f 01       	movw	r14, r30
 45e:	85 32       	cpi	r24, 0x25	; 37
 460:	29 f4       	brne	.+10     	; 0x46c <vfprintf+0x56>
 462:	b6 01       	movw	r22, r12
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 46a:	e7 cf       	rjmp	.-50     	; 0x43a <vfprintf+0x24>
 46c:	91 2c       	mov	r9, r1
 46e:	21 2c       	mov	r2, r1
 470:	31 2c       	mov	r3, r1
 472:	ff e1       	ldi	r31, 0x1F	; 31
 474:	f3 15       	cp	r31, r3
 476:	d8 f0       	brcs	.+54     	; 0x4ae <vfprintf+0x98>
 478:	8b 32       	cpi	r24, 0x2B	; 43
 47a:	79 f0       	breq	.+30     	; 0x49a <vfprintf+0x84>
 47c:	38 f4       	brcc	.+14     	; 0x48c <vfprintf+0x76>
 47e:	80 32       	cpi	r24, 0x20	; 32
 480:	79 f0       	breq	.+30     	; 0x4a0 <vfprintf+0x8a>
 482:	83 32       	cpi	r24, 0x23	; 35
 484:	a1 f4       	brne	.+40     	; 0x4ae <vfprintf+0x98>
 486:	23 2d       	mov	r18, r3
 488:	20 61       	ori	r18, 0x10	; 16
 48a:	1d c0       	rjmp	.+58     	; 0x4c6 <vfprintf+0xb0>
 48c:	8d 32       	cpi	r24, 0x2D	; 45
 48e:	61 f0       	breq	.+24     	; 0x4a8 <vfprintf+0x92>
 490:	80 33       	cpi	r24, 0x30	; 48
 492:	69 f4       	brne	.+26     	; 0x4ae <vfprintf+0x98>
 494:	23 2d       	mov	r18, r3
 496:	21 60       	ori	r18, 0x01	; 1
 498:	16 c0       	rjmp	.+44     	; 0x4c6 <vfprintf+0xb0>
 49a:	83 2d       	mov	r24, r3
 49c:	82 60       	ori	r24, 0x02	; 2
 49e:	38 2e       	mov	r3, r24
 4a0:	e3 2d       	mov	r30, r3
 4a2:	e4 60       	ori	r30, 0x04	; 4
 4a4:	3e 2e       	mov	r3, r30
 4a6:	2a c0       	rjmp	.+84     	; 0x4fc <vfprintf+0xe6>
 4a8:	f3 2d       	mov	r31, r3
 4aa:	f8 60       	ori	r31, 0x08	; 8
 4ac:	1d c0       	rjmp	.+58     	; 0x4e8 <vfprintf+0xd2>
 4ae:	37 fc       	sbrc	r3, 7
 4b0:	2d c0       	rjmp	.+90     	; 0x50c <vfprintf+0xf6>
 4b2:	20 ed       	ldi	r18, 0xD0	; 208
 4b4:	28 0f       	add	r18, r24
 4b6:	2a 30       	cpi	r18, 0x0A	; 10
 4b8:	40 f0       	brcs	.+16     	; 0x4ca <vfprintf+0xb4>
 4ba:	8e 32       	cpi	r24, 0x2E	; 46
 4bc:	b9 f4       	brne	.+46     	; 0x4ec <vfprintf+0xd6>
 4be:	36 fc       	sbrc	r3, 6
 4c0:	81 c1       	rjmp	.+770    	; 0x7c4 <vfprintf+0x3ae>
 4c2:	23 2d       	mov	r18, r3
 4c4:	20 64       	ori	r18, 0x40	; 64
 4c6:	32 2e       	mov	r3, r18
 4c8:	19 c0       	rjmp	.+50     	; 0x4fc <vfprintf+0xe6>
 4ca:	36 fe       	sbrs	r3, 6
 4cc:	06 c0       	rjmp	.+12     	; 0x4da <vfprintf+0xc4>
 4ce:	8a e0       	ldi	r24, 0x0A	; 10
 4d0:	98 9e       	mul	r9, r24
 4d2:	20 0d       	add	r18, r0
 4d4:	11 24       	eor	r1, r1
 4d6:	92 2e       	mov	r9, r18
 4d8:	11 c0       	rjmp	.+34     	; 0x4fc <vfprintf+0xe6>
 4da:	ea e0       	ldi	r30, 0x0A	; 10
 4dc:	2e 9e       	mul	r2, r30
 4de:	20 0d       	add	r18, r0
 4e0:	11 24       	eor	r1, r1
 4e2:	22 2e       	mov	r2, r18
 4e4:	f3 2d       	mov	r31, r3
 4e6:	f0 62       	ori	r31, 0x20	; 32
 4e8:	3f 2e       	mov	r3, r31
 4ea:	08 c0       	rjmp	.+16     	; 0x4fc <vfprintf+0xe6>
 4ec:	8c 36       	cpi	r24, 0x6C	; 108
 4ee:	21 f4       	brne	.+8      	; 0x4f8 <vfprintf+0xe2>
 4f0:	83 2d       	mov	r24, r3
 4f2:	80 68       	ori	r24, 0x80	; 128
 4f4:	38 2e       	mov	r3, r24
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <vfprintf+0xe6>
 4f8:	88 36       	cpi	r24, 0x68	; 104
 4fa:	41 f4       	brne	.+16     	; 0x50c <vfprintf+0xf6>
 4fc:	f7 01       	movw	r30, r14
 4fe:	93 fd       	sbrc	r25, 3
 500:	85 91       	lpm	r24, Z+
 502:	93 ff       	sbrs	r25, 3
 504:	81 91       	ld	r24, Z+
 506:	7f 01       	movw	r14, r30
 508:	81 11       	cpse	r24, r1
 50a:	b3 cf       	rjmp	.-154    	; 0x472 <vfprintf+0x5c>
 50c:	98 2f       	mov	r25, r24
 50e:	9f 7d       	andi	r25, 0xDF	; 223
 510:	95 54       	subi	r25, 0x45	; 69
 512:	93 30       	cpi	r25, 0x03	; 3
 514:	28 f4       	brcc	.+10     	; 0x520 <vfprintf+0x10a>
 516:	0c 5f       	subi	r16, 0xFC	; 252
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	9f e3       	ldi	r25, 0x3F	; 63
 51c:	99 83       	std	Y+1, r25	; 0x01
 51e:	0d c0       	rjmp	.+26     	; 0x53a <vfprintf+0x124>
 520:	83 36       	cpi	r24, 0x63	; 99
 522:	31 f0       	breq	.+12     	; 0x530 <vfprintf+0x11a>
 524:	83 37       	cpi	r24, 0x73	; 115
 526:	71 f0       	breq	.+28     	; 0x544 <vfprintf+0x12e>
 528:	83 35       	cpi	r24, 0x53	; 83
 52a:	09 f0       	breq	.+2      	; 0x52e <vfprintf+0x118>
 52c:	59 c0       	rjmp	.+178    	; 0x5e0 <vfprintf+0x1ca>
 52e:	21 c0       	rjmp	.+66     	; 0x572 <vfprintf+0x15c>
 530:	f8 01       	movw	r30, r16
 532:	80 81       	ld	r24, Z
 534:	89 83       	std	Y+1, r24	; 0x01
 536:	0e 5f       	subi	r16, 0xFE	; 254
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	88 24       	eor	r8, r8
 53c:	83 94       	inc	r8
 53e:	91 2c       	mov	r9, r1
 540:	53 01       	movw	r10, r6
 542:	13 c0       	rjmp	.+38     	; 0x56a <vfprintf+0x154>
 544:	28 01       	movw	r4, r16
 546:	f2 e0       	ldi	r31, 0x02	; 2
 548:	4f 0e       	add	r4, r31
 54a:	51 1c       	adc	r5, r1
 54c:	f8 01       	movw	r30, r16
 54e:	a0 80       	ld	r10, Z
 550:	b1 80       	ldd	r11, Z+1	; 0x01
 552:	36 fe       	sbrs	r3, 6
 554:	03 c0       	rjmp	.+6      	; 0x55c <vfprintf+0x146>
 556:	69 2d       	mov	r22, r9
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <vfprintf+0x14a>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	c5 01       	movw	r24, r10
 562:	0e 94 f7 03 	call	0x7ee	; 0x7ee <strnlen>
 566:	4c 01       	movw	r8, r24
 568:	82 01       	movw	r16, r4
 56a:	f3 2d       	mov	r31, r3
 56c:	ff 77       	andi	r31, 0x7F	; 127
 56e:	3f 2e       	mov	r3, r31
 570:	16 c0       	rjmp	.+44     	; 0x59e <vfprintf+0x188>
 572:	28 01       	movw	r4, r16
 574:	22 e0       	ldi	r18, 0x02	; 2
 576:	42 0e       	add	r4, r18
 578:	51 1c       	adc	r5, r1
 57a:	f8 01       	movw	r30, r16
 57c:	a0 80       	ld	r10, Z
 57e:	b1 80       	ldd	r11, Z+1	; 0x01
 580:	36 fe       	sbrs	r3, 6
 582:	03 c0       	rjmp	.+6      	; 0x58a <vfprintf+0x174>
 584:	69 2d       	mov	r22, r9
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <vfprintf+0x178>
 58a:	6f ef       	ldi	r22, 0xFF	; 255
 58c:	7f ef       	ldi	r23, 0xFF	; 255
 58e:	c5 01       	movw	r24, r10
 590:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <strnlen_P>
 594:	4c 01       	movw	r8, r24
 596:	f3 2d       	mov	r31, r3
 598:	f0 68       	ori	r31, 0x80	; 128
 59a:	3f 2e       	mov	r3, r31
 59c:	82 01       	movw	r16, r4
 59e:	33 fc       	sbrc	r3, 3
 5a0:	1b c0       	rjmp	.+54     	; 0x5d8 <vfprintf+0x1c2>
 5a2:	82 2d       	mov	r24, r2
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	88 16       	cp	r8, r24
 5a8:	99 06       	cpc	r9, r25
 5aa:	b0 f4       	brcc	.+44     	; 0x5d8 <vfprintf+0x1c2>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e2       	ldi	r24, 0x20	; 32
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 5b6:	2a 94       	dec	r2
 5b8:	f4 cf       	rjmp	.-24     	; 0x5a2 <vfprintf+0x18c>
 5ba:	f5 01       	movw	r30, r10
 5bc:	37 fc       	sbrc	r3, 7
 5be:	85 91       	lpm	r24, Z+
 5c0:	37 fe       	sbrs	r3, 7
 5c2:	81 91       	ld	r24, Z+
 5c4:	5f 01       	movw	r10, r30
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 5ce:	21 10       	cpse	r2, r1
 5d0:	2a 94       	dec	r2
 5d2:	21 e0       	ldi	r18, 0x01	; 1
 5d4:	82 1a       	sub	r8, r18
 5d6:	91 08       	sbc	r9, r1
 5d8:	81 14       	cp	r8, r1
 5da:	91 04       	cpc	r9, r1
 5dc:	71 f7       	brne	.-36     	; 0x5ba <vfprintf+0x1a4>
 5de:	e8 c0       	rjmp	.+464    	; 0x7b0 <vfprintf+0x39a>
 5e0:	84 36       	cpi	r24, 0x64	; 100
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <vfprintf+0x1d2>
 5e4:	89 36       	cpi	r24, 0x69	; 105
 5e6:	41 f5       	brne	.+80     	; 0x638 <vfprintf+0x222>
 5e8:	f8 01       	movw	r30, r16
 5ea:	37 fe       	sbrs	r3, 7
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <vfprintf+0x1e6>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	82 81       	ldd	r24, Z+2	; 0x02
 5f4:	93 81       	ldd	r25, Z+3	; 0x03
 5f6:	0c 5f       	subi	r16, 0xFC	; 252
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	08 c0       	rjmp	.+16     	; 0x60c <vfprintf+0x1f6>
 5fc:	60 81       	ld	r22, Z
 5fe:	71 81       	ldd	r23, Z+1	; 0x01
 600:	07 2e       	mov	r0, r23
 602:	00 0c       	add	r0, r0
 604:	88 0b       	sbc	r24, r24
 606:	99 0b       	sbc	r25, r25
 608:	0e 5f       	subi	r16, 0xFE	; 254
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	f3 2d       	mov	r31, r3
 60e:	ff 76       	andi	r31, 0x6F	; 111
 610:	3f 2e       	mov	r3, r31
 612:	97 ff       	sbrs	r25, 7
 614:	09 c0       	rjmp	.+18     	; 0x628 <vfprintf+0x212>
 616:	90 95       	com	r25
 618:	80 95       	com	r24
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	f0 68       	ori	r31, 0x80	; 128
 626:	3f 2e       	mov	r3, r31
 628:	2a e0       	ldi	r18, 0x0A	; 10
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	a3 01       	movw	r20, r6
 62e:	0e 94 3e 04 	call	0x87c	; 0x87c <__ultoa_invert>
 632:	88 2e       	mov	r8, r24
 634:	86 18       	sub	r8, r6
 636:	45 c0       	rjmp	.+138    	; 0x6c2 <vfprintf+0x2ac>
 638:	85 37       	cpi	r24, 0x75	; 117
 63a:	31 f4       	brne	.+12     	; 0x648 <vfprintf+0x232>
 63c:	23 2d       	mov	r18, r3
 63e:	2f 7e       	andi	r18, 0xEF	; 239
 640:	b2 2e       	mov	r11, r18
 642:	2a e0       	ldi	r18, 0x0A	; 10
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	25 c0       	rjmp	.+74     	; 0x692 <vfprintf+0x27c>
 648:	93 2d       	mov	r25, r3
 64a:	99 7f       	andi	r25, 0xF9	; 249
 64c:	b9 2e       	mov	r11, r25
 64e:	8f 36       	cpi	r24, 0x6F	; 111
 650:	c1 f0       	breq	.+48     	; 0x682 <vfprintf+0x26c>
 652:	18 f4       	brcc	.+6      	; 0x65a <vfprintf+0x244>
 654:	88 35       	cpi	r24, 0x58	; 88
 656:	79 f0       	breq	.+30     	; 0x676 <vfprintf+0x260>
 658:	b5 c0       	rjmp	.+362    	; 0x7c4 <vfprintf+0x3ae>
 65a:	80 37       	cpi	r24, 0x70	; 112
 65c:	19 f0       	breq	.+6      	; 0x664 <vfprintf+0x24e>
 65e:	88 37       	cpi	r24, 0x78	; 120
 660:	21 f0       	breq	.+8      	; 0x66a <vfprintf+0x254>
 662:	b0 c0       	rjmp	.+352    	; 0x7c4 <vfprintf+0x3ae>
 664:	e9 2f       	mov	r30, r25
 666:	e0 61       	ori	r30, 0x10	; 16
 668:	be 2e       	mov	r11, r30
 66a:	b4 fe       	sbrs	r11, 4
 66c:	0d c0       	rjmp	.+26     	; 0x688 <vfprintf+0x272>
 66e:	fb 2d       	mov	r31, r11
 670:	f4 60       	ori	r31, 0x04	; 4
 672:	bf 2e       	mov	r11, r31
 674:	09 c0       	rjmp	.+18     	; 0x688 <vfprintf+0x272>
 676:	34 fe       	sbrs	r3, 4
 678:	0a c0       	rjmp	.+20     	; 0x68e <vfprintf+0x278>
 67a:	29 2f       	mov	r18, r25
 67c:	26 60       	ori	r18, 0x06	; 6
 67e:	b2 2e       	mov	r11, r18
 680:	06 c0       	rjmp	.+12     	; 0x68e <vfprintf+0x278>
 682:	28 e0       	ldi	r18, 0x08	; 8
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	05 c0       	rjmp	.+10     	; 0x692 <vfprintf+0x27c>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x27c>
 68e:	20 e1       	ldi	r18, 0x10	; 16
 690:	32 e0       	ldi	r19, 0x02	; 2
 692:	f8 01       	movw	r30, r16
 694:	b7 fe       	sbrs	r11, 7
 696:	07 c0       	rjmp	.+14     	; 0x6a6 <vfprintf+0x290>
 698:	60 81       	ld	r22, Z
 69a:	71 81       	ldd	r23, Z+1	; 0x01
 69c:	82 81       	ldd	r24, Z+2	; 0x02
 69e:	93 81       	ldd	r25, Z+3	; 0x03
 6a0:	0c 5f       	subi	r16, 0xFC	; 252
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <vfprintf+0x29c>
 6a6:	60 81       	ld	r22, Z
 6a8:	71 81       	ldd	r23, Z+1	; 0x01
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 5f       	subi	r16, 0xFE	; 254
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	a3 01       	movw	r20, r6
 6b4:	0e 94 3e 04 	call	0x87c	; 0x87c <__ultoa_invert>
 6b8:	88 2e       	mov	r8, r24
 6ba:	86 18       	sub	r8, r6
 6bc:	fb 2d       	mov	r31, r11
 6be:	ff 77       	andi	r31, 0x7F	; 127
 6c0:	3f 2e       	mov	r3, r31
 6c2:	36 fe       	sbrs	r3, 6
 6c4:	0d c0       	rjmp	.+26     	; 0x6e0 <vfprintf+0x2ca>
 6c6:	23 2d       	mov	r18, r3
 6c8:	2e 7f       	andi	r18, 0xFE	; 254
 6ca:	a2 2e       	mov	r10, r18
 6cc:	89 14       	cp	r8, r9
 6ce:	58 f4       	brcc	.+22     	; 0x6e6 <vfprintf+0x2d0>
 6d0:	34 fe       	sbrs	r3, 4
 6d2:	0b c0       	rjmp	.+22     	; 0x6ea <vfprintf+0x2d4>
 6d4:	32 fc       	sbrc	r3, 2
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <vfprintf+0x2d4>
 6d8:	83 2d       	mov	r24, r3
 6da:	8e 7e       	andi	r24, 0xEE	; 238
 6dc:	a8 2e       	mov	r10, r24
 6de:	05 c0       	rjmp	.+10     	; 0x6ea <vfprintf+0x2d4>
 6e0:	b8 2c       	mov	r11, r8
 6e2:	a3 2c       	mov	r10, r3
 6e4:	03 c0       	rjmp	.+6      	; 0x6ec <vfprintf+0x2d6>
 6e6:	b8 2c       	mov	r11, r8
 6e8:	01 c0       	rjmp	.+2      	; 0x6ec <vfprintf+0x2d6>
 6ea:	b9 2c       	mov	r11, r9
 6ec:	a4 fe       	sbrs	r10, 4
 6ee:	0f c0       	rjmp	.+30     	; 0x70e <vfprintf+0x2f8>
 6f0:	fe 01       	movw	r30, r28
 6f2:	e8 0d       	add	r30, r8
 6f4:	f1 1d       	adc	r31, r1
 6f6:	80 81       	ld	r24, Z
 6f8:	80 33       	cpi	r24, 0x30	; 48
 6fa:	21 f4       	brne	.+8      	; 0x704 <vfprintf+0x2ee>
 6fc:	9a 2d       	mov	r25, r10
 6fe:	99 7e       	andi	r25, 0xE9	; 233
 700:	a9 2e       	mov	r10, r25
 702:	09 c0       	rjmp	.+18     	; 0x716 <vfprintf+0x300>
 704:	a2 fe       	sbrs	r10, 2
 706:	06 c0       	rjmp	.+12     	; 0x714 <vfprintf+0x2fe>
 708:	b3 94       	inc	r11
 70a:	b3 94       	inc	r11
 70c:	04 c0       	rjmp	.+8      	; 0x716 <vfprintf+0x300>
 70e:	8a 2d       	mov	r24, r10
 710:	86 78       	andi	r24, 0x86	; 134
 712:	09 f0       	breq	.+2      	; 0x716 <vfprintf+0x300>
 714:	b3 94       	inc	r11
 716:	a3 fc       	sbrc	r10, 3
 718:	11 c0       	rjmp	.+34     	; 0x73c <vfprintf+0x326>
 71a:	a0 fe       	sbrs	r10, 0
 71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x314>
 71e:	b2 14       	cp	r11, r2
 720:	88 f4       	brcc	.+34     	; 0x744 <vfprintf+0x32e>
 722:	28 0c       	add	r2, r8
 724:	92 2c       	mov	r9, r2
 726:	9b 18       	sub	r9, r11
 728:	0e c0       	rjmp	.+28     	; 0x746 <vfprintf+0x330>
 72a:	b2 14       	cp	r11, r2
 72c:	60 f4       	brcc	.+24     	; 0x746 <vfprintf+0x330>
 72e:	b6 01       	movw	r22, r12
 730:	80 e2       	ldi	r24, 0x20	; 32
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 738:	b3 94       	inc	r11
 73a:	f7 cf       	rjmp	.-18     	; 0x72a <vfprintf+0x314>
 73c:	b2 14       	cp	r11, r2
 73e:	18 f4       	brcc	.+6      	; 0x746 <vfprintf+0x330>
 740:	2b 18       	sub	r2, r11
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x332>
 744:	98 2c       	mov	r9, r8
 746:	21 2c       	mov	r2, r1
 748:	a4 fe       	sbrs	r10, 4
 74a:	10 c0       	rjmp	.+32     	; 0x76c <vfprintf+0x356>
 74c:	b6 01       	movw	r22, r12
 74e:	80 e3       	ldi	r24, 0x30	; 48
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 756:	a2 fe       	sbrs	r10, 2
 758:	17 c0       	rjmp	.+46     	; 0x788 <vfprintf+0x372>
 75a:	a1 fc       	sbrc	r10, 1
 75c:	03 c0       	rjmp	.+6      	; 0x764 <vfprintf+0x34e>
 75e:	88 e7       	ldi	r24, 0x78	; 120
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	02 c0       	rjmp	.+4      	; 0x768 <vfprintf+0x352>
 764:	88 e5       	ldi	r24, 0x58	; 88
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	b6 01       	movw	r22, r12
 76a:	0c c0       	rjmp	.+24     	; 0x784 <vfprintf+0x36e>
 76c:	8a 2d       	mov	r24, r10
 76e:	86 78       	andi	r24, 0x86	; 134
 770:	59 f0       	breq	.+22     	; 0x788 <vfprintf+0x372>
 772:	a1 fe       	sbrs	r10, 1
 774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x364>
 776:	8b e2       	ldi	r24, 0x2B	; 43
 778:	01 c0       	rjmp	.+2      	; 0x77c <vfprintf+0x366>
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	a7 fc       	sbrc	r10, 7
 77e:	8d e2       	ldi	r24, 0x2D	; 45
 780:	b6 01       	movw	r22, r12
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 788:	89 14       	cp	r8, r9
 78a:	38 f4       	brcc	.+14     	; 0x79a <vfprintf+0x384>
 78c:	b6 01       	movw	r22, r12
 78e:	80 e3       	ldi	r24, 0x30	; 48
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 796:	9a 94       	dec	r9
 798:	f7 cf       	rjmp	.-18     	; 0x788 <vfprintf+0x372>
 79a:	8a 94       	dec	r8
 79c:	f3 01       	movw	r30, r6
 79e:	e8 0d       	add	r30, r8
 7a0:	f1 1d       	adc	r31, r1
 7a2:	80 81       	ld	r24, Z
 7a4:	b6 01       	movw	r22, r12
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 7ac:	81 10       	cpse	r8, r1
 7ae:	f5 cf       	rjmp	.-22     	; 0x79a <vfprintf+0x384>
 7b0:	22 20       	and	r2, r2
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <vfprintf+0x3a0>
 7b4:	42 ce       	rjmp	.-892    	; 0x43a <vfprintf+0x24>
 7b6:	b6 01       	movw	r22, r12
 7b8:	80 e2       	ldi	r24, 0x20	; 32
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 02 04 	call	0x804	; 0x804 <fputc>
 7c0:	2a 94       	dec	r2
 7c2:	f6 cf       	rjmp	.-20     	; 0x7b0 <vfprintf+0x39a>
 7c4:	f6 01       	movw	r30, r12
 7c6:	86 81       	ldd	r24, Z+6	; 0x06
 7c8:	97 81       	ldd	r25, Z+7	; 0x07
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <vfprintf+0x3ba>
 7cc:	8f ef       	ldi	r24, 0xFF	; 255
 7ce:	9f ef       	ldi	r25, 0xFF	; 255
 7d0:	2b 96       	adiw	r28, 0x0b	; 11
 7d2:	e2 e1       	ldi	r30, 0x12	; 18
 7d4:	0c 94 b8 04 	jmp	0x970	; 0x970 <__epilogue_restores__>

000007d8 <strnlen_P>:
 7d8:	fc 01       	movw	r30, r24
 7da:	05 90       	lpm	r0, Z+
 7dc:	61 50       	subi	r22, 0x01	; 1
 7de:	70 40       	sbci	r23, 0x00	; 0
 7e0:	01 10       	cpse	r0, r1
 7e2:	d8 f7       	brcc	.-10     	; 0x7da <strnlen_P+0x2>
 7e4:	80 95       	com	r24
 7e6:	90 95       	com	r25
 7e8:	8e 0f       	add	r24, r30
 7ea:	9f 1f       	adc	r25, r31
 7ec:	08 95       	ret

000007ee <strnlen>:
 7ee:	fc 01       	movw	r30, r24
 7f0:	61 50       	subi	r22, 0x01	; 1
 7f2:	70 40       	sbci	r23, 0x00	; 0
 7f4:	01 90       	ld	r0, Z+
 7f6:	01 10       	cpse	r0, r1
 7f8:	d8 f7       	brcc	.-10     	; 0x7f0 <strnlen+0x2>
 7fa:	80 95       	com	r24
 7fc:	90 95       	com	r25
 7fe:	8e 0f       	add	r24, r30
 800:	9f 1f       	adc	r25, r31
 802:	08 95       	ret

00000804 <fputc>:
 804:	0f 93       	push	r16
 806:	1f 93       	push	r17
 808:	cf 93       	push	r28
 80a:	df 93       	push	r29
 80c:	fb 01       	movw	r30, r22
 80e:	23 81       	ldd	r18, Z+3	; 0x03
 810:	21 fd       	sbrc	r18, 1
 812:	03 c0       	rjmp	.+6      	; 0x81a <fputc+0x16>
 814:	8f ef       	ldi	r24, 0xFF	; 255
 816:	9f ef       	ldi	r25, 0xFF	; 255
 818:	2c c0       	rjmp	.+88     	; 0x872 <fputc+0x6e>
 81a:	22 ff       	sbrs	r18, 2
 81c:	16 c0       	rjmp	.+44     	; 0x84a <fputc+0x46>
 81e:	46 81       	ldd	r20, Z+6	; 0x06
 820:	57 81       	ldd	r21, Z+7	; 0x07
 822:	24 81       	ldd	r18, Z+4	; 0x04
 824:	35 81       	ldd	r19, Z+5	; 0x05
 826:	42 17       	cp	r20, r18
 828:	53 07       	cpc	r21, r19
 82a:	44 f4       	brge	.+16     	; 0x83c <fputc+0x38>
 82c:	a0 81       	ld	r26, Z
 82e:	b1 81       	ldd	r27, Z+1	; 0x01
 830:	9d 01       	movw	r18, r26
 832:	2f 5f       	subi	r18, 0xFF	; 255
 834:	3f 4f       	sbci	r19, 0xFF	; 255
 836:	31 83       	std	Z+1, r19	; 0x01
 838:	20 83       	st	Z, r18
 83a:	8c 93       	st	X, r24
 83c:	26 81       	ldd	r18, Z+6	; 0x06
 83e:	37 81       	ldd	r19, Z+7	; 0x07
 840:	2f 5f       	subi	r18, 0xFF	; 255
 842:	3f 4f       	sbci	r19, 0xFF	; 255
 844:	37 83       	std	Z+7, r19	; 0x07
 846:	26 83       	std	Z+6, r18	; 0x06
 848:	14 c0       	rjmp	.+40     	; 0x872 <fputc+0x6e>
 84a:	8b 01       	movw	r16, r22
 84c:	ec 01       	movw	r28, r24
 84e:	fb 01       	movw	r30, r22
 850:	00 84       	ldd	r0, Z+8	; 0x08
 852:	f1 85       	ldd	r31, Z+9	; 0x09
 854:	e0 2d       	mov	r30, r0
 856:	09 95       	icall
 858:	89 2b       	or	r24, r25
 85a:	e1 f6       	brne	.-72     	; 0x814 <fputc+0x10>
 85c:	d8 01       	movw	r26, r16
 85e:	16 96       	adiw	r26, 0x06	; 6
 860:	8d 91       	ld	r24, X+
 862:	9c 91       	ld	r25, X
 864:	17 97       	sbiw	r26, 0x07	; 7
 866:	01 96       	adiw	r24, 0x01	; 1
 868:	17 96       	adiw	r26, 0x07	; 7
 86a:	9c 93       	st	X, r25
 86c:	8e 93       	st	-X, r24
 86e:	16 97       	sbiw	r26, 0x06	; 6
 870:	ce 01       	movw	r24, r28
 872:	df 91       	pop	r29
 874:	cf 91       	pop	r28
 876:	1f 91       	pop	r17
 878:	0f 91       	pop	r16
 87a:	08 95       	ret

0000087c <__ultoa_invert>:
 87c:	fa 01       	movw	r30, r20
 87e:	aa 27       	eor	r26, r26
 880:	28 30       	cpi	r18, 0x08	; 8
 882:	51 f1       	breq	.+84     	; 0x8d8 <__ultoa_invert+0x5c>
 884:	20 31       	cpi	r18, 0x10	; 16
 886:	81 f1       	breq	.+96     	; 0x8e8 <__ultoa_invert+0x6c>
 888:	e8 94       	clt
 88a:	6f 93       	push	r22
 88c:	6e 7f       	andi	r22, 0xFE	; 254
 88e:	6e 5f       	subi	r22, 0xFE	; 254
 890:	7f 4f       	sbci	r23, 0xFF	; 255
 892:	8f 4f       	sbci	r24, 0xFF	; 255
 894:	9f 4f       	sbci	r25, 0xFF	; 255
 896:	af 4f       	sbci	r26, 0xFF	; 255
 898:	b1 e0       	ldi	r27, 0x01	; 1
 89a:	3e d0       	rcall	.+124    	; 0x918 <__stack+0x19>
 89c:	b4 e0       	ldi	r27, 0x04	; 4
 89e:	3c d0       	rcall	.+120    	; 0x918 <__stack+0x19>
 8a0:	67 0f       	add	r22, r23
 8a2:	78 1f       	adc	r23, r24
 8a4:	89 1f       	adc	r24, r25
 8a6:	9a 1f       	adc	r25, r26
 8a8:	a1 1d       	adc	r26, r1
 8aa:	68 0f       	add	r22, r24
 8ac:	79 1f       	adc	r23, r25
 8ae:	8a 1f       	adc	r24, r26
 8b0:	91 1d       	adc	r25, r1
 8b2:	a1 1d       	adc	r26, r1
 8b4:	6a 0f       	add	r22, r26
 8b6:	71 1d       	adc	r23, r1
 8b8:	81 1d       	adc	r24, r1
 8ba:	91 1d       	adc	r25, r1
 8bc:	a1 1d       	adc	r26, r1
 8be:	20 d0       	rcall	.+64     	; 0x900 <__stack+0x1>
 8c0:	09 f4       	brne	.+2      	; 0x8c4 <__ultoa_invert+0x48>
 8c2:	68 94       	set
 8c4:	3f 91       	pop	r19
 8c6:	2a e0       	ldi	r18, 0x0A	; 10
 8c8:	26 9f       	mul	r18, r22
 8ca:	11 24       	eor	r1, r1
 8cc:	30 19       	sub	r19, r0
 8ce:	30 5d       	subi	r19, 0xD0	; 208
 8d0:	31 93       	st	Z+, r19
 8d2:	de f6       	brtc	.-74     	; 0x88a <__ultoa_invert+0xe>
 8d4:	cf 01       	movw	r24, r30
 8d6:	08 95       	ret
 8d8:	46 2f       	mov	r20, r22
 8da:	47 70       	andi	r20, 0x07	; 7
 8dc:	40 5d       	subi	r20, 0xD0	; 208
 8de:	41 93       	st	Z+, r20
 8e0:	b3 e0       	ldi	r27, 0x03	; 3
 8e2:	0f d0       	rcall	.+30     	; 0x902 <__stack+0x3>
 8e4:	c9 f7       	brne	.-14     	; 0x8d8 <__ultoa_invert+0x5c>
 8e6:	f6 cf       	rjmp	.-20     	; 0x8d4 <__ultoa_invert+0x58>
 8e8:	46 2f       	mov	r20, r22
 8ea:	4f 70       	andi	r20, 0x0F	; 15
 8ec:	40 5d       	subi	r20, 0xD0	; 208
 8ee:	4a 33       	cpi	r20, 0x3A	; 58
 8f0:	18 f0       	brcs	.+6      	; 0x8f8 <__ultoa_invert+0x7c>
 8f2:	49 5d       	subi	r20, 0xD9	; 217
 8f4:	31 fd       	sbrc	r19, 1
 8f6:	40 52       	subi	r20, 0x20	; 32
 8f8:	41 93       	st	Z+, r20
 8fa:	02 d0       	rcall	.+4      	; 0x900 <__stack+0x1>
 8fc:	a9 f7       	brne	.-22     	; 0x8e8 <__ultoa_invert+0x6c>
 8fe:	ea cf       	rjmp	.-44     	; 0x8d4 <__ultoa_invert+0x58>
 900:	b4 e0       	ldi	r27, 0x04	; 4
 902:	a6 95       	lsr	r26
 904:	97 95       	ror	r25
 906:	87 95       	ror	r24
 908:	77 95       	ror	r23
 90a:	67 95       	ror	r22
 90c:	ba 95       	dec	r27
 90e:	c9 f7       	brne	.-14     	; 0x902 <__stack+0x3>
 910:	00 97       	sbiw	r24, 0x00	; 0
 912:	61 05       	cpc	r22, r1
 914:	71 05       	cpc	r23, r1
 916:	08 95       	ret
 918:	9b 01       	movw	r18, r22
 91a:	ac 01       	movw	r20, r24
 91c:	0a 2e       	mov	r0, r26
 91e:	06 94       	lsr	r0
 920:	57 95       	ror	r21
 922:	47 95       	ror	r20
 924:	37 95       	ror	r19
 926:	27 95       	ror	r18
 928:	ba 95       	dec	r27
 92a:	c9 f7       	brne	.-14     	; 0x91e <__stack+0x1f>
 92c:	62 0f       	add	r22, r18
 92e:	73 1f       	adc	r23, r19
 930:	84 1f       	adc	r24, r20
 932:	95 1f       	adc	r25, r21
 934:	a0 1d       	adc	r26, r0
 936:	08 95       	ret

00000938 <__prologue_saves__>:
 938:	2f 92       	push	r2
 93a:	3f 92       	push	r3
 93c:	4f 92       	push	r4
 93e:	5f 92       	push	r5
 940:	6f 92       	push	r6
 942:	7f 92       	push	r7
 944:	8f 92       	push	r8
 946:	9f 92       	push	r9
 948:	af 92       	push	r10
 94a:	bf 92       	push	r11
 94c:	cf 92       	push	r12
 94e:	df 92       	push	r13
 950:	ef 92       	push	r14
 952:	ff 92       	push	r15
 954:	0f 93       	push	r16
 956:	1f 93       	push	r17
 958:	cf 93       	push	r28
 95a:	df 93       	push	r29
 95c:	cd b7       	in	r28, 0x3d	; 61
 95e:	de b7       	in	r29, 0x3e	; 62
 960:	ca 1b       	sub	r28, r26
 962:	db 0b       	sbc	r29, r27
 964:	0f b6       	in	r0, 0x3f	; 63
 966:	f8 94       	cli
 968:	de bf       	out	0x3e, r29	; 62
 96a:	0f be       	out	0x3f, r0	; 63
 96c:	cd bf       	out	0x3d, r28	; 61
 96e:	09 94       	ijmp

00000970 <__epilogue_restores__>:
 970:	2a 88       	ldd	r2, Y+18	; 0x12
 972:	39 88       	ldd	r3, Y+17	; 0x11
 974:	48 88       	ldd	r4, Y+16	; 0x10
 976:	5f 84       	ldd	r5, Y+15	; 0x0f
 978:	6e 84       	ldd	r6, Y+14	; 0x0e
 97a:	7d 84       	ldd	r7, Y+13	; 0x0d
 97c:	8c 84       	ldd	r8, Y+12	; 0x0c
 97e:	9b 84       	ldd	r9, Y+11	; 0x0b
 980:	aa 84       	ldd	r10, Y+10	; 0x0a
 982:	b9 84       	ldd	r11, Y+9	; 0x09
 984:	c8 84       	ldd	r12, Y+8	; 0x08
 986:	df 80       	ldd	r13, Y+7	; 0x07
 988:	ee 80       	ldd	r14, Y+6	; 0x06
 98a:	fd 80       	ldd	r15, Y+5	; 0x05
 98c:	0c 81       	ldd	r16, Y+4	; 0x04
 98e:	1b 81       	ldd	r17, Y+3	; 0x03
 990:	aa 81       	ldd	r26, Y+2	; 0x02
 992:	b9 81       	ldd	r27, Y+1	; 0x01
 994:	ce 0f       	add	r28, r30
 996:	d1 1d       	adc	r29, r1
 998:	0f b6       	in	r0, 0x3f	; 63
 99a:	f8 94       	cli
 99c:	de bf       	out	0x3e, r29	; 62
 99e:	0f be       	out	0x3f, r0	; 63
 9a0:	cd bf       	out	0x3d, r28	; 61
 9a2:	ed 01       	movw	r28, r26
 9a4:	08 95       	ret

000009a6 <_exit>:
 9a6:	f8 94       	cli

000009a8 <__stop_program>:
 9a8:	ff cf       	rjmp	.-2      	; 0x9a8 <__stop_program>
