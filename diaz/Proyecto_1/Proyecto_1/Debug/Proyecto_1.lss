
Proyecto_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  000016fe  00001792  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800156  00800156  000017e8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001844  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fa9  00000000  00000000  000018fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007cc  00000000  00000000  000028a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007dc  00000000  00000000  00003071  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  00003850  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000478  00000000  00000000  00003a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a6d  00000000  00000000  00003e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00004901  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_4>
      14:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_5>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      68:	fa 01       	movw	r30, r20
      6a:	01 02       	muls	r16, r17
      6c:	79 01       	movw	r14, r18
      6e:	85 01       	movw	r16, r10
      70:	92 01       	movw	r18, r4
      72:	9f 01       	movw	r18, r30
      74:	ac 01       	movw	r20, r24
      76:	b9 01       	movw	r22, r18
      78:	c6 01       	movw	r24, r12
      7a:	d3 01       	movw	r26, r6
      7c:	e0 01       	movw	r28, r0
      7e:	ed 01       	movw	r28, r26

00000080 <__ctors_end>:
      80:	11 24       	eor	r1, r1
      82:	1f be       	out	0x3f, r1	; 63
      84:	cf ef       	ldi	r28, 0xFF	; 255
      86:	d8 e0       	ldi	r29, 0x08	; 8
      88:	de bf       	out	0x3e, r29	; 62
      8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
      8c:	11 e0       	ldi	r17, 0x01	; 1
      8e:	a0 e0       	ldi	r26, 0x00	; 0
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	ee ef       	ldi	r30, 0xFE	; 254
      94:	f6 e1       	ldi	r31, 0x16	; 22
      96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
      98:	05 90       	lpm	r0, Z+
      9a:	0d 92       	st	X+, r0
      9c:	a6 35       	cpi	r26, 0x56	; 86
      9e:	b1 07       	cpc	r27, r17
      a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>

000000a2 <__do_clear_bss>:
      a2:	21 e0       	ldi	r18, 0x01	; 1
      a4:	a6 e5       	ldi	r26, 0x56	; 86
      a6:	b1 e0       	ldi	r27, 0x01	; 1
      a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
      aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
      ac:	a8 36       	cpi	r26, 0x68	; 104
      ae:	b2 07       	cpc	r27, r18
      b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
      b2:	0e 94 bb 06 	call	0xd76	; 0xd76 <main>
      b6:	0c 94 7d 0b 	jmp	0x16fa	; 0x16fa <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <USART_Transmit_char>:
	USART_Transmit_String("calcular N1 y N2 con");
	USART_Transmit_char(op);
	USART_Transmit_char('\n');
	//N1 = resultado
	//N2 = 0
}
      be:	e0 ec       	ldi	r30, 0xC0	; 192
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	90 81       	ld	r25, Z
      c4:	95 ff       	sbrs	r25, 5
      c6:	fd cf       	rjmp	.-6      	; 0xc2 <USART_Transmit_char+0x4>
      c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      cc:	08 95       	ret

000000ce <USART_Transmit_String>:
      ce:	cf 93       	push	r28
      d0:	df 93       	push	r29
      d2:	ec 01       	movw	r28, r24
      d4:	88 81       	ld	r24, Y
      d6:	88 23       	and	r24, r24
      d8:	31 f0       	breq	.+12     	; 0xe6 <USART_Transmit_String+0x18>
      da:	21 96       	adiw	r28, 0x01	; 1
      dc:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
      e0:	89 91       	ld	r24, Y+
      e2:	81 11       	cpse	r24, r1
      e4:	fb cf       	rjmp	.-10     	; 0xdc <USART_Transmit_String+0xe>
      e6:	df 91       	pop	r29
      e8:	cf 91       	pop	r28
      ea:	08 95       	ret

000000ec <USART_Init>:
      ec:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      f4:	88 e1       	ldi	r24, 0x18	; 24
      f6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
      fa:	86 e0       	ldi	r24, 0x06	; 6
      fc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     100:	08 95       	ret

00000102 <USART_Receive>:
     102:	e0 ec       	ldi	r30, 0xC0	; 192
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	80 81       	ld	r24, Z
     108:	88 23       	and	r24, r24
     10a:	ec f7       	brge	.-6      	; 0x106 <USART_Receive+0x4>
     10c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     110:	08 95       	ret

00000112 <teclado>:
     112:	ff 92       	push	r15
     114:	0f 93       	push	r16
     116:	1f 93       	push	r17
     118:	cf 93       	push	r28
     11a:	df 93       	push	r29
     11c:	cd b7       	in	r28, 0x3d	; 61
     11e:	de b7       	in	r29, 0x3e	; 62
     120:	a1 97       	sbiw	r28, 0x21	; 33
     122:	0f b6       	in	r0, 0x3f	; 63
     124:	f8 94       	cli
     126:	de bf       	out	0x3e, r29	; 62
     128:	0f be       	out	0x3f, r0	; 63
     12a:	cd bf       	out	0x3d, r28	; 61
     12c:	8f e1       	ldi	r24, 0x1F	; 31
     12e:	e1 e0       	ldi	r30, 0x01	; 1
     130:	f1 e0       	ldi	r31, 0x01	; 1
     132:	de 01       	movw	r26, r28
     134:	11 96       	adiw	r26, 0x01	; 1
     136:	01 90       	ld	r0, Z+
     138:	0d 92       	st	X+, r0
     13a:	8a 95       	dec	r24
     13c:	e1 f7       	brne	.-8      	; 0x136 <teclado+0x24>
     13e:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <presionado>
     142:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <presionado+0x1>
     146:	e1 e0       	ldi	r30, 0x01	; 1
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	ec 0f       	add	r30, r28
     14c:	fd 1f       	adc	r31, r29
     14e:	e8 0f       	add	r30, r24
     150:	f9 1f       	adc	r31, r25
     152:	f0 80       	ld	r15, Z
     154:	9f 93       	push	r25
     156:	8f 93       	push	r24
     158:	82 e2       	ldi	r24, 0x22	; 34
     15a:	91 e0       	ldi	r25, 0x01	; 1
     15c:	9f 93       	push	r25
     15e:	8f 93       	push	r24
     160:	8e 01       	movw	r16, r28
     162:	00 5e       	subi	r16, 0xE0	; 224
     164:	1f 4f       	sbci	r17, 0xFF	; 255
     166:	1f 93       	push	r17
     168:	0f 93       	push	r16
     16a:	0e 94 93 08 	call	0x1126	; 0x1126 <sprintf>
     16e:	c8 01       	movw	r24, r16
     170:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
     174:	85 e2       	ldi	r24, 0x25	; 37
     176:	91 e0       	ldi	r25, 0x01	; 1
     178:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
     17c:	8f 2d       	mov	r24, r15
     17e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     182:	8a e0       	ldi	r24, 0x0A	; 10
     184:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     188:	0f 90       	pop	r0
     18a:	0f 90       	pop	r0
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	0f 90       	pop	r0
     192:	0f 90       	pop	r0
     194:	a1 96       	adiw	r28, 0x21	; 33
     196:	0f b6       	in	r0, 0x3f	; 63
     198:	f8 94       	cli
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	0f be       	out	0x3f, r0	; 63
     19e:	cd bf       	out	0x3d, r28	; 61
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	0f 91       	pop	r16
     1a8:	ff 90       	pop	r15
     1aa:	08 95       	ret

000001ac <__vector_5>:
     1ac:	1f 92       	push	r1
     1ae:	0f 92       	push	r0
     1b0:	0f b6       	in	r0, 0x3f	; 63
     1b2:	0f 92       	push	r0
     1b4:	11 24       	eor	r1, r1
     1b6:	2f 93       	push	r18
     1b8:	3f 93       	push	r19
     1ba:	4f 93       	push	r20
     1bc:	5f 93       	push	r21
     1be:	6f 93       	push	r22
     1c0:	7f 93       	push	r23
     1c2:	8f 93       	push	r24
     1c4:	9f 93       	push	r25
     1c6:	af 93       	push	r26
     1c8:	bf 93       	push	r27
     1ca:	ef 93       	push	r30
     1cc:	ff 93       	push	r31
     1ce:	4c 99       	sbic	0x09, 4	; 9
     1d0:	05 c0       	rjmp	.+10     	; 0x1dc <__vector_5+0x30>
     1d2:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <presionado+0x1>
     1d6:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <presionado>
     1da:	1a c0       	rjmp	.+52     	; 0x210 <__vector_5+0x64>
     1dc:	4d 99       	sbic	0x09, 5	; 9
     1de:	07 c0       	rjmp	.+14     	; 0x1ee <__vector_5+0x42>
     1e0:	81 e0       	ldi	r24, 0x01	; 1
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     1e8:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     1ec:	11 c0       	rjmp	.+34     	; 0x210 <__vector_5+0x64>
     1ee:	4e 99       	sbic	0x09, 6	; 9
     1f0:	07 c0       	rjmp	.+14     	; 0x200 <__vector_5+0x54>
     1f2:	82 e0       	ldi	r24, 0x02	; 2
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     1fa:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     1fe:	08 c0       	rjmp	.+16     	; 0x210 <__vector_5+0x64>
     200:	4f 99       	sbic	0x09, 7	; 9
     202:	06 c0       	rjmp	.+12     	; 0x210 <__vector_5+0x64>
     204:	83 e0       	ldi	r24, 0x03	; 3
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     20c:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     210:	0e 94 89 00 	call	0x112	; 0x112 <teclado>
     214:	ff 91       	pop	r31
     216:	ef 91       	pop	r30
     218:	bf 91       	pop	r27
     21a:	af 91       	pop	r26
     21c:	9f 91       	pop	r25
     21e:	8f 91       	pop	r24
     220:	7f 91       	pop	r23
     222:	6f 91       	pop	r22
     224:	5f 91       	pop	r21
     226:	4f 91       	pop	r20
     228:	3f 91       	pop	r19
     22a:	2f 91       	pop	r18
     22c:	0f 90       	pop	r0
     22e:	0f be       	out	0x3f, r0	; 63
     230:	0f 90       	pop	r0
     232:	1f 90       	pop	r1
     234:	18 95       	reti

00000236 <__vector_4>:
     236:	1f 92       	push	r1
     238:	0f 92       	push	r0
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	0f 92       	push	r0
     23e:	11 24       	eor	r1, r1
     240:	2f 93       	push	r18
     242:	3f 93       	push	r19
     244:	4f 93       	push	r20
     246:	5f 93       	push	r21
     248:	6f 93       	push	r22
     24a:	7f 93       	push	r23
     24c:	8f 93       	push	r24
     24e:	9f 93       	push	r25
     250:	af 93       	push	r26
     252:	bf 93       	push	r27
     254:	ef 93       	push	r30
     256:	ff 93       	push	r31
     258:	32 99       	sbic	0x06, 2	; 6
     25a:	07 c0       	rjmp	.+14     	; 0x26a <__vector_4+0x34>
     25c:	84 e0       	ldi	r24, 0x04	; 4
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     264:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     268:	1a c0       	rjmp	.+52     	; 0x29e <__vector_4+0x68>
     26a:	33 99       	sbic	0x06, 3	; 6
     26c:	07 c0       	rjmp	.+14     	; 0x27c <__vector_4+0x46>
     26e:	85 e0       	ldi	r24, 0x05	; 5
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     276:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     27a:	11 c0       	rjmp	.+34     	; 0x29e <__vector_4+0x68>
     27c:	34 99       	sbic	0x06, 4	; 6
     27e:	07 c0       	rjmp	.+14     	; 0x28e <__vector_4+0x58>
     280:	86 e0       	ldi	r24, 0x06	; 6
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     288:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     28c:	08 c0       	rjmp	.+16     	; 0x29e <__vector_4+0x68>
     28e:	35 99       	sbic	0x06, 5	; 6
     290:	06 c0       	rjmp	.+12     	; 0x29e <__vector_4+0x68>
     292:	87 e0       	ldi	r24, 0x07	; 7
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <presionado+0x1>
     29a:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <presionado>
     29e:	0e 94 89 00 	call	0x112	; 0x112 <teclado>
     2a2:	ff 91       	pop	r31
     2a4:	ef 91       	pop	r30
     2a6:	bf 91       	pop	r27
     2a8:	af 91       	pop	r26
     2aa:	9f 91       	pop	r25
     2ac:	8f 91       	pop	r24
     2ae:	7f 91       	pop	r23
     2b0:	6f 91       	pop	r22
     2b2:	5f 91       	pop	r21
     2b4:	4f 91       	pop	r20
     2b6:	3f 91       	pop	r19
     2b8:	2f 91       	pop	r18
     2ba:	0f 90       	pop	r0
     2bc:	0f be       	out	0x3f, r0	; 63
     2be:	0f 90       	pop	r0
     2c0:	1f 90       	pop	r1
     2c2:	18 95       	reti

000002c4 <actualizarNumero>:
     2c4:	ff 92       	push	r15
     2c6:	0f 93       	push	r16
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	00 d0       	rcall	.+0      	; 0x2d0 <actualizarNumero+0xc>
     2d0:	00 d0       	rcall	.+0      	; 0x2d2 <actualizarNumero+0xe>
     2d2:	00 d0       	rcall	.+0      	; 0x2d4 <actualizarNumero+0x10>
     2d4:	cd b7       	in	r28, 0x3d	; 61
     2d6:	de b7       	in	r29, 0x3e	; 62
     2d8:	f4 2e       	mov	r15, r20
     2da:	04 2f       	mov	r16, r20
     2dc:	10 e0       	ldi	r17, 0x00	; 0
     2de:	f8 01       	movw	r30, r16
     2e0:	be 97       	sbiw	r30, 0x2e	; 46
     2e2:	ec 30       	cpi	r30, 0x0C	; 12
     2e4:	f1 05       	cpc	r31, r1
     2e6:	08 f0       	brcs	.+2      	; 0x2ea <actualizarNumero+0x26>
     2e8:	8c c0       	rjmp	.+280    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     2ea:	ec 5c       	subi	r30, 0xCC	; 204
     2ec:	ff 4f       	sbci	r31, 0xFF	; 255
     2ee:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__tablejump2__>
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	40 e2       	ldi	r20, 0x20	; 32
     2f8:	51 e4       	ldi	r21, 0x41	; 65
     2fa:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	a9 01       	movw	r20, r18
     304:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     308:	7c c0       	rjmp	.+248    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	40 e2       	ldi	r20, 0x20	; 32
     310:	51 e4       	ldi	r21, 0x41	; 65
     312:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	40 e8       	ldi	r20, 0x80	; 128
     31c:	5f e3       	ldi	r21, 0x3F	; 63
     31e:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     322:	6f c0       	rjmp	.+222    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e2       	ldi	r20, 0x20	; 32
     32a:	51 e4       	ldi	r21, 0x41	; 65
     32c:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	50 e4       	ldi	r21, 0x40	; 64
     338:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     33c:	62 c0       	rjmp	.+196    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	40 e2       	ldi	r20, 0x20	; 32
     344:	51 e4       	ldi	r21, 0x41	; 65
     346:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	40 e4       	ldi	r20, 0x40	; 64
     350:	50 e4       	ldi	r21, 0x40	; 64
     352:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     356:	55 c0       	rjmp	.+170    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	40 e2       	ldi	r20, 0x20	; 32
     35e:	51 e4       	ldi	r21, 0x41	; 65
     360:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	40 e8       	ldi	r20, 0x80	; 128
     36a:	50 e4       	ldi	r21, 0x40	; 64
     36c:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     370:	48 c0       	rjmp	.+144    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	40 e2       	ldi	r20, 0x20	; 32
     378:	51 e4       	ldi	r21, 0x41	; 65
     37a:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	40 ea       	ldi	r20, 0xA0	; 160
     384:	50 e4       	ldi	r21, 0x40	; 64
     386:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     38a:	3b c0       	rjmp	.+118    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	40 e2       	ldi	r20, 0x20	; 32
     392:	51 e4       	ldi	r21, 0x41	; 65
     394:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 ec       	ldi	r20, 0xC0	; 192
     39e:	50 e4       	ldi	r21, 0x40	; 64
     3a0:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     3a4:	2e c0       	rjmp	.+92     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e2       	ldi	r20, 0x20	; 32
     3ac:	51 e4       	ldi	r21, 0x41	; 65
     3ae:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	40 ee       	ldi	r20, 0xE0	; 224
     3b8:	50 e4       	ldi	r21, 0x40	; 64
     3ba:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     3be:	21 c0       	rjmp	.+66     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3c0:	20 e0       	ldi	r18, 0x00	; 0
     3c2:	30 e0       	ldi	r19, 0x00	; 0
     3c4:	40 e2       	ldi	r20, 0x20	; 32
     3c6:	51 e4       	ldi	r21, 0x41	; 65
     3c8:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	40 e0       	ldi	r20, 0x00	; 0
     3d2:	51 e4       	ldi	r21, 0x41	; 65
     3d4:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     3d8:	14 c0       	rjmp	.+40     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	40 e2       	ldi	r20, 0x20	; 32
     3e0:	51 e4       	ldi	r21, 0x41	; 65
     3e2:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsf3>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	40 e1       	ldi	r20, 0x10	; 16
     3ec:	51 e4       	ldi	r21, 0x41	; 65
     3ee:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     3f2:	07 c0       	rjmp	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3f4:	21 e0       	ldi	r18, 0x01	; 1
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	30 93 57 01 	sts	0x0157, r19	; 0x800157 <__data_end+0x1>
     3fc:	20 93 56 01 	sts	0x0156, r18	; 0x800156 <__data_end>
     400:	06 c0       	rjmp	.+12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     402:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__data_end>
     406:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__data_end+0x1>
     40a:	23 2b       	or	r18, r19
     40c:	31 f0       	breq	.+12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
     412:	40 e2       	ldi	r20, 0x20	; 32
     414:	51 e4       	ldi	r21, 0x41	; 65
     416:	0e 94 5d 07 	call	0xeba	; 0xeba <__divsf3>
     41a:	9f 93       	push	r25
     41c:	8f 93       	push	r24
     41e:	7f 93       	push	r23
     420:	6f 93       	push	r22
     422:	82 e2       	ldi	r24, 0x22	; 34
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	9f 93       	push	r25
     428:	8f 93       	push	r24
     42a:	8e 01       	movw	r16, r28
     42c:	0f 5f       	subi	r16, 0xFF	; 255
     42e:	1f 4f       	sbci	r17, 0xFF	; 255
     430:	1f 93       	push	r17
     432:	0f 93       	push	r16
     434:	0e 94 93 08 	call	0x1126	; 0x1126 <sprintf>
     438:	c8 01       	movw	r24, r16
     43a:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
     43e:	8f 2d       	mov	r24, r15
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
     446:	8a e0       	ldi	r24, 0x0A	; 10
     448:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     44c:	0f b6       	in	r0, 0x3f	; 63
     44e:	f8 94       	cli
     450:	de bf       	out	0x3e, r29	; 62
     452:	0f be       	out	0x3f, r0	; 63
     454:	cd bf       	out	0x3d, r28	; 61
     456:	26 96       	adiw	r28, 0x06	; 6
     458:	0f b6       	in	r0, 0x3f	; 63
     45a:	f8 94       	cli
     45c:	de bf       	out	0x3e, r29	; 62
     45e:	0f be       	out	0x3f, r0	; 63
     460:	cd bf       	out	0x3d, r28	; 61
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	1f 91       	pop	r17
     468:	0f 91       	pop	r16
     46a:	ff 90       	pop	r15
     46c:	08 95       	ret

0000046e <calcular1>:
     46e:	cf 93       	push	r28
     470:	c4 2f       	mov	r28, r20
     472:	8a e2       	ldi	r24, 0x2A	; 42
     474:	91 e0       	ldi	r25, 0x01	; 1
     476:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
     47a:	8c 2f       	mov	r24, r28
     47c:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     480:	8a e0       	ldi	r24, 0x0A	; 10
     482:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     486:	cf 91       	pop	r28
     488:	08 95       	ret

0000048a <calculadora>:

void calculadora(char entrada)
{
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	c8 2f       	mov	r28, r24
	switch (estado)
     490:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <estado>
     494:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <estado+0x1>
     498:	82 30       	cpi	r24, 0x02	; 2
     49a:	91 05       	cpc	r25, r1
     49c:	09 f4       	brne	.+2      	; 0x4a0 <calculadora+0x16>
     49e:	c6 c1       	rjmp	.+908    	; 0x82c <calculadora+0x3a2>
     4a0:	30 f4       	brcc	.+12     	; 0x4ae <calculadora+0x24>
     4a2:	00 97       	sbiw	r24, 0x00	; 0
     4a4:	61 f0       	breq	.+24     	; 0x4be <calculadora+0x34>
     4a6:	01 97       	sbiw	r24, 0x01	; 1
     4a8:	09 f4       	brne	.+2      	; 0x4ac <calculadora+0x22>
     4aa:	15 c1       	rjmp	.+554    	; 0x6d6 <calculadora+0x24c>
     4ac:	61 c4       	rjmp	.+2242   	; 0xd70 <__stack+0x471>
     4ae:	83 30       	cpi	r24, 0x03	; 3
     4b0:	91 05       	cpc	r25, r1
     4b2:	09 f4       	brne	.+2      	; 0x4b6 <calculadora+0x2c>
     4b4:	26 c3       	rjmp	.+1612   	; 0xb02 <__stack+0x203>
     4b6:	04 97       	sbiw	r24, 0x04	; 4
     4b8:	09 f4       	brne	.+2      	; 0x4bc <calculadora+0x32>
     4ba:	36 c4       	rjmp	.+2156   	; 0xd28 <__stack+0x429>
     4bc:	59 c4       	rjmp	.+2226   	; 0xd70 <__stack+0x471>
	{
		case 0: //estado 0
		if((entrada == '0')||
     4be:	80 ed       	ldi	r24, 0xD0	; 208
     4c0:	8c 0f       	add	r24, r28
     4c2:	8a 30       	cpi	r24, 0x0A	; 10
     4c4:	10 f0       	brcs	.+4      	; 0x4ca <calculadora+0x40>
		   (entrada == '4')||
		   (entrada == '5')||
		   (entrada == '6')||
		   (entrada == '7')||
		   (entrada == '8')||
		   (entrada == '9')||
     4c6:	ce 32       	cpi	r28, 0x2E	; 46
     4c8:	81 f4       	brne	.+32     	; 0x4ea <calculadora+0x60>
		   (entrada == '.')) { actualizarNumero(N1,entrada); estado = 0;}
     4ca:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <N1>
     4ce:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <N1+0x1>
     4d2:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <N1+0x2>
     4d6:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <N1+0x3>
     4da:	4c 2f       	mov	r20, r28
     4dc:	0e 94 62 01 	call	0x2c4	; 0x2c4 <actualizarNumero>
     4e0:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     4e4:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     4e8:	43 c4       	rjmp	.+2182   	; 0xd70 <__stack+0x471>
		else if ((entrada == '+')||
     4ea:	8c 2f       	mov	r24, r28
     4ec:	8d 7f       	andi	r24, 0xFD	; 253
     4ee:	8d 32       	cpi	r24, 0x2D	; 45
     4f0:	31 f0       	breq	.+12     	; 0x4fe <calculadora+0x74>
				 (entrada == '-')||
     4f2:	86 ed       	ldi	r24, 0xD6	; 214
     4f4:	8c 0f       	add	r24, r28
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	10 f0       	brcs	.+4      	; 0x4fe <calculadora+0x74>
				 (entrada == '*')||
				 (entrada == '/')||
     4fa:	ce 35       	cpi	r28, 0x5E	; 94
     4fc:	61 f4       	brne	.+24     	; 0x516 <calculadora+0x8c>
				 (entrada == '^')) {operador = entrada;	USART_Transmit_char(operador);		estado = 1;}
     4fe:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     502:	8c 2f       	mov	r24, r28
     504:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     508:	81 e0       	ldi	r24, 0x01	; 1
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     510:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     514:	2d c4       	rjmp	.+2138   	; 0xd70 <__stack+0x471>
		else if ((entrada == 'q')||
     516:	c1 37       	cpi	r28, 0x71	; 113
     518:	71 f0       	breq	.+28     	; 0x536 <calculadora+0xac>
     51a:	cc 36       	cpi	r28, 0x6C	; 108
     51c:	61 f0       	breq	.+24     	; 0x536 <calculadora+0xac>
				 (entrada == 'l')||
     51e:	c5 36       	cpi	r28, 0x65	; 101
     520:	51 f0       	breq	.+20     	; 0x536 <calculadora+0xac>
				 (entrada == 'e')||
     522:	8d e8       	ldi	r24, 0x8D	; 141
     524:	8c 0f       	add	r24, r28
     526:	82 30       	cpi	r24, 0x02	; 2
     528:	30 f0       	brcs	.+12     	; 0x536 <calculadora+0xac>
				 (entrada == 's')||
     52a:	8c 2f       	mov	r24, r28
     52c:	8b 7f       	andi	r24, 0xFB	; 251
     52e:	83 36       	cpi	r24, 0x63	; 99
     530:	11 f0       	breq	.+4      	; 0x536 <calculadora+0xac>
				 (entrada == 'c')||
				 (entrada == 't')||
				 (entrada == 'g')||
     532:	c8 37       	cpi	r28, 0x78	; 120
     534:	91 f4       	brne	.+36     	; 0x55a <calculadora+0xd0>
				 (entrada == 'x')) {calcular1(N1,entrada);		estado = 3;}
     536:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <N1>
     53a:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <N1+0x1>
     53e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <N1+0x2>
     542:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <N1+0x3>
     546:	4c 2f       	mov	r20, r28
     548:	0e 94 37 02 	call	0x46e	; 0x46e <calcular1>
     54c:	83 e0       	ldi	r24, 0x03	; 3
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     554:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     558:	0b c4       	rjmp	.+2070   	; 0xd70 <__stack+0x471>
		else{
			switch (entrada){
     55a:	cd 36       	cpi	r28, 0x6D	; 109
     55c:	01 f1       	breq	.+64     	; 0x59e <calculadora+0x114>
     55e:	30 f4       	brcc	.+12     	; 0x56c <calculadora+0xe2>
     560:	c1 36       	cpi	r28, 0x61	; 97
     562:	09 f4       	brne	.+2      	; 0x566 <calculadora+0xdc>
     564:	99 c0       	rjmp	.+306    	; 0x698 <calculadora+0x20e>
     566:	c4 36       	cpi	r28, 0x64	; 100
     568:	c9 f1       	breq	.+114    	; 0x5dc <calculadora+0x152>
     56a:	02 c4       	rjmp	.+2052   	; 0xd70 <__stack+0x471>
     56c:	ce 36       	cpi	r28, 0x6E	; 110
     56e:	09 f4       	brne	.+2      	; 0x572 <calculadora+0xe8>
     570:	64 c0       	rjmp	.+200    	; 0x63a <calculadora+0x1b0>
     572:	c0 37       	cpi	r28, 0x70	; 112
     574:	09 f0       	breq	.+2      	; 0x578 <calculadora+0xee>
     576:	fc c3       	rjmp	.+2040   	; 0xd70 <__stack+0x471>
				case 'p': N1 = pi;						estado = 3; break;
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	a0 e4       	ldi	r26, 0x40	; 64
     57e:	b0 e4       	ldi	r27, 0x40	; 64
     580:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <N1>
     584:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <N1+0x1>
     588:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <N1+0x2>
     58c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <N1+0x3>
     590:	83 e0       	ldi	r24, 0x03	; 3
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     598:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     59c:	e9 c3       	rjmp	.+2002   	; 0xd70 <__stack+0x471>
				case 'm': N1 = M; N2 = 0;				estado = 3; break;
     59e:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <M>
     5a2:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <M+0x1>
     5a6:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <M+0x2>
     5aa:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <M+0x3>
     5ae:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <N1>
     5b2:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <N1+0x1>
     5b6:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <N1+0x2>
     5ba:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <N1+0x3>
     5be:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     5c2:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     5c6:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     5ca:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     5ce:	83 e0       	ldi	r24, 0x03	; 3
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     5d6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     5da:	ca c3       	rjmp	.+1940   	; 0xd70 <__stack+0x471>
				case 'd': M = M + N1; N1 = 0; N2 = 0;	estado = 0; break;
     5dc:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     5e0:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     5e4:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     5e8:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     5ec:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     5f0:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     5f4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     5f8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     5fc:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     600:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     604:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     608:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     60c:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     610:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     614:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     618:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     61c:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     620:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     624:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     628:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     62c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     630:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     634:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     638:	9b c3       	rjmp	.+1846   	; 0xd70 <__stack+0x471>
				case 'n': M = M - N1; N1 = 0; N2 = 0;	estado = 0; break;
     63a:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     63e:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     642:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     646:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     64a:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     64e:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     652:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     656:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     65a:	0e 94 f0 06 	call	0xde0	; 0xde0 <__subsf3>
     65e:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     662:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     666:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     66a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     66e:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     672:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     676:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     67a:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     67e:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     682:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     686:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     68a:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     68e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     692:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     696:	6c c3       	rjmp	.+1752   	; 0xd70 <__stack+0x471>
				case 'a': M = 0;  N1 = 0; N2 = 0;	    estado = 1; break;
     698:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     69c:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     6a0:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     6a4:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     6a8:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     6ac:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     6b0:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     6b4:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     6b8:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     6bc:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     6c0:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     6c4:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     6d0:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     6d4:	4d c3       	rjmp	.+1690   	; 0xd70 <__stack+0x471>
				//case 'f': //terminar calculadora
			}
		}break;
		
		case 1: //estado 1
		punto = 0;
     6d6:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <__data_end+0x1>
     6da:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
		if((entrada == '0')||
     6de:	80 ed       	ldi	r24, 0xD0	; 208
     6e0:	8c 0f       	add	r24, r28
     6e2:	8a 30       	cpi	r24, 0x0A	; 10
     6e4:	10 f0       	brcs	.+4      	; 0x6ea <calculadora+0x260>
			(entrada == '4')||
			(entrada == '5')||
			(entrada == '6')||
			(entrada == '7')||
			(entrada == '8')||
			(entrada == '9')||
     6e6:	ce 32       	cpi	r28, 0x2E	; 46
     6e8:	a9 f4       	brne	.+42     	; 0x714 <calculadora+0x28a>
			(entrada == '.')) { N2 = 0; actualizarNumero(N2,entrada); estado = 2;}
     6ea:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     6ee:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     6f2:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     6f6:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     6fa:	4c 2f       	mov	r20, r28
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	70 e0       	ldi	r23, 0x00	; 0
     700:	cb 01       	movw	r24, r22
     702:	0e 94 62 01 	call	0x2c4	; 0x2c4 <actualizarNumero>
     706:	82 e0       	ldi	r24, 0x02	; 2
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     70e:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     712:	2e c3       	rjmp	.+1628   	; 0xd70 <__stack+0x471>
		else if ((entrada == '+')||
     714:	8c 2f       	mov	r24, r28
     716:	8d 7f       	andi	r24, 0xFD	; 253
     718:	8d 32       	cpi	r24, 0x2D	; 45
     71a:	31 f0       	breq	.+12     	; 0x728 <calculadora+0x29e>
				(entrada == '-')||
     71c:	86 ed       	ldi	r24, 0xD6	; 214
     71e:	8c 0f       	add	r24, r28
     720:	82 30       	cpi	r24, 0x02	; 2
     722:	10 f0       	brcs	.+4      	; 0x728 <calculadora+0x29e>
				(entrada == '*')||
				(entrada == '/')||
     724:	ce 35       	cpi	r28, 0x5E	; 94
     726:	61 f4       	brne	.+24     	; 0x740 <calculadora+0x2b6>
				(entrada == '^')) {operador = entrada;	USART_Transmit_char(operador);		estado = 1;}
     728:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     72c:	8c 2f       	mov	r24, r28
     72e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     73a:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     73e:	18 c3       	rjmp	.+1584   	; 0xd70 <__stack+0x471>
		else if ((entrada == 'q')||
     740:	c1 37       	cpi	r28, 0x71	; 113
     742:	81 f0       	breq	.+32     	; 0x764 <calculadora+0x2da>
     744:	84 e9       	ldi	r24, 0x94	; 148
     746:	8c 0f       	add	r24, r28
     748:	83 30       	cpi	r24, 0x03	; 3
     74a:	60 f0       	brcs	.+24     	; 0x764 <calculadora+0x2da>
				(entrada == 'l')||
				(entrada == 'e')||
     74c:	8d e8       	ldi	r24, 0x8D	; 141
     74e:	8c 0f       	add	r24, r28
     750:	82 30       	cpi	r24, 0x02	; 2
     752:	40 f0       	brcs	.+16     	; 0x764 <calculadora+0x2da>
				(entrada == 's')||
     754:	8d e9       	ldi	r24, 0x9D	; 157
     756:	8c 0f       	add	r24, r28
     758:	83 30       	cpi	r24, 0x03	; 3
     75a:	20 f0       	brcs	.+8      	; 0x764 <calculadora+0x2da>
				(entrada == 'c')||
				(entrada == 't')||
     75c:	c7 36       	cpi	r28, 0x67	; 103
     75e:	11 f0       	breq	.+4      	; 0x764 <calculadora+0x2da>
				(entrada == 'g')||
     760:	c8 37       	cpi	r28, 0x78	; 120
     762:	39 f4       	brne	.+14     	; 0x772 <calculadora+0x2e8>
				(entrada == 'x')||
				(entrada == 'm')||
				(entrada == 'd')||
				(entrada == 'n')) {	estado = 4;} //error
     764:	84 e0       	ldi	r24, 0x04	; 4
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     76c:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     770:	ff c2       	rjmp	.+1534   	; 0xd70 <__stack+0x471>
		else{
			switch (entrada){
     772:	c1 36       	cpi	r28, 0x61	; 97
     774:	29 f1       	breq	.+74     	; 0x7c0 <calculadora+0x336>
     776:	c0 37       	cpi	r28, 0x70	; 112
     778:	21 f0       	breq	.+8      	; 0x782 <calculadora+0x2f8>
     77a:	cd 33       	cpi	r28, 0x3D	; 61
     77c:	09 f0       	breq	.+2      	; 0x780 <calculadora+0x2f6>
     77e:	f8 c2       	rjmp	.+1520   	; 0xd70 <__stack+0x471>
     780:	3c c0       	rjmp	.+120    	; 0x7fa <calculadora+0x370>
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	a0 e4       	ldi	r26, 0x40	; 64
     788:	b0 e4       	ldi	r27, 0x40	; 64
     78a:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <N2>
     78e:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <N2+0x1>
     792:	a0 93 5e 01 	sts	0x015E, r26	; 0x80015e <N2+0x2>
     796:	b0 93 5f 01 	sts	0x015F, r27	; 0x80015f <N2+0x3>
     79a:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     79e:	8c e3       	ldi	r24, 0x3C	; 60
     7a0:	91 e0       	ldi	r25, 0x01	; 1
     7a2:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     7a6:	8c 2f       	mov	r24, r28
     7a8:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     7ac:	8a e0       	ldi	r24, 0x0A	; 10
     7ae:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
				(entrada == 'm')||
				(entrada == 'd')||
				(entrada == 'n')) {	estado = 4;} //error
		else{
			switch (entrada){
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
     7b2:	83 e0       	ldi	r24, 0x03	; 3
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     7ba:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     7be:	d8 c2       	rjmp	.+1456   	; 0xd70 <__stack+0x471>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
     7c0:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     7c4:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     7c8:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     7cc:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     7d0:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     7d4:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     7d8:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     7dc:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     7e0:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     7e4:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     7e8:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     7ec:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     7f0:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     7f4:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     7f8:	bb c2       	rjmp	.+1398   	; 0xd70 <__stack+0x471>
				case '=': M = 0;  calcular2(N1,N1,operador);    estado = 0; break;
     7fa:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     7fe:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     802:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     806:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     80a:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     80e:	8c e3       	ldi	r24, 0x3C	; 60
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     816:	8c 2f       	mov	r24, r28
     818:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     81c:	8a e0       	ldi	r24, 0x0A	; 10
     81e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
				(entrada == 'n')) {	estado = 4;} //error
		else{
			switch (entrada){
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
				case '=': M = 0;  calcular2(N1,N1,operador);    estado = 0; break;
     822:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     826:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     82a:	a2 c2       	rjmp	.+1348   	; 0xd70 <__stack+0x471>
			}
		}
		break;
		
		case 2: //estado 2
		if((entrada == '0')||
     82c:	80 ed       	ldi	r24, 0xD0	; 208
     82e:	8c 0f       	add	r24, r28
     830:	8a 30       	cpi	r24, 0x0A	; 10
     832:	10 f0       	brcs	.+4      	; 0x838 <calculadora+0x3ae>
			(entrada == '4')||
			(entrada == '5')||
			(entrada == '6')||
			(entrada == '7')||
			(entrada == '8')||
			(entrada == '9')||
     834:	ce 32       	cpi	r28, 0x2E	; 46
     836:	91 f4       	brne	.+36     	; 0x85c <calculadora+0x3d2>
			(entrada == '.')) { actualizarNumero(N2,entrada); estado = 2;}
     838:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <N2>
     83c:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <N2+0x1>
     840:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <N2+0x2>
     844:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <N2+0x3>
     848:	4c 2f       	mov	r20, r28
     84a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <actualizarNumero>
     84e:	82 e0       	ldi	r24, 0x02	; 2
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     856:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     85a:	8a c2       	rjmp	.+1300   	; 0xd70 <__stack+0x471>
		else if ((entrada == '+')||
     85c:	8c 2f       	mov	r24, r28
     85e:	8d 7f       	andi	r24, 0xFD	; 253
     860:	8d 32       	cpi	r24, 0x2D	; 45
     862:	31 f0       	breq	.+12     	; 0x870 <calculadora+0x3e6>
			(entrada == '-')||
     864:	86 ed       	ldi	r24, 0xD6	; 214
     866:	8c 0f       	add	r24, r28
     868:	82 30       	cpi	r24, 0x02	; 2
     86a:	10 f0       	brcs	.+4      	; 0x870 <calculadora+0x3e6>
			(entrada == '*')||
			(entrada == '/')||
     86c:	ce 35       	cpi	r28, 0x5E	; 94
     86e:	c1 f4       	brne	.+48     	; 0x8a0 <calculadora+0x416>
			(entrada == '^')) { calcular2(N1,N2,operador); operador = entrada; USART_Transmit_char(operador); estado = 1;}
     870:	d0 91 00 01 	lds	r29, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     874:	8c e3       	ldi	r24, 0x3C	; 60
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     87c:	8d 2f       	mov	r24, r29
     87e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     882:	8a e0       	ldi	r24, 0x0A	; 10
     884:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
			(entrada == '.')) { actualizarNumero(N2,entrada); estado = 2;}
		else if ((entrada == '+')||
			(entrada == '-')||
			(entrada == '*')||
			(entrada == '/')||
			(entrada == '^')) { calcular2(N1,N2,operador); operador = entrada; USART_Transmit_char(operador); estado = 1;}
     888:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     88c:	8c 2f       	mov	r24, r28
     88e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     89a:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     89e:	68 c2       	rjmp	.+1232   	; 0xd70 <__stack+0x471>
		else if ((entrada == 'q')||
     8a0:	c1 37       	cpi	r28, 0x71	; 113
     8a2:	71 f0       	breq	.+28     	; 0x8c0 <calculadora+0x436>
     8a4:	cc 36       	cpi	r28, 0x6C	; 108
     8a6:	61 f0       	breq	.+24     	; 0x8c0 <calculadora+0x436>
			(entrada == 'l')||
     8a8:	c5 36       	cpi	r28, 0x65	; 101
     8aa:	51 f0       	breq	.+20     	; 0x8c0 <calculadora+0x436>
			(entrada == 'e')||
     8ac:	8d e8       	ldi	r24, 0x8D	; 141
     8ae:	8c 0f       	add	r24, r28
     8b0:	82 30       	cpi	r24, 0x02	; 2
     8b2:	30 f0       	brcs	.+12     	; 0x8c0 <calculadora+0x436>
			(entrada == 's')||
     8b4:	8c 2f       	mov	r24, r28
     8b6:	8b 7f       	andi	r24, 0xFB	; 251
     8b8:	83 36       	cpi	r24, 0x63	; 99
     8ba:	11 f0       	breq	.+4      	; 0x8c0 <calculadora+0x436>
			(entrada == 'c')||
			(entrada == 't')||
			(entrada == 'g')||
     8bc:	c8 37       	cpi	r28, 0x78	; 120
     8be:	f1 f4       	brne	.+60     	; 0x8fc <calculadora+0x472>
			(entrada == 'x')) {calcular2(N1,N2,operador); calcular1(N1,entrada); estado = 3;}
     8c0:	d0 91 00 01 	lds	r29, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     8c4:	8c e3       	ldi	r24, 0x3C	; 60
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     8cc:	8d 2f       	mov	r24, r29
     8ce:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     8d2:	8a e0       	ldi	r24, 0x0A	; 10
     8d4:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
			(entrada == 'e')||
			(entrada == 's')||
			(entrada == 'c')||
			(entrada == 't')||
			(entrada == 'g')||
			(entrada == 'x')) {calcular2(N1,N2,operador); calcular1(N1,entrada); estado = 3;}
     8d8:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <N1>
     8dc:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <N1+0x1>
     8e0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <N1+0x2>
     8e4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <N1+0x3>
     8e8:	4c 2f       	mov	r20, r28
     8ea:	0e 94 37 02 	call	0x46e	; 0x46e <calcular1>
     8ee:	83 e0       	ldi	r24, 0x03	; 3
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     8f6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     8fa:	3a c2       	rjmp	.+1140   	; 0xd70 <__stack+0x471>
		else{
			switch (entrada){
     8fc:	c4 36       	cpi	r28, 0x64	; 100
     8fe:	09 f4       	brne	.+2      	; 0x902 <__stack+0x3>
     900:	8a c0       	rjmp	.+276    	; 0xa16 <__stack+0x117>
     902:	30 f4       	brcc	.+12     	; 0x910 <__stack+0x11>
     904:	cd 33       	cpi	r28, 0x3D	; 61
     906:	09 f4       	brne	.+2      	; 0x90a <__stack+0xb>
     908:	4c c0       	rjmp	.+152    	; 0x9a2 <__stack+0xa3>
     90a:	c1 36       	cpi	r28, 0x61	; 97
     90c:	49 f1       	breq	.+82     	; 0x960 <__stack+0x61>
     90e:	30 c2       	rjmp	.+1120   	; 0xd70 <__stack+0x471>
     910:	ce 36       	cpi	r28, 0x6E	; 110
     912:	09 f4       	brne	.+2      	; 0x916 <__stack+0x17>
     914:	bb c0       	rjmp	.+374    	; 0xa8c <__stack+0x18d>
     916:	c0 37       	cpi	r28, 0x70	; 112
     918:	21 f0       	breq	.+8      	; 0x922 <__stack+0x23>
     91a:	cd 36       	cpi	r28, 0x6D	; 109
     91c:	09 f0       	breq	.+2      	; 0x920 <__stack+0x21>
     91e:	28 c2       	rjmp	.+1104   	; 0xd70 <__stack+0x471>
     920:	5b c0       	rjmp	.+182    	; 0x9d8 <__stack+0xd9>
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	a0 e4       	ldi	r26, 0x40	; 64
     928:	b0 e4       	ldi	r27, 0x40	; 64
     92a:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <N2>
     92e:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <N2+0x1>
     932:	a0 93 5e 01 	sts	0x015E, r26	; 0x80015e <N2+0x2>
     936:	b0 93 5f 01 	sts	0x015F, r27	; 0x80015f <N2+0x3>
     93a:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     93e:	8c e3       	ldi	r24, 0x3C	; 60
     940:	91 e0       	ldi	r25, 0x01	; 1
     942:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     946:	8c 2f       	mov	r24, r28
     948:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     94c:	8a e0       	ldi	r24, 0x0A	; 10
     94e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
			(entrada == 't')||
			(entrada == 'g')||
			(entrada == 'x')) {calcular2(N1,N2,operador); calcular1(N1,entrada); estado = 3;}
		else{
			switch (entrada){
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
     952:	83 e0       	ldi	r24, 0x03	; 3
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     95a:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     95e:	08 c2       	rjmp	.+1040   	; 0xd70 <__stack+0x471>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
     960:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     964:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     968:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     96c:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     970:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     974:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     978:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     97c:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     980:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     984:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     988:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     98c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     990:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <__data_end+0x1>
     994:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
     998:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     99c:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     9a0:	e7 c1       	rjmp	.+974    	; 0xd70 <__stack+0x471>
				case '=': M = 0;  calcular2(N1,N2,operador);    estado = 3; break;
     9a2:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     9a6:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     9aa:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     9ae:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     9b2:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     9b6:	8c e3       	ldi	r24, 0x3C	; 60
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     9be:	8c 2f       	mov	r24, r28
     9c0:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     9c4:	8a e0       	ldi	r24, 0x0A	; 10
     9c6:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
			(entrada == 'x')) {calcular2(N1,N2,operador); calcular1(N1,entrada); estado = 3;}
		else{
			switch (entrada){
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
				case '=': M = 0;  calcular2(N1,N2,operador);    estado = 3; break;
     9ca:	83 e0       	ldi	r24, 0x03	; 3
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     9d2:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     9d6:	cc c1       	rjmp	.+920    	; 0xd70 <__stack+0x471>
				case 'm': N1 = M; N2 = 0;						estado = 3; break;
     9d8:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <M>
     9dc:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <M+0x1>
     9e0:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <M+0x2>
     9e4:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <M+0x3>
     9e8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <N1>
     9ec:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <N1+0x1>
     9f0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <N1+0x2>
     9f4:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <N1+0x3>
     9f8:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     9fc:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     a00:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     a04:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     a08:	83 e0       	ldi	r24, 0x03	; 3
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     a10:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     a14:	ad c1       	rjmp	.+858    	; 0xd70 <__stack+0x471>
				case 'd': calcular2(N1,N2,operador); M = M + N1; N1 = 0; N2 = 0;	estado = 0; break;
     a16:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     a1a:	8c e3       	ldi	r24, 0x3C	; 60
     a1c:	91 e0       	ldi	r25, 0x01	; 1
     a1e:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     a22:	8c 2f       	mov	r24, r28
     a24:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     a28:	8a e0       	ldi	r24, 0x0A	; 10
     a2a:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
			switch (entrada){
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
				case '=': M = 0;  calcular2(N1,N2,operador);    estado = 3; break;
				case 'm': N1 = M; N2 = 0;						estado = 3; break;
				case 'd': calcular2(N1,N2,operador); M = M + N1; N1 = 0; N2 = 0;	estado = 0; break;
     a2e:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     a32:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     a36:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     a3a:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     a3e:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     a42:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     a46:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     a4a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     a4e:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     a52:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     a56:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     a5a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     a5e:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     a62:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     a66:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     a6a:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     a6e:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     a72:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     a76:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     a7a:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     a7e:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     a82:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     a86:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     a8a:	72 c1       	rjmp	.+740    	; 0xd70 <__stack+0x471>
				case 'n': calcular2(N1,N2,operador); M = M - N1; N1 = 0; N2 = 0;	estado = 0; break;
     a8c:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
	//N2 = 0
}

void calcular2(float n1, float n2, char op)
{
	USART_Transmit_String("calcular N1 y N2 con");
     a90:	8c e3       	ldi	r24, 0x3C	; 60
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	USART_Transmit_char(op);
     a98:	8c 2f       	mov	r24, r28
     a9a:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
	USART_Transmit_char('\n');
     a9e:	8a e0       	ldi	r24, 0x0A	; 10
     aa0:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
				case 'p': N2 = pi;	calcular2(N1,N2,operador);	estado = 3; break;
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0;    estado = 0; break;
				case '=': M = 0;  calcular2(N1,N2,operador);    estado = 3; break;
				case 'm': N1 = M; N2 = 0;						estado = 3; break;
				case 'd': calcular2(N1,N2,operador); M = M + N1; N1 = 0; N2 = 0;	estado = 0; break;
				case 'n': calcular2(N1,N2,operador); M = M - N1; N1 = 0; N2 = 0;	estado = 0; break;
     aa4:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     aa8:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     aac:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     ab0:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     ab4:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     ab8:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     abc:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     ac0:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     ac4:	0e 94 f0 06 	call	0xde0	; 0xde0 <__subsf3>
     ac8:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     acc:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     ad0:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     ad4:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     ad8:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     adc:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     ae0:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     ae4:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     ae8:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     aec:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     af0:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     af4:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     af8:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     afc:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     b00:	37 c1       	rjmp	.+622    	; 0xd70 <__stack+0x471>
			}
		}
		break;
		
		case 3: //estado 3
		punto = 0;
     b02:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <__data_end+0x1>
     b06:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
		if((entrada == '0')||
     b0a:	80 ed       	ldi	r24, 0xD0	; 208
     b0c:	8c 0f       	add	r24, r28
     b0e:	8a 30       	cpi	r24, 0x0A	; 10
     b10:	10 f0       	brcs	.+4      	; 0xb16 <__stack+0x217>
		(entrada == '4')||
		(entrada == '5')||
		(entrada == '6')||
		(entrada == '7')||
		(entrada == '8')||
		(entrada == '9')||
     b12:	ce 32       	cpi	r28, 0x2E	; 46
     b14:	99 f4       	brne	.+38     	; 0xb3c <__stack+0x23d>
		(entrada == '.')) { N1 = 0; actualizarNumero(N1,entrada); estado = 0;}
     b16:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     b1a:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     b1e:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     b22:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     b26:	4c 2f       	mov	r20, r28
     b28:	60 e0       	ldi	r22, 0x00	; 0
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	cb 01       	movw	r24, r22
     b2e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <actualizarNumero>
     b32:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     b36:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     b3a:	1a c1       	rjmp	.+564    	; 0xd70 <__stack+0x471>
		else if ((entrada == '+')||
     b3c:	8c 2f       	mov	r24, r28
     b3e:	8d 7f       	andi	r24, 0xFD	; 253
     b40:	8d 32       	cpi	r24, 0x2D	; 45
     b42:	31 f0       	breq	.+12     	; 0xb50 <__stack+0x251>
		(entrada == '-')||
     b44:	86 ed       	ldi	r24, 0xD6	; 214
     b46:	8c 0f       	add	r24, r28
     b48:	82 30       	cpi	r24, 0x02	; 2
     b4a:	10 f0       	brcs	.+4      	; 0xb50 <__stack+0x251>
		(entrada == '*')||
		(entrada == '/')||
     b4c:	ce 35       	cpi	r28, 0x5E	; 94
     b4e:	61 f4       	brne	.+24     	; 0xb68 <__stack+0x269>
		(entrada == '^')) {operador = entrada;	USART_Transmit_char(operador);		estado = 1;}
     b50:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     b54:	8c 2f       	mov	r24, r28
     b56:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Transmit_char>
     b5a:	81 e0       	ldi	r24, 0x01	; 1
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     b62:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     b66:	04 c1       	rjmp	.+520    	; 0xd70 <__stack+0x471>
		else if ((entrada == 'q')||
     b68:	c1 37       	cpi	r28, 0x71	; 113
     b6a:	71 f0       	breq	.+28     	; 0xb88 <__stack+0x289>
     b6c:	cc 36       	cpi	r28, 0x6C	; 108
     b6e:	61 f0       	breq	.+24     	; 0xb88 <__stack+0x289>
		(entrada == 'l')||
     b70:	c5 36       	cpi	r28, 0x65	; 101
     b72:	51 f0       	breq	.+20     	; 0xb88 <__stack+0x289>
		(entrada == 'e')||
     b74:	8d e8       	ldi	r24, 0x8D	; 141
     b76:	8c 0f       	add	r24, r28
     b78:	82 30       	cpi	r24, 0x02	; 2
     b7a:	30 f0       	brcs	.+12     	; 0xb88 <__stack+0x289>
		(entrada == 's')||
     b7c:	8c 2f       	mov	r24, r28
     b7e:	8b 7f       	andi	r24, 0xFB	; 251
     b80:	83 36       	cpi	r24, 0x63	; 99
     b82:	11 f0       	breq	.+4      	; 0xb88 <__stack+0x289>
		(entrada == 'c')||
		(entrada == 't')||
		(entrada == 'g')||
     b84:	c8 37       	cpi	r28, 0x78	; 120
     b86:	91 f4       	brne	.+36     	; 0xbac <__stack+0x2ad>
		(entrada == 'x')) {calcular1(N1,entrada);		estado = 3;}
     b88:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <N1>
     b8c:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <N1+0x1>
     b90:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <N1+0x2>
     b94:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <N1+0x3>
     b98:	4c 2f       	mov	r20, r28
     b9a:	0e 94 37 02 	call	0x46e	; 0x46e <calcular1>
     b9e:	83 e0       	ldi	r24, 0x03	; 3
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     ba6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     baa:	e2 c0       	rjmp	.+452    	; 0xd70 <__stack+0x471>
		else{
			switch (entrada){
     bac:	cd 36       	cpi	r28, 0x6D	; 109
     bae:	01 f1       	breq	.+64     	; 0xbf0 <__stack+0x2f1>
     bb0:	30 f4       	brcc	.+12     	; 0xbbe <__stack+0x2bf>
     bb2:	c1 36       	cpi	r28, 0x61	; 97
     bb4:	09 f4       	brne	.+2      	; 0xbb8 <__stack+0x2b9>
     bb6:	99 c0       	rjmp	.+306    	; 0xcea <__stack+0x3eb>
     bb8:	c4 36       	cpi	r28, 0x64	; 100
     bba:	c9 f1       	breq	.+114    	; 0xc2e <__stack+0x32f>
     bbc:	d9 c0       	rjmp	.+434    	; 0xd70 <__stack+0x471>
     bbe:	ce 36       	cpi	r28, 0x6E	; 110
     bc0:	09 f4       	brne	.+2      	; 0xbc4 <__stack+0x2c5>
     bc2:	64 c0       	rjmp	.+200    	; 0xc8c <__stack+0x38d>
     bc4:	c0 37       	cpi	r28, 0x70	; 112
     bc6:	09 f0       	breq	.+2      	; 0xbca <__stack+0x2cb>
     bc8:	d3 c0       	rjmp	.+422    	; 0xd70 <__stack+0x471>
				case 'p': N1 = pi;							estado = 3; break;
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	a0 e4       	ldi	r26, 0x40	; 64
     bd0:	b0 e4       	ldi	r27, 0x40	; 64
     bd2:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <N1>
     bd6:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <N1+0x1>
     bda:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <N1+0x2>
     bde:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <N1+0x3>
     be2:	83 e0       	ldi	r24, 0x03	; 3
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     bea:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     bee:	c0 c0       	rjmp	.+384    	; 0xd70 <__stack+0x471>
				case 'm': N1 = M; N2 = 0;					estado = 3; break;
     bf0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <M>
     bf4:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <M+0x1>
     bf8:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <M+0x2>
     bfc:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <M+0x3>
     c00:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <N1>
     c04:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <N1+0x1>
     c08:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <N1+0x2>
     c0c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <N1+0x3>
     c10:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     c14:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     c18:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     c1c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     c20:	83 e0       	ldi	r24, 0x03	; 3
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     c28:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     c2c:	a1 c0       	rjmp	.+322    	; 0xd70 <__stack+0x471>
				case 'd': M = M + N1; N1 = 0; N2 = 0;		estado = 0; break;
     c2e:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     c32:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     c36:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     c3a:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     c3e:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     c42:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     c46:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     c4a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     c4e:	0e 94 f1 06 	call	0xde2	; 0xde2 <__addsf3>
     c52:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     c56:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     c5a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     c5e:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     c62:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     c66:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     c6a:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     c6e:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     c72:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     c76:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     c7a:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     c7e:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     c82:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     c86:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     c8a:	72 c0       	rjmp	.+228    	; 0xd70 <__stack+0x471>
				case 'n': M = M - N1; N1 = 0; N2 = 0;		estado = 0; break;
     c8c:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <N1>
     c90:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <N1+0x1>
     c94:	40 91 62 01 	lds	r20, 0x0162	; 0x800162 <N1+0x2>
     c98:	50 91 63 01 	lds	r21, 0x0163	; 0x800163 <N1+0x3>
     c9c:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <M>
     ca0:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <M+0x1>
     ca4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <M+0x2>
     ca8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <M+0x3>
     cac:	0e 94 f0 06 	call	0xde0	; 0xde0 <__subsf3>
     cb0:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <M>
     cb4:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <M+0x1>
     cb8:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <M+0x2>
     cbc:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <M+0x3>
     cc0:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     cc4:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     cc8:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     ccc:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     cd0:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     cd4:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     cd8:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     cdc:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     ce0:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     ce4:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     ce8:	43 c0       	rjmp	.+134    	; 0xd70 <__stack+0x471>
				case 'a': M = 0;  N1 = 0; N2 = 0; punto = 0; estado = 1; break;
     cea:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     cee:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     cf2:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     cf6:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     cfa:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     cfe:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     d02:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     d06:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     d0a:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     d0e:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     d12:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     d16:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <estado+0x1>
     d22:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <estado>
     d26:	24 c0       	rjmp	.+72     	; 0xd70 <__stack+0x471>
			}
		}
		break;
		
		case 4: //estado 4
		if ((entrada == 'o')||(entrada == 'a'))
     d28:	cf 36       	cpi	r28, 0x6F	; 111
     d2a:	11 f0       	breq	.+4      	; 0xd30 <__stack+0x431>
     d2c:	c1 36       	cpi	r28, 0x61	; 97
     d2e:	01 f5       	brne	.+64     	; 0xd70 <__stack+0x471>
		{
			M = 0;  N1 = 0; N2 = 0; estado = 0; punto = 0;
     d30:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <M>
     d34:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <M+0x1>
     d38:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <M+0x2>
     d3c:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <M+0x3>
     d40:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <N1>
     d44:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <N1+0x1>
     d48:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <N1+0x2>
     d4c:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <N1+0x3>
     d50:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <N2>
     d54:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <N2+0x1>
     d58:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <N2+0x2>
     d5c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <N2+0x3>
     d60:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <estado+0x1>
     d64:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <estado>
     d68:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <__data_end+0x1>
     d6c:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
			//error
		}
		break;
	}
	
}
     d70:	df 91       	pop	r29
     d72:	cf 91       	pop	r28
     d74:	08 95       	ret

00000d76 <main>:


int main(void)
{
	//OUTPUTS
	DDRC |= (1 << DDC0) | (1 << DDC1);
     d76:	87 b1       	in	r24, 0x07	; 7
     d78:	83 60       	ori	r24, 0x03	; 3
     d7a:	87 b9       	out	0x07, r24	; 7
	DDRD |= (1 << DDD2) | (1 << DDD3);
     d7c:	8a b1       	in	r24, 0x0a	; 10
     d7e:	8c 60       	ori	r24, 0x0C	; 12
     d80:	8a b9       	out	0x0a, r24	; 10
	
	//INPUTS
	DDRC &= ~((1 << DDC2) | (1 << DDC3) | (1 << DDC4) | (1 << DDC5));
     d82:	87 b1       	in	r24, 0x07	; 7
     d84:	83 7c       	andi	r24, 0xC3	; 195
     d86:	87 b9       	out	0x07, r24	; 7
	DDRD &= ~((1 << DDD4) | (1 << DDD5) | (1 << DDD6) | (1 << DDD7));
     d88:	8a b1       	in	r24, 0x0a	; 10
     d8a:	8f 70       	andi	r24, 0x0F	; 15
     d8c:	8a b9       	out	0x0a, r24	; 10
	
	//PULL-UP 
	PORTC |= (1 << PORTC2) | (1 << PORTC3) | (1 << PORTC4) | (1 << PORTC5);
     d8e:	88 b1       	in	r24, 0x08	; 8
     d90:	8c 63       	ori	r24, 0x3C	; 60
     d92:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD4) | (1 << PORTD5) | (1 << PORTD6) | (1 << PORTD7);
     d94:	8b b1       	in	r24, 0x0b	; 11
     d96:	80 6f       	ori	r24, 0xF0	; 240
     d98:	8b b9       	out	0x0b, r24	; 11
	
	//OUTPUTS HIGH (neutro)
	PORTC |= (1 << PORTC0) | (1 << PORTC1);
     d9a:	88 b1       	in	r24, 0x08	; 8
     d9c:	83 60       	ori	r24, 0x03	; 3
     d9e:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << PORTD2) | (1 << PORTC3);
     da0:	8b b1       	in	r24, 0x0b	; 11
     da2:	8c 60       	ori	r24, 0x0C	; 12
     da4:	8b b9       	out	0x0b, r24	; 11
	
	PCMSK1 |= 0x3C; //PC2,3,4,5
     da6:	ec e6       	ldi	r30, 0x6C	; 108
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	8c 63       	ori	r24, 0x3C	; 60
     dae:	80 83       	st	Z, r24
	PCMSK2 |= 0xF0; //PD4,5,6,7
     db0:	ed e6       	ldi	r30, 0x6D	; 109
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	80 6f       	ori	r24, 0xF0	; 240
     db8:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE1) | (1<<PCIE2);   //interrupts de cambio habilitados
     dba:	e8 e6       	ldi	r30, 0x68	; 104
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	80 81       	ld	r24, Z
     dc0:	86 60       	ori	r24, 0x06	; 6
     dc2:	80 83       	st	Z, r24
	
	USART_Init(MYUBRR);
     dc4:	80 e1       	ldi	r24, 0x10	; 16
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 94 76 00 	call	0xec	; 0xec <USART_Init>
	USART_Transmit_String("HOLA");
     dcc:	81 e5       	ldi	r24, 0x51	; 81
     dce:	91 e0       	ldi	r25, 0x01	; 1
     dd0:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit_String>
	
	sei();
     dd4:	78 94       	sei
    {
// 		p1
// 		p2
// 		p3
// 		p4
		char entrada = USART_Receive();
     dd6:	0e 94 81 00 	call	0x102	; 0x102 <USART_Receive>
		calculadora(entrada);
     dda:	0e 94 45 02 	call	0x48a	; 0x48a <calculadora>
     dde:	fb cf       	rjmp	.-10     	; 0xdd6 <main+0x60>

00000de0 <__subsf3>:
     de0:	50 58       	subi	r21, 0x80	; 128

00000de2 <__addsf3>:
     de2:	bb 27       	eor	r27, r27
     de4:	aa 27       	eor	r26, r26
     de6:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3x>
     dea:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__fp_round>
     dee:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__fp_pscA>
     df2:	38 f0       	brcs	.+14     	; 0xe02 <__addsf3+0x20>
     df4:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fp_pscB>
     df8:	20 f0       	brcs	.+8      	; 0xe02 <__addsf3+0x20>
     dfa:	39 f4       	brne	.+14     	; 0xe0a <__addsf3+0x28>
     dfc:	9f 3f       	cpi	r25, 0xFF	; 255
     dfe:	19 f4       	brne	.+6      	; 0xe06 <__addsf3+0x24>
     e00:	26 f4       	brtc	.+8      	; 0xe0a <__addsf3+0x28>
     e02:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_nan>
     e06:	0e f4       	brtc	.+2      	; 0xe0a <__addsf3+0x28>
     e08:	e0 95       	com	r30
     e0a:	e7 fb       	bst	r30, 7
     e0c:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_inf>

00000e10 <__addsf3x>:
     e10:	e9 2f       	mov	r30, r25
     e12:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_split3>
     e16:	58 f3       	brcs	.-42     	; 0xdee <__addsf3+0xc>
     e18:	ba 17       	cp	r27, r26
     e1a:	62 07       	cpc	r22, r18
     e1c:	73 07       	cpc	r23, r19
     e1e:	84 07       	cpc	r24, r20
     e20:	95 07       	cpc	r25, r21
     e22:	20 f0       	brcs	.+8      	; 0xe2c <__addsf3x+0x1c>
     e24:	79 f4       	brne	.+30     	; 0xe44 <__addsf3x+0x34>
     e26:	a6 f5       	brtc	.+104    	; 0xe90 <__addsf3x+0x80>
     e28:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__fp_zero>
     e2c:	0e f4       	brtc	.+2      	; 0xe30 <__addsf3x+0x20>
     e2e:	e0 95       	com	r30
     e30:	0b 2e       	mov	r0, r27
     e32:	ba 2f       	mov	r27, r26
     e34:	a0 2d       	mov	r26, r0
     e36:	0b 01       	movw	r0, r22
     e38:	b9 01       	movw	r22, r18
     e3a:	90 01       	movw	r18, r0
     e3c:	0c 01       	movw	r0, r24
     e3e:	ca 01       	movw	r24, r20
     e40:	a0 01       	movw	r20, r0
     e42:	11 24       	eor	r1, r1
     e44:	ff 27       	eor	r31, r31
     e46:	59 1b       	sub	r21, r25
     e48:	99 f0       	breq	.+38     	; 0xe70 <__addsf3x+0x60>
     e4a:	59 3f       	cpi	r21, 0xF9	; 249
     e4c:	50 f4       	brcc	.+20     	; 0xe62 <__addsf3x+0x52>
     e4e:	50 3e       	cpi	r21, 0xE0	; 224
     e50:	68 f1       	brcs	.+90     	; 0xeac <__addsf3x+0x9c>
     e52:	1a 16       	cp	r1, r26
     e54:	f0 40       	sbci	r31, 0x00	; 0
     e56:	a2 2f       	mov	r26, r18
     e58:	23 2f       	mov	r18, r19
     e5a:	34 2f       	mov	r19, r20
     e5c:	44 27       	eor	r20, r20
     e5e:	58 5f       	subi	r21, 0xF8	; 248
     e60:	f3 cf       	rjmp	.-26     	; 0xe48 <__addsf3x+0x38>
     e62:	46 95       	lsr	r20
     e64:	37 95       	ror	r19
     e66:	27 95       	ror	r18
     e68:	a7 95       	ror	r26
     e6a:	f0 40       	sbci	r31, 0x00	; 0
     e6c:	53 95       	inc	r21
     e6e:	c9 f7       	brne	.-14     	; 0xe62 <__addsf3x+0x52>
     e70:	7e f4       	brtc	.+30     	; 0xe90 <__addsf3x+0x80>
     e72:	1f 16       	cp	r1, r31
     e74:	ba 0b       	sbc	r27, r26
     e76:	62 0b       	sbc	r22, r18
     e78:	73 0b       	sbc	r23, r19
     e7a:	84 0b       	sbc	r24, r20
     e7c:	ba f0       	brmi	.+46     	; 0xeac <__addsf3x+0x9c>
     e7e:	91 50       	subi	r25, 0x01	; 1
     e80:	a1 f0       	breq	.+40     	; 0xeaa <__addsf3x+0x9a>
     e82:	ff 0f       	add	r31, r31
     e84:	bb 1f       	adc	r27, r27
     e86:	66 1f       	adc	r22, r22
     e88:	77 1f       	adc	r23, r23
     e8a:	88 1f       	adc	r24, r24
     e8c:	c2 f7       	brpl	.-16     	; 0xe7e <__addsf3x+0x6e>
     e8e:	0e c0       	rjmp	.+28     	; 0xeac <__addsf3x+0x9c>
     e90:	ba 0f       	add	r27, r26
     e92:	62 1f       	adc	r22, r18
     e94:	73 1f       	adc	r23, r19
     e96:	84 1f       	adc	r24, r20
     e98:	48 f4       	brcc	.+18     	; 0xeac <__addsf3x+0x9c>
     e9a:	87 95       	ror	r24
     e9c:	77 95       	ror	r23
     e9e:	67 95       	ror	r22
     ea0:	b7 95       	ror	r27
     ea2:	f7 95       	ror	r31
     ea4:	9e 3f       	cpi	r25, 0xFE	; 254
     ea6:	08 f0       	brcs	.+2      	; 0xeaa <__addsf3x+0x9a>
     ea8:	b0 cf       	rjmp	.-160    	; 0xe0a <__addsf3+0x28>
     eaa:	93 95       	inc	r25
     eac:	88 0f       	add	r24, r24
     eae:	08 f0       	brcs	.+2      	; 0xeb2 <__addsf3x+0xa2>
     eb0:	99 27       	eor	r25, r25
     eb2:	ee 0f       	add	r30, r30
     eb4:	97 95       	ror	r25
     eb6:	87 95       	ror	r24
     eb8:	08 95       	ret

00000eba <__divsf3>:
     eba:	0e 94 71 07 	call	0xee2	; 0xee2 <__divsf3x>
     ebe:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__fp_round>
     ec2:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fp_pscB>
     ec6:	58 f0       	brcs	.+22     	; 0xede <__divsf3+0x24>
     ec8:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__fp_pscA>
     ecc:	40 f0       	brcs	.+16     	; 0xede <__divsf3+0x24>
     ece:	29 f4       	brne	.+10     	; 0xeda <__divsf3+0x20>
     ed0:	5f 3f       	cpi	r21, 0xFF	; 255
     ed2:	29 f0       	breq	.+10     	; 0xede <__divsf3+0x24>
     ed4:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_inf>
     ed8:	51 11       	cpse	r21, r1
     eda:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__fp_szero>
     ede:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_nan>

00000ee2 <__divsf3x>:
     ee2:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_split3>
     ee6:	68 f3       	brcs	.-38     	; 0xec2 <__divsf3+0x8>

00000ee8 <__divsf3_pse>:
     ee8:	99 23       	and	r25, r25
     eea:	b1 f3       	breq	.-20     	; 0xed8 <__divsf3+0x1e>
     eec:	55 23       	and	r21, r21
     eee:	91 f3       	breq	.-28     	; 0xed4 <__divsf3+0x1a>
     ef0:	95 1b       	sub	r25, r21
     ef2:	55 0b       	sbc	r21, r21
     ef4:	bb 27       	eor	r27, r27
     ef6:	aa 27       	eor	r26, r26
     ef8:	62 17       	cp	r22, r18
     efa:	73 07       	cpc	r23, r19
     efc:	84 07       	cpc	r24, r20
     efe:	38 f0       	brcs	.+14     	; 0xf0e <__divsf3_pse+0x26>
     f00:	9f 5f       	subi	r25, 0xFF	; 255
     f02:	5f 4f       	sbci	r21, 0xFF	; 255
     f04:	22 0f       	add	r18, r18
     f06:	33 1f       	adc	r19, r19
     f08:	44 1f       	adc	r20, r20
     f0a:	aa 1f       	adc	r26, r26
     f0c:	a9 f3       	breq	.-22     	; 0xef8 <__divsf3_pse+0x10>
     f0e:	35 d0       	rcall	.+106    	; 0xf7a <__divsf3_pse+0x92>
     f10:	0e 2e       	mov	r0, r30
     f12:	3a f0       	brmi	.+14     	; 0xf22 <__divsf3_pse+0x3a>
     f14:	e0 e8       	ldi	r30, 0x80	; 128
     f16:	32 d0       	rcall	.+100    	; 0xf7c <__divsf3_pse+0x94>
     f18:	91 50       	subi	r25, 0x01	; 1
     f1a:	50 40       	sbci	r21, 0x00	; 0
     f1c:	e6 95       	lsr	r30
     f1e:	00 1c       	adc	r0, r0
     f20:	ca f7       	brpl	.-14     	; 0xf14 <__divsf3_pse+0x2c>
     f22:	2b d0       	rcall	.+86     	; 0xf7a <__divsf3_pse+0x92>
     f24:	fe 2f       	mov	r31, r30
     f26:	29 d0       	rcall	.+82     	; 0xf7a <__divsf3_pse+0x92>
     f28:	66 0f       	add	r22, r22
     f2a:	77 1f       	adc	r23, r23
     f2c:	88 1f       	adc	r24, r24
     f2e:	bb 1f       	adc	r27, r27
     f30:	26 17       	cp	r18, r22
     f32:	37 07       	cpc	r19, r23
     f34:	48 07       	cpc	r20, r24
     f36:	ab 07       	cpc	r26, r27
     f38:	b0 e8       	ldi	r27, 0x80	; 128
     f3a:	09 f0       	breq	.+2      	; 0xf3e <__divsf3_pse+0x56>
     f3c:	bb 0b       	sbc	r27, r27
     f3e:	80 2d       	mov	r24, r0
     f40:	bf 01       	movw	r22, r30
     f42:	ff 27       	eor	r31, r31
     f44:	93 58       	subi	r25, 0x83	; 131
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	3a f0       	brmi	.+14     	; 0xf58 <__divsf3_pse+0x70>
     f4a:	9e 3f       	cpi	r25, 0xFE	; 254
     f4c:	51 05       	cpc	r21, r1
     f4e:	78 f0       	brcs	.+30     	; 0xf6e <__divsf3_pse+0x86>
     f50:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_inf>
     f54:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__fp_szero>
     f58:	5f 3f       	cpi	r21, 0xFF	; 255
     f5a:	e4 f3       	brlt	.-8      	; 0xf54 <__divsf3_pse+0x6c>
     f5c:	98 3e       	cpi	r25, 0xE8	; 232
     f5e:	d4 f3       	brlt	.-12     	; 0xf54 <__divsf3_pse+0x6c>
     f60:	86 95       	lsr	r24
     f62:	77 95       	ror	r23
     f64:	67 95       	ror	r22
     f66:	b7 95       	ror	r27
     f68:	f7 95       	ror	r31
     f6a:	9f 5f       	subi	r25, 0xFF	; 255
     f6c:	c9 f7       	brne	.-14     	; 0xf60 <__divsf3_pse+0x78>
     f6e:	88 0f       	add	r24, r24
     f70:	91 1d       	adc	r25, r1
     f72:	96 95       	lsr	r25
     f74:	87 95       	ror	r24
     f76:	97 f9       	bld	r25, 7
     f78:	08 95       	ret
     f7a:	e1 e0       	ldi	r30, 0x01	; 1
     f7c:	66 0f       	add	r22, r22
     f7e:	77 1f       	adc	r23, r23
     f80:	88 1f       	adc	r24, r24
     f82:	bb 1f       	adc	r27, r27
     f84:	62 17       	cp	r22, r18
     f86:	73 07       	cpc	r23, r19
     f88:	84 07       	cpc	r24, r20
     f8a:	ba 07       	cpc	r27, r26
     f8c:	20 f0       	brcs	.+8      	; 0xf96 <__divsf3_pse+0xae>
     f8e:	62 1b       	sub	r22, r18
     f90:	73 0b       	sbc	r23, r19
     f92:	84 0b       	sbc	r24, r20
     f94:	ba 0b       	sbc	r27, r26
     f96:	ee 1f       	adc	r30, r30
     f98:	88 f7       	brcc	.-30     	; 0xf7c <__divsf3_pse+0x94>
     f9a:	e0 95       	com	r30
     f9c:	08 95       	ret

00000f9e <__fp_inf>:
     f9e:	97 f9       	bld	r25, 7
     fa0:	9f 67       	ori	r25, 0x7F	; 127
     fa2:	80 e8       	ldi	r24, 0x80	; 128
     fa4:	70 e0       	ldi	r23, 0x00	; 0
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	08 95       	ret

00000faa <__fp_nan>:
     faa:	9f ef       	ldi	r25, 0xFF	; 255
     fac:	80 ec       	ldi	r24, 0xC0	; 192
     fae:	08 95       	ret

00000fb0 <__fp_pscA>:
     fb0:	00 24       	eor	r0, r0
     fb2:	0a 94       	dec	r0
     fb4:	16 16       	cp	r1, r22
     fb6:	17 06       	cpc	r1, r23
     fb8:	18 06       	cpc	r1, r24
     fba:	09 06       	cpc	r0, r25
     fbc:	08 95       	ret

00000fbe <__fp_pscB>:
     fbe:	00 24       	eor	r0, r0
     fc0:	0a 94       	dec	r0
     fc2:	12 16       	cp	r1, r18
     fc4:	13 06       	cpc	r1, r19
     fc6:	14 06       	cpc	r1, r20
     fc8:	05 06       	cpc	r0, r21
     fca:	08 95       	ret

00000fcc <__fp_round>:
     fcc:	09 2e       	mov	r0, r25
     fce:	03 94       	inc	r0
     fd0:	00 0c       	add	r0, r0
     fd2:	11 f4       	brne	.+4      	; 0xfd8 <__fp_round+0xc>
     fd4:	88 23       	and	r24, r24
     fd6:	52 f0       	brmi	.+20     	; 0xfec <__fp_round+0x20>
     fd8:	bb 0f       	add	r27, r27
     fda:	40 f4       	brcc	.+16     	; 0xfec <__fp_round+0x20>
     fdc:	bf 2b       	or	r27, r31
     fde:	11 f4       	brne	.+4      	; 0xfe4 <__fp_round+0x18>
     fe0:	60 ff       	sbrs	r22, 0
     fe2:	04 c0       	rjmp	.+8      	; 0xfec <__fp_round+0x20>
     fe4:	6f 5f       	subi	r22, 0xFF	; 255
     fe6:	7f 4f       	sbci	r23, 0xFF	; 255
     fe8:	8f 4f       	sbci	r24, 0xFF	; 255
     fea:	9f 4f       	sbci	r25, 0xFF	; 255
     fec:	08 95       	ret

00000fee <__fp_split3>:
     fee:	57 fd       	sbrc	r21, 7
     ff0:	90 58       	subi	r25, 0x80	; 128
     ff2:	44 0f       	add	r20, r20
     ff4:	55 1f       	adc	r21, r21
     ff6:	59 f0       	breq	.+22     	; 0x100e <__fp_splitA+0x10>
     ff8:	5f 3f       	cpi	r21, 0xFF	; 255
     ffa:	71 f0       	breq	.+28     	; 0x1018 <__fp_splitA+0x1a>
     ffc:	47 95       	ror	r20

00000ffe <__fp_splitA>:
     ffe:	88 0f       	add	r24, r24
    1000:	97 fb       	bst	r25, 7
    1002:	99 1f       	adc	r25, r25
    1004:	61 f0       	breq	.+24     	; 0x101e <__fp_splitA+0x20>
    1006:	9f 3f       	cpi	r25, 0xFF	; 255
    1008:	79 f0       	breq	.+30     	; 0x1028 <__fp_splitA+0x2a>
    100a:	87 95       	ror	r24
    100c:	08 95       	ret
    100e:	12 16       	cp	r1, r18
    1010:	13 06       	cpc	r1, r19
    1012:	14 06       	cpc	r1, r20
    1014:	55 1f       	adc	r21, r21
    1016:	f2 cf       	rjmp	.-28     	; 0xffc <__fp_split3+0xe>
    1018:	46 95       	lsr	r20
    101a:	f1 df       	rcall	.-30     	; 0xffe <__fp_splitA>
    101c:	08 c0       	rjmp	.+16     	; 0x102e <__fp_splitA+0x30>
    101e:	16 16       	cp	r1, r22
    1020:	17 06       	cpc	r1, r23
    1022:	18 06       	cpc	r1, r24
    1024:	99 1f       	adc	r25, r25
    1026:	f1 cf       	rjmp	.-30     	; 0x100a <__fp_splitA+0xc>
    1028:	86 95       	lsr	r24
    102a:	71 05       	cpc	r23, r1
    102c:	61 05       	cpc	r22, r1
    102e:	08 94       	sec
    1030:	08 95       	ret

00001032 <__fp_zero>:
    1032:	e8 94       	clt

00001034 <__fp_szero>:
    1034:	bb 27       	eor	r27, r27
    1036:	66 27       	eor	r22, r22
    1038:	77 27       	eor	r23, r23
    103a:	cb 01       	movw	r24, r22
    103c:	97 f9       	bld	r25, 7
    103e:	08 95       	ret

00001040 <__mulsf3>:
    1040:	0e 94 33 08 	call	0x1066	; 0x1066 <__mulsf3x>
    1044:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__fp_round>
    1048:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__fp_pscA>
    104c:	38 f0       	brcs	.+14     	; 0x105c <__mulsf3+0x1c>
    104e:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fp_pscB>
    1052:	20 f0       	brcs	.+8      	; 0x105c <__mulsf3+0x1c>
    1054:	95 23       	and	r25, r21
    1056:	11 f0       	breq	.+4      	; 0x105c <__mulsf3+0x1c>
    1058:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_inf>
    105c:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_nan>
    1060:	11 24       	eor	r1, r1
    1062:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__fp_szero>

00001066 <__mulsf3x>:
    1066:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_split3>
    106a:	70 f3       	brcs	.-36     	; 0x1048 <__mulsf3+0x8>

0000106c <__mulsf3_pse>:
    106c:	95 9f       	mul	r25, r21
    106e:	c1 f3       	breq	.-16     	; 0x1060 <__mulsf3+0x20>
    1070:	95 0f       	add	r25, r21
    1072:	50 e0       	ldi	r21, 0x00	; 0
    1074:	55 1f       	adc	r21, r21
    1076:	62 9f       	mul	r22, r18
    1078:	f0 01       	movw	r30, r0
    107a:	72 9f       	mul	r23, r18
    107c:	bb 27       	eor	r27, r27
    107e:	f0 0d       	add	r31, r0
    1080:	b1 1d       	adc	r27, r1
    1082:	63 9f       	mul	r22, r19
    1084:	aa 27       	eor	r26, r26
    1086:	f0 0d       	add	r31, r0
    1088:	b1 1d       	adc	r27, r1
    108a:	aa 1f       	adc	r26, r26
    108c:	64 9f       	mul	r22, r20
    108e:	66 27       	eor	r22, r22
    1090:	b0 0d       	add	r27, r0
    1092:	a1 1d       	adc	r26, r1
    1094:	66 1f       	adc	r22, r22
    1096:	82 9f       	mul	r24, r18
    1098:	22 27       	eor	r18, r18
    109a:	b0 0d       	add	r27, r0
    109c:	a1 1d       	adc	r26, r1
    109e:	62 1f       	adc	r22, r18
    10a0:	73 9f       	mul	r23, r19
    10a2:	b0 0d       	add	r27, r0
    10a4:	a1 1d       	adc	r26, r1
    10a6:	62 1f       	adc	r22, r18
    10a8:	83 9f       	mul	r24, r19
    10aa:	a0 0d       	add	r26, r0
    10ac:	61 1d       	adc	r22, r1
    10ae:	22 1f       	adc	r18, r18
    10b0:	74 9f       	mul	r23, r20
    10b2:	33 27       	eor	r19, r19
    10b4:	a0 0d       	add	r26, r0
    10b6:	61 1d       	adc	r22, r1
    10b8:	23 1f       	adc	r18, r19
    10ba:	84 9f       	mul	r24, r20
    10bc:	60 0d       	add	r22, r0
    10be:	21 1d       	adc	r18, r1
    10c0:	82 2f       	mov	r24, r18
    10c2:	76 2f       	mov	r23, r22
    10c4:	6a 2f       	mov	r22, r26
    10c6:	11 24       	eor	r1, r1
    10c8:	9f 57       	subi	r25, 0x7F	; 127
    10ca:	50 40       	sbci	r21, 0x00	; 0
    10cc:	9a f0       	brmi	.+38     	; 0x10f4 <__mulsf3_pse+0x88>
    10ce:	f1 f0       	breq	.+60     	; 0x110c <__mulsf3_pse+0xa0>
    10d0:	88 23       	and	r24, r24
    10d2:	4a f0       	brmi	.+18     	; 0x10e6 <__mulsf3_pse+0x7a>
    10d4:	ee 0f       	add	r30, r30
    10d6:	ff 1f       	adc	r31, r31
    10d8:	bb 1f       	adc	r27, r27
    10da:	66 1f       	adc	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	91 50       	subi	r25, 0x01	; 1
    10e2:	50 40       	sbci	r21, 0x00	; 0
    10e4:	a9 f7       	brne	.-22     	; 0x10d0 <__mulsf3_pse+0x64>
    10e6:	9e 3f       	cpi	r25, 0xFE	; 254
    10e8:	51 05       	cpc	r21, r1
    10ea:	80 f0       	brcs	.+32     	; 0x110c <__mulsf3_pse+0xa0>
    10ec:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_inf>
    10f0:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__fp_szero>
    10f4:	5f 3f       	cpi	r21, 0xFF	; 255
    10f6:	e4 f3       	brlt	.-8      	; 0x10f0 <__mulsf3_pse+0x84>
    10f8:	98 3e       	cpi	r25, 0xE8	; 232
    10fa:	d4 f3       	brlt	.-12     	; 0x10f0 <__mulsf3_pse+0x84>
    10fc:	86 95       	lsr	r24
    10fe:	77 95       	ror	r23
    1100:	67 95       	ror	r22
    1102:	b7 95       	ror	r27
    1104:	f7 95       	ror	r31
    1106:	e7 95       	ror	r30
    1108:	9f 5f       	subi	r25, 0xFF	; 255
    110a:	c1 f7       	brne	.-16     	; 0x10fc <__mulsf3_pse+0x90>
    110c:	fe 2b       	or	r31, r30
    110e:	88 0f       	add	r24, r24
    1110:	91 1d       	adc	r25, r1
    1112:	96 95       	lsr	r25
    1114:	87 95       	ror	r24
    1116:	97 f9       	bld	r25, 7
    1118:	08 95       	ret

0000111a <__tablejump2__>:
    111a:	ee 0f       	add	r30, r30
    111c:	ff 1f       	adc	r31, r31
    111e:	05 90       	lpm	r0, Z+
    1120:	f4 91       	lpm	r31, Z
    1122:	e0 2d       	mov	r30, r0
    1124:	09 94       	ijmp

00001126 <sprintf>:
    1126:	ae e0       	ldi	r26, 0x0E	; 14
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	e9 e9       	ldi	r30, 0x99	; 153
    112c:	f8 e0       	ldi	r31, 0x08	; 8
    112e:	0c 94 54 0b 	jmp	0x16a8	; 0x16a8 <__prologue_saves__+0x1c>
    1132:	0d 89       	ldd	r16, Y+21	; 0x15
    1134:	1e 89       	ldd	r17, Y+22	; 0x16
    1136:	86 e0       	ldi	r24, 0x06	; 6
    1138:	8c 83       	std	Y+4, r24	; 0x04
    113a:	1a 83       	std	Y+2, r17	; 0x02
    113c:	09 83       	std	Y+1, r16	; 0x01
    113e:	8f ef       	ldi	r24, 0xFF	; 255
    1140:	9f e7       	ldi	r25, 0x7F	; 127
    1142:	9e 83       	std	Y+6, r25	; 0x06
    1144:	8d 83       	std	Y+5, r24	; 0x05
    1146:	ae 01       	movw	r20, r28
    1148:	47 5e       	subi	r20, 0xE7	; 231
    114a:	5f 4f       	sbci	r21, 0xFF	; 255
    114c:	6f 89       	ldd	r22, Y+23	; 0x17
    114e:	78 8d       	ldd	r23, Y+24	; 0x18
    1150:	ce 01       	movw	r24, r28
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	0e 94 b5 08 	call	0x116a	; 0x116a <vfprintf>
    1158:	ef 81       	ldd	r30, Y+7	; 0x07
    115a:	f8 85       	ldd	r31, Y+8	; 0x08
    115c:	e0 0f       	add	r30, r16
    115e:	f1 1f       	adc	r31, r17
    1160:	10 82       	st	Z, r1
    1162:	2e 96       	adiw	r28, 0x0e	; 14
    1164:	e4 e0       	ldi	r30, 0x04	; 4
    1166:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__epilogue_restores__+0x1c>

0000116a <vfprintf>:
    116a:	ab e0       	ldi	r26, 0x0B	; 11
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	eb eb       	ldi	r30, 0xBB	; 187
    1170:	f8 e0       	ldi	r31, 0x08	; 8
    1172:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__prologue_saves__>
    1176:	6c 01       	movw	r12, r24
    1178:	7b 01       	movw	r14, r22
    117a:	8a 01       	movw	r16, r20
    117c:	fc 01       	movw	r30, r24
    117e:	17 82       	std	Z+7, r1	; 0x07
    1180:	16 82       	std	Z+6, r1	; 0x06
    1182:	83 81       	ldd	r24, Z+3	; 0x03
    1184:	81 ff       	sbrs	r24, 1
    1186:	cc c1       	rjmp	.+920    	; 0x1520 <vfprintf+0x3b6>
    1188:	ce 01       	movw	r24, r28
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	3c 01       	movw	r6, r24
    118e:	f6 01       	movw	r30, r12
    1190:	93 81       	ldd	r25, Z+3	; 0x03
    1192:	f7 01       	movw	r30, r14
    1194:	93 fd       	sbrc	r25, 3
    1196:	85 91       	lpm	r24, Z+
    1198:	93 ff       	sbrs	r25, 3
    119a:	81 91       	ld	r24, Z+
    119c:	7f 01       	movw	r14, r30
    119e:	88 23       	and	r24, r24
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <vfprintf+0x3a>
    11a2:	ba c1       	rjmp	.+884    	; 0x1518 <vfprintf+0x3ae>
    11a4:	85 32       	cpi	r24, 0x25	; 37
    11a6:	39 f4       	brne	.+14     	; 0x11b6 <vfprintf+0x4c>
    11a8:	93 fd       	sbrc	r25, 3
    11aa:	85 91       	lpm	r24, Z+
    11ac:	93 ff       	sbrs	r25, 3
    11ae:	81 91       	ld	r24, Z+
    11b0:	7f 01       	movw	r14, r30
    11b2:	85 32       	cpi	r24, 0x25	; 37
    11b4:	29 f4       	brne	.+10     	; 0x11c0 <vfprintf+0x56>
    11b6:	b6 01       	movw	r22, r12
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    11be:	e7 cf       	rjmp	.-50     	; 0x118e <vfprintf+0x24>
    11c0:	91 2c       	mov	r9, r1
    11c2:	21 2c       	mov	r2, r1
    11c4:	31 2c       	mov	r3, r1
    11c6:	ff e1       	ldi	r31, 0x1F	; 31
    11c8:	f3 15       	cp	r31, r3
    11ca:	d8 f0       	brcs	.+54     	; 0x1202 <vfprintf+0x98>
    11cc:	8b 32       	cpi	r24, 0x2B	; 43
    11ce:	79 f0       	breq	.+30     	; 0x11ee <vfprintf+0x84>
    11d0:	38 f4       	brcc	.+14     	; 0x11e0 <vfprintf+0x76>
    11d2:	80 32       	cpi	r24, 0x20	; 32
    11d4:	79 f0       	breq	.+30     	; 0x11f4 <vfprintf+0x8a>
    11d6:	83 32       	cpi	r24, 0x23	; 35
    11d8:	a1 f4       	brne	.+40     	; 0x1202 <vfprintf+0x98>
    11da:	23 2d       	mov	r18, r3
    11dc:	20 61       	ori	r18, 0x10	; 16
    11de:	1d c0       	rjmp	.+58     	; 0x121a <vfprintf+0xb0>
    11e0:	8d 32       	cpi	r24, 0x2D	; 45
    11e2:	61 f0       	breq	.+24     	; 0x11fc <vfprintf+0x92>
    11e4:	80 33       	cpi	r24, 0x30	; 48
    11e6:	69 f4       	brne	.+26     	; 0x1202 <vfprintf+0x98>
    11e8:	23 2d       	mov	r18, r3
    11ea:	21 60       	ori	r18, 0x01	; 1
    11ec:	16 c0       	rjmp	.+44     	; 0x121a <vfprintf+0xb0>
    11ee:	83 2d       	mov	r24, r3
    11f0:	82 60       	ori	r24, 0x02	; 2
    11f2:	38 2e       	mov	r3, r24
    11f4:	e3 2d       	mov	r30, r3
    11f6:	e4 60       	ori	r30, 0x04	; 4
    11f8:	3e 2e       	mov	r3, r30
    11fa:	2a c0       	rjmp	.+84     	; 0x1250 <vfprintf+0xe6>
    11fc:	f3 2d       	mov	r31, r3
    11fe:	f8 60       	ori	r31, 0x08	; 8
    1200:	1d c0       	rjmp	.+58     	; 0x123c <vfprintf+0xd2>
    1202:	37 fc       	sbrc	r3, 7
    1204:	2d c0       	rjmp	.+90     	; 0x1260 <vfprintf+0xf6>
    1206:	20 ed       	ldi	r18, 0xD0	; 208
    1208:	28 0f       	add	r18, r24
    120a:	2a 30       	cpi	r18, 0x0A	; 10
    120c:	40 f0       	brcs	.+16     	; 0x121e <vfprintf+0xb4>
    120e:	8e 32       	cpi	r24, 0x2E	; 46
    1210:	b9 f4       	brne	.+46     	; 0x1240 <vfprintf+0xd6>
    1212:	36 fc       	sbrc	r3, 6
    1214:	81 c1       	rjmp	.+770    	; 0x1518 <vfprintf+0x3ae>
    1216:	23 2d       	mov	r18, r3
    1218:	20 64       	ori	r18, 0x40	; 64
    121a:	32 2e       	mov	r3, r18
    121c:	19 c0       	rjmp	.+50     	; 0x1250 <vfprintf+0xe6>
    121e:	36 fe       	sbrs	r3, 6
    1220:	06 c0       	rjmp	.+12     	; 0x122e <vfprintf+0xc4>
    1222:	8a e0       	ldi	r24, 0x0A	; 10
    1224:	98 9e       	mul	r9, r24
    1226:	20 0d       	add	r18, r0
    1228:	11 24       	eor	r1, r1
    122a:	92 2e       	mov	r9, r18
    122c:	11 c0       	rjmp	.+34     	; 0x1250 <vfprintf+0xe6>
    122e:	ea e0       	ldi	r30, 0x0A	; 10
    1230:	2e 9e       	mul	r2, r30
    1232:	20 0d       	add	r18, r0
    1234:	11 24       	eor	r1, r1
    1236:	22 2e       	mov	r2, r18
    1238:	f3 2d       	mov	r31, r3
    123a:	f0 62       	ori	r31, 0x20	; 32
    123c:	3f 2e       	mov	r3, r31
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <vfprintf+0xe6>
    1240:	8c 36       	cpi	r24, 0x6C	; 108
    1242:	21 f4       	brne	.+8      	; 0x124c <vfprintf+0xe2>
    1244:	83 2d       	mov	r24, r3
    1246:	80 68       	ori	r24, 0x80	; 128
    1248:	38 2e       	mov	r3, r24
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <vfprintf+0xe6>
    124c:	88 36       	cpi	r24, 0x68	; 104
    124e:	41 f4       	brne	.+16     	; 0x1260 <vfprintf+0xf6>
    1250:	f7 01       	movw	r30, r14
    1252:	93 fd       	sbrc	r25, 3
    1254:	85 91       	lpm	r24, Z+
    1256:	93 ff       	sbrs	r25, 3
    1258:	81 91       	ld	r24, Z+
    125a:	7f 01       	movw	r14, r30
    125c:	81 11       	cpse	r24, r1
    125e:	b3 cf       	rjmp	.-154    	; 0x11c6 <vfprintf+0x5c>
    1260:	98 2f       	mov	r25, r24
    1262:	9f 7d       	andi	r25, 0xDF	; 223
    1264:	95 54       	subi	r25, 0x45	; 69
    1266:	93 30       	cpi	r25, 0x03	; 3
    1268:	28 f4       	brcc	.+10     	; 0x1274 <vfprintf+0x10a>
    126a:	0c 5f       	subi	r16, 0xFC	; 252
    126c:	1f 4f       	sbci	r17, 0xFF	; 255
    126e:	9f e3       	ldi	r25, 0x3F	; 63
    1270:	99 83       	std	Y+1, r25	; 0x01
    1272:	0d c0       	rjmp	.+26     	; 0x128e <vfprintf+0x124>
    1274:	83 36       	cpi	r24, 0x63	; 99
    1276:	31 f0       	breq	.+12     	; 0x1284 <vfprintf+0x11a>
    1278:	83 37       	cpi	r24, 0x73	; 115
    127a:	71 f0       	breq	.+28     	; 0x1298 <vfprintf+0x12e>
    127c:	83 35       	cpi	r24, 0x53	; 83
    127e:	09 f0       	breq	.+2      	; 0x1282 <vfprintf+0x118>
    1280:	59 c0       	rjmp	.+178    	; 0x1334 <vfprintf+0x1ca>
    1282:	21 c0       	rjmp	.+66     	; 0x12c6 <vfprintf+0x15c>
    1284:	f8 01       	movw	r30, r16
    1286:	80 81       	ld	r24, Z
    1288:	89 83       	std	Y+1, r24	; 0x01
    128a:	0e 5f       	subi	r16, 0xFE	; 254
    128c:	1f 4f       	sbci	r17, 0xFF	; 255
    128e:	88 24       	eor	r8, r8
    1290:	83 94       	inc	r8
    1292:	91 2c       	mov	r9, r1
    1294:	53 01       	movw	r10, r6
    1296:	13 c0       	rjmp	.+38     	; 0x12be <vfprintf+0x154>
    1298:	28 01       	movw	r4, r16
    129a:	f2 e0       	ldi	r31, 0x02	; 2
    129c:	4f 0e       	add	r4, r31
    129e:	51 1c       	adc	r5, r1
    12a0:	f8 01       	movw	r30, r16
    12a2:	a0 80       	ld	r10, Z
    12a4:	b1 80       	ldd	r11, Z+1	; 0x01
    12a6:	36 fe       	sbrs	r3, 6
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <vfprintf+0x146>
    12aa:	69 2d       	mov	r22, r9
    12ac:	70 e0       	ldi	r23, 0x00	; 0
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <vfprintf+0x14a>
    12b0:	6f ef       	ldi	r22, 0xFF	; 255
    12b2:	7f ef       	ldi	r23, 0xFF	; 255
    12b4:	c5 01       	movw	r24, r10
    12b6:	0e 94 a1 0a 	call	0x1542	; 0x1542 <strnlen>
    12ba:	4c 01       	movw	r8, r24
    12bc:	82 01       	movw	r16, r4
    12be:	f3 2d       	mov	r31, r3
    12c0:	ff 77       	andi	r31, 0x7F	; 127
    12c2:	3f 2e       	mov	r3, r31
    12c4:	16 c0       	rjmp	.+44     	; 0x12f2 <vfprintf+0x188>
    12c6:	28 01       	movw	r4, r16
    12c8:	22 e0       	ldi	r18, 0x02	; 2
    12ca:	42 0e       	add	r4, r18
    12cc:	51 1c       	adc	r5, r1
    12ce:	f8 01       	movw	r30, r16
    12d0:	a0 80       	ld	r10, Z
    12d2:	b1 80       	ldd	r11, Z+1	; 0x01
    12d4:	36 fe       	sbrs	r3, 6
    12d6:	03 c0       	rjmp	.+6      	; 0x12de <vfprintf+0x174>
    12d8:	69 2d       	mov	r22, r9
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	02 c0       	rjmp	.+4      	; 0x12e2 <vfprintf+0x178>
    12de:	6f ef       	ldi	r22, 0xFF	; 255
    12e0:	7f ef       	ldi	r23, 0xFF	; 255
    12e2:	c5 01       	movw	r24, r10
    12e4:	0e 94 96 0a 	call	0x152c	; 0x152c <strnlen_P>
    12e8:	4c 01       	movw	r8, r24
    12ea:	f3 2d       	mov	r31, r3
    12ec:	f0 68       	ori	r31, 0x80	; 128
    12ee:	3f 2e       	mov	r3, r31
    12f0:	82 01       	movw	r16, r4
    12f2:	33 fc       	sbrc	r3, 3
    12f4:	1b c0       	rjmp	.+54     	; 0x132c <vfprintf+0x1c2>
    12f6:	82 2d       	mov	r24, r2
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	88 16       	cp	r8, r24
    12fc:	99 06       	cpc	r9, r25
    12fe:	b0 f4       	brcc	.+44     	; 0x132c <vfprintf+0x1c2>
    1300:	b6 01       	movw	r22, r12
    1302:	80 e2       	ldi	r24, 0x20	; 32
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    130a:	2a 94       	dec	r2
    130c:	f4 cf       	rjmp	.-24     	; 0x12f6 <vfprintf+0x18c>
    130e:	f5 01       	movw	r30, r10
    1310:	37 fc       	sbrc	r3, 7
    1312:	85 91       	lpm	r24, Z+
    1314:	37 fe       	sbrs	r3, 7
    1316:	81 91       	ld	r24, Z+
    1318:	5f 01       	movw	r10, r30
    131a:	b6 01       	movw	r22, r12
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    1322:	21 10       	cpse	r2, r1
    1324:	2a 94       	dec	r2
    1326:	21 e0       	ldi	r18, 0x01	; 1
    1328:	82 1a       	sub	r8, r18
    132a:	91 08       	sbc	r9, r1
    132c:	81 14       	cp	r8, r1
    132e:	91 04       	cpc	r9, r1
    1330:	71 f7       	brne	.-36     	; 0x130e <vfprintf+0x1a4>
    1332:	e8 c0       	rjmp	.+464    	; 0x1504 <vfprintf+0x39a>
    1334:	84 36       	cpi	r24, 0x64	; 100
    1336:	11 f0       	breq	.+4      	; 0x133c <vfprintf+0x1d2>
    1338:	89 36       	cpi	r24, 0x69	; 105
    133a:	41 f5       	brne	.+80     	; 0x138c <vfprintf+0x222>
    133c:	f8 01       	movw	r30, r16
    133e:	37 fe       	sbrs	r3, 7
    1340:	07 c0       	rjmp	.+14     	; 0x1350 <vfprintf+0x1e6>
    1342:	60 81       	ld	r22, Z
    1344:	71 81       	ldd	r23, Z+1	; 0x01
    1346:	82 81       	ldd	r24, Z+2	; 0x02
    1348:	93 81       	ldd	r25, Z+3	; 0x03
    134a:	0c 5f       	subi	r16, 0xFC	; 252
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	08 c0       	rjmp	.+16     	; 0x1360 <vfprintf+0x1f6>
    1350:	60 81       	ld	r22, Z
    1352:	71 81       	ldd	r23, Z+1	; 0x01
    1354:	07 2e       	mov	r0, r23
    1356:	00 0c       	add	r0, r0
    1358:	88 0b       	sbc	r24, r24
    135a:	99 0b       	sbc	r25, r25
    135c:	0e 5f       	subi	r16, 0xFE	; 254
    135e:	1f 4f       	sbci	r17, 0xFF	; 255
    1360:	f3 2d       	mov	r31, r3
    1362:	ff 76       	andi	r31, 0x6F	; 111
    1364:	3f 2e       	mov	r3, r31
    1366:	97 ff       	sbrs	r25, 7
    1368:	09 c0       	rjmp	.+18     	; 0x137c <vfprintf+0x212>
    136a:	90 95       	com	r25
    136c:	80 95       	com	r24
    136e:	70 95       	com	r23
    1370:	61 95       	neg	r22
    1372:	7f 4f       	sbci	r23, 0xFF	; 255
    1374:	8f 4f       	sbci	r24, 0xFF	; 255
    1376:	9f 4f       	sbci	r25, 0xFF	; 255
    1378:	f0 68       	ori	r31, 0x80	; 128
    137a:	3f 2e       	mov	r3, r31
    137c:	2a e0       	ldi	r18, 0x0A	; 10
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	a3 01       	movw	r20, r6
    1382:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__ultoa_invert>
    1386:	88 2e       	mov	r8, r24
    1388:	86 18       	sub	r8, r6
    138a:	45 c0       	rjmp	.+138    	; 0x1416 <vfprintf+0x2ac>
    138c:	85 37       	cpi	r24, 0x75	; 117
    138e:	31 f4       	brne	.+12     	; 0x139c <vfprintf+0x232>
    1390:	23 2d       	mov	r18, r3
    1392:	2f 7e       	andi	r18, 0xEF	; 239
    1394:	b2 2e       	mov	r11, r18
    1396:	2a e0       	ldi	r18, 0x0A	; 10
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	25 c0       	rjmp	.+74     	; 0x13e6 <vfprintf+0x27c>
    139c:	93 2d       	mov	r25, r3
    139e:	99 7f       	andi	r25, 0xF9	; 249
    13a0:	b9 2e       	mov	r11, r25
    13a2:	8f 36       	cpi	r24, 0x6F	; 111
    13a4:	c1 f0       	breq	.+48     	; 0x13d6 <vfprintf+0x26c>
    13a6:	18 f4       	brcc	.+6      	; 0x13ae <vfprintf+0x244>
    13a8:	88 35       	cpi	r24, 0x58	; 88
    13aa:	79 f0       	breq	.+30     	; 0x13ca <vfprintf+0x260>
    13ac:	b5 c0       	rjmp	.+362    	; 0x1518 <vfprintf+0x3ae>
    13ae:	80 37       	cpi	r24, 0x70	; 112
    13b0:	19 f0       	breq	.+6      	; 0x13b8 <vfprintf+0x24e>
    13b2:	88 37       	cpi	r24, 0x78	; 120
    13b4:	21 f0       	breq	.+8      	; 0x13be <vfprintf+0x254>
    13b6:	b0 c0       	rjmp	.+352    	; 0x1518 <vfprintf+0x3ae>
    13b8:	e9 2f       	mov	r30, r25
    13ba:	e0 61       	ori	r30, 0x10	; 16
    13bc:	be 2e       	mov	r11, r30
    13be:	b4 fe       	sbrs	r11, 4
    13c0:	0d c0       	rjmp	.+26     	; 0x13dc <vfprintf+0x272>
    13c2:	fb 2d       	mov	r31, r11
    13c4:	f4 60       	ori	r31, 0x04	; 4
    13c6:	bf 2e       	mov	r11, r31
    13c8:	09 c0       	rjmp	.+18     	; 0x13dc <vfprintf+0x272>
    13ca:	34 fe       	sbrs	r3, 4
    13cc:	0a c0       	rjmp	.+20     	; 0x13e2 <vfprintf+0x278>
    13ce:	29 2f       	mov	r18, r25
    13d0:	26 60       	ori	r18, 0x06	; 6
    13d2:	b2 2e       	mov	r11, r18
    13d4:	06 c0       	rjmp	.+12     	; 0x13e2 <vfprintf+0x278>
    13d6:	28 e0       	ldi	r18, 0x08	; 8
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	05 c0       	rjmp	.+10     	; 0x13e6 <vfprintf+0x27c>
    13dc:	20 e1       	ldi	r18, 0x10	; 16
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <vfprintf+0x27c>
    13e2:	20 e1       	ldi	r18, 0x10	; 16
    13e4:	32 e0       	ldi	r19, 0x02	; 2
    13e6:	f8 01       	movw	r30, r16
    13e8:	b7 fe       	sbrs	r11, 7
    13ea:	07 c0       	rjmp	.+14     	; 0x13fa <vfprintf+0x290>
    13ec:	60 81       	ld	r22, Z
    13ee:	71 81       	ldd	r23, Z+1	; 0x01
    13f0:	82 81       	ldd	r24, Z+2	; 0x02
    13f2:	93 81       	ldd	r25, Z+3	; 0x03
    13f4:	0c 5f       	subi	r16, 0xFC	; 252
    13f6:	1f 4f       	sbci	r17, 0xFF	; 255
    13f8:	06 c0       	rjmp	.+12     	; 0x1406 <vfprintf+0x29c>
    13fa:	60 81       	ld	r22, Z
    13fc:	71 81       	ldd	r23, Z+1	; 0x01
    13fe:	80 e0       	ldi	r24, 0x00	; 0
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	0e 5f       	subi	r16, 0xFE	; 254
    1404:	1f 4f       	sbci	r17, 0xFF	; 255
    1406:	a3 01       	movw	r20, r6
    1408:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__ultoa_invert>
    140c:	88 2e       	mov	r8, r24
    140e:	86 18       	sub	r8, r6
    1410:	fb 2d       	mov	r31, r11
    1412:	ff 77       	andi	r31, 0x7F	; 127
    1414:	3f 2e       	mov	r3, r31
    1416:	36 fe       	sbrs	r3, 6
    1418:	0d c0       	rjmp	.+26     	; 0x1434 <vfprintf+0x2ca>
    141a:	23 2d       	mov	r18, r3
    141c:	2e 7f       	andi	r18, 0xFE	; 254
    141e:	a2 2e       	mov	r10, r18
    1420:	89 14       	cp	r8, r9
    1422:	58 f4       	brcc	.+22     	; 0x143a <vfprintf+0x2d0>
    1424:	34 fe       	sbrs	r3, 4
    1426:	0b c0       	rjmp	.+22     	; 0x143e <vfprintf+0x2d4>
    1428:	32 fc       	sbrc	r3, 2
    142a:	09 c0       	rjmp	.+18     	; 0x143e <vfprintf+0x2d4>
    142c:	83 2d       	mov	r24, r3
    142e:	8e 7e       	andi	r24, 0xEE	; 238
    1430:	a8 2e       	mov	r10, r24
    1432:	05 c0       	rjmp	.+10     	; 0x143e <vfprintf+0x2d4>
    1434:	b8 2c       	mov	r11, r8
    1436:	a3 2c       	mov	r10, r3
    1438:	03 c0       	rjmp	.+6      	; 0x1440 <vfprintf+0x2d6>
    143a:	b8 2c       	mov	r11, r8
    143c:	01 c0       	rjmp	.+2      	; 0x1440 <vfprintf+0x2d6>
    143e:	b9 2c       	mov	r11, r9
    1440:	a4 fe       	sbrs	r10, 4
    1442:	0f c0       	rjmp	.+30     	; 0x1462 <vfprintf+0x2f8>
    1444:	fe 01       	movw	r30, r28
    1446:	e8 0d       	add	r30, r8
    1448:	f1 1d       	adc	r31, r1
    144a:	80 81       	ld	r24, Z
    144c:	80 33       	cpi	r24, 0x30	; 48
    144e:	21 f4       	brne	.+8      	; 0x1458 <vfprintf+0x2ee>
    1450:	9a 2d       	mov	r25, r10
    1452:	99 7e       	andi	r25, 0xE9	; 233
    1454:	a9 2e       	mov	r10, r25
    1456:	09 c0       	rjmp	.+18     	; 0x146a <vfprintf+0x300>
    1458:	a2 fe       	sbrs	r10, 2
    145a:	06 c0       	rjmp	.+12     	; 0x1468 <vfprintf+0x2fe>
    145c:	b3 94       	inc	r11
    145e:	b3 94       	inc	r11
    1460:	04 c0       	rjmp	.+8      	; 0x146a <vfprintf+0x300>
    1462:	8a 2d       	mov	r24, r10
    1464:	86 78       	andi	r24, 0x86	; 134
    1466:	09 f0       	breq	.+2      	; 0x146a <vfprintf+0x300>
    1468:	b3 94       	inc	r11
    146a:	a3 fc       	sbrc	r10, 3
    146c:	11 c0       	rjmp	.+34     	; 0x1490 <vfprintf+0x326>
    146e:	a0 fe       	sbrs	r10, 0
    1470:	06 c0       	rjmp	.+12     	; 0x147e <vfprintf+0x314>
    1472:	b2 14       	cp	r11, r2
    1474:	88 f4       	brcc	.+34     	; 0x1498 <vfprintf+0x32e>
    1476:	28 0c       	add	r2, r8
    1478:	92 2c       	mov	r9, r2
    147a:	9b 18       	sub	r9, r11
    147c:	0e c0       	rjmp	.+28     	; 0x149a <vfprintf+0x330>
    147e:	b2 14       	cp	r11, r2
    1480:	60 f4       	brcc	.+24     	; 0x149a <vfprintf+0x330>
    1482:	b6 01       	movw	r22, r12
    1484:	80 e2       	ldi	r24, 0x20	; 32
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    148c:	b3 94       	inc	r11
    148e:	f7 cf       	rjmp	.-18     	; 0x147e <vfprintf+0x314>
    1490:	b2 14       	cp	r11, r2
    1492:	18 f4       	brcc	.+6      	; 0x149a <vfprintf+0x330>
    1494:	2b 18       	sub	r2, r11
    1496:	02 c0       	rjmp	.+4      	; 0x149c <vfprintf+0x332>
    1498:	98 2c       	mov	r9, r8
    149a:	21 2c       	mov	r2, r1
    149c:	a4 fe       	sbrs	r10, 4
    149e:	10 c0       	rjmp	.+32     	; 0x14c0 <vfprintf+0x356>
    14a0:	b6 01       	movw	r22, r12
    14a2:	80 e3       	ldi	r24, 0x30	; 48
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    14aa:	a2 fe       	sbrs	r10, 2
    14ac:	17 c0       	rjmp	.+46     	; 0x14dc <vfprintf+0x372>
    14ae:	a1 fc       	sbrc	r10, 1
    14b0:	03 c0       	rjmp	.+6      	; 0x14b8 <vfprintf+0x34e>
    14b2:	88 e7       	ldi	r24, 0x78	; 120
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <vfprintf+0x352>
    14b8:	88 e5       	ldi	r24, 0x58	; 88
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	b6 01       	movw	r22, r12
    14be:	0c c0       	rjmp	.+24     	; 0x14d8 <vfprintf+0x36e>
    14c0:	8a 2d       	mov	r24, r10
    14c2:	86 78       	andi	r24, 0x86	; 134
    14c4:	59 f0       	breq	.+22     	; 0x14dc <vfprintf+0x372>
    14c6:	a1 fe       	sbrs	r10, 1
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <vfprintf+0x364>
    14ca:	8b e2       	ldi	r24, 0x2B	; 43
    14cc:	01 c0       	rjmp	.+2      	; 0x14d0 <vfprintf+0x366>
    14ce:	80 e2       	ldi	r24, 0x20	; 32
    14d0:	a7 fc       	sbrc	r10, 7
    14d2:	8d e2       	ldi	r24, 0x2D	; 45
    14d4:	b6 01       	movw	r22, r12
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    14dc:	89 14       	cp	r8, r9
    14de:	38 f4       	brcc	.+14     	; 0x14ee <vfprintf+0x384>
    14e0:	b6 01       	movw	r22, r12
    14e2:	80 e3       	ldi	r24, 0x30	; 48
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    14ea:	9a 94       	dec	r9
    14ec:	f7 cf       	rjmp	.-18     	; 0x14dc <vfprintf+0x372>
    14ee:	8a 94       	dec	r8
    14f0:	f3 01       	movw	r30, r6
    14f2:	e8 0d       	add	r30, r8
    14f4:	f1 1d       	adc	r31, r1
    14f6:	80 81       	ld	r24, Z
    14f8:	b6 01       	movw	r22, r12
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    1500:	81 10       	cpse	r8, r1
    1502:	f5 cf       	rjmp	.-22     	; 0x14ee <vfprintf+0x384>
    1504:	22 20       	and	r2, r2
    1506:	09 f4       	brne	.+2      	; 0x150a <vfprintf+0x3a0>
    1508:	42 ce       	rjmp	.-892    	; 0x118e <vfprintf+0x24>
    150a:	b6 01       	movw	r22, r12
    150c:	80 e2       	ldi	r24, 0x20	; 32
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	0e 94 ac 0a 	call	0x1558	; 0x1558 <fputc>
    1514:	2a 94       	dec	r2
    1516:	f6 cf       	rjmp	.-20     	; 0x1504 <vfprintf+0x39a>
    1518:	f6 01       	movw	r30, r12
    151a:	86 81       	ldd	r24, Z+6	; 0x06
    151c:	97 81       	ldd	r25, Z+7	; 0x07
    151e:	02 c0       	rjmp	.+4      	; 0x1524 <vfprintf+0x3ba>
    1520:	8f ef       	ldi	r24, 0xFF	; 255
    1522:	9f ef       	ldi	r25, 0xFF	; 255
    1524:	2b 96       	adiw	r28, 0x0b	; 11
    1526:	e2 e1       	ldi	r30, 0x12	; 18
    1528:	0c 94 62 0b 	jmp	0x16c4	; 0x16c4 <__epilogue_restores__>

0000152c <strnlen_P>:
    152c:	fc 01       	movw	r30, r24
    152e:	05 90       	lpm	r0, Z+
    1530:	61 50       	subi	r22, 0x01	; 1
    1532:	70 40       	sbci	r23, 0x00	; 0
    1534:	01 10       	cpse	r0, r1
    1536:	d8 f7       	brcc	.-10     	; 0x152e <strnlen_P+0x2>
    1538:	80 95       	com	r24
    153a:	90 95       	com	r25
    153c:	8e 0f       	add	r24, r30
    153e:	9f 1f       	adc	r25, r31
    1540:	08 95       	ret

00001542 <strnlen>:
    1542:	fc 01       	movw	r30, r24
    1544:	61 50       	subi	r22, 0x01	; 1
    1546:	70 40       	sbci	r23, 0x00	; 0
    1548:	01 90       	ld	r0, Z+
    154a:	01 10       	cpse	r0, r1
    154c:	d8 f7       	brcc	.-10     	; 0x1544 <strnlen+0x2>
    154e:	80 95       	com	r24
    1550:	90 95       	com	r25
    1552:	8e 0f       	add	r24, r30
    1554:	9f 1f       	adc	r25, r31
    1556:	08 95       	ret

00001558 <fputc>:
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	fb 01       	movw	r30, r22
    1562:	23 81       	ldd	r18, Z+3	; 0x03
    1564:	21 fd       	sbrc	r18, 1
    1566:	03 c0       	rjmp	.+6      	; 0x156e <fputc+0x16>
    1568:	8f ef       	ldi	r24, 0xFF	; 255
    156a:	9f ef       	ldi	r25, 0xFF	; 255
    156c:	2c c0       	rjmp	.+88     	; 0x15c6 <fputc+0x6e>
    156e:	22 ff       	sbrs	r18, 2
    1570:	16 c0       	rjmp	.+44     	; 0x159e <fputc+0x46>
    1572:	46 81       	ldd	r20, Z+6	; 0x06
    1574:	57 81       	ldd	r21, Z+7	; 0x07
    1576:	24 81       	ldd	r18, Z+4	; 0x04
    1578:	35 81       	ldd	r19, Z+5	; 0x05
    157a:	42 17       	cp	r20, r18
    157c:	53 07       	cpc	r21, r19
    157e:	44 f4       	brge	.+16     	; 0x1590 <fputc+0x38>
    1580:	a0 81       	ld	r26, Z
    1582:	b1 81       	ldd	r27, Z+1	; 0x01
    1584:	9d 01       	movw	r18, r26
    1586:	2f 5f       	subi	r18, 0xFF	; 255
    1588:	3f 4f       	sbci	r19, 0xFF	; 255
    158a:	31 83       	std	Z+1, r19	; 0x01
    158c:	20 83       	st	Z, r18
    158e:	8c 93       	st	X, r24
    1590:	26 81       	ldd	r18, Z+6	; 0x06
    1592:	37 81       	ldd	r19, Z+7	; 0x07
    1594:	2f 5f       	subi	r18, 0xFF	; 255
    1596:	3f 4f       	sbci	r19, 0xFF	; 255
    1598:	37 83       	std	Z+7, r19	; 0x07
    159a:	26 83       	std	Z+6, r18	; 0x06
    159c:	14 c0       	rjmp	.+40     	; 0x15c6 <fputc+0x6e>
    159e:	8b 01       	movw	r16, r22
    15a0:	ec 01       	movw	r28, r24
    15a2:	fb 01       	movw	r30, r22
    15a4:	00 84       	ldd	r0, Z+8	; 0x08
    15a6:	f1 85       	ldd	r31, Z+9	; 0x09
    15a8:	e0 2d       	mov	r30, r0
    15aa:	09 95       	icall
    15ac:	89 2b       	or	r24, r25
    15ae:	e1 f6       	brne	.-72     	; 0x1568 <fputc+0x10>
    15b0:	d8 01       	movw	r26, r16
    15b2:	16 96       	adiw	r26, 0x06	; 6
    15b4:	8d 91       	ld	r24, X+
    15b6:	9c 91       	ld	r25, X
    15b8:	17 97       	sbiw	r26, 0x07	; 7
    15ba:	01 96       	adiw	r24, 0x01	; 1
    15bc:	17 96       	adiw	r26, 0x07	; 7
    15be:	9c 93       	st	X, r25
    15c0:	8e 93       	st	-X, r24
    15c2:	16 97       	sbiw	r26, 0x06	; 6
    15c4:	ce 01       	movw	r24, r28
    15c6:	df 91       	pop	r29
    15c8:	cf 91       	pop	r28
    15ca:	1f 91       	pop	r17
    15cc:	0f 91       	pop	r16
    15ce:	08 95       	ret

000015d0 <__ultoa_invert>:
    15d0:	fa 01       	movw	r30, r20
    15d2:	aa 27       	eor	r26, r26
    15d4:	28 30       	cpi	r18, 0x08	; 8
    15d6:	51 f1       	breq	.+84     	; 0x162c <__ultoa_invert+0x5c>
    15d8:	20 31       	cpi	r18, 0x10	; 16
    15da:	81 f1       	breq	.+96     	; 0x163c <__ultoa_invert+0x6c>
    15dc:	e8 94       	clt
    15de:	6f 93       	push	r22
    15e0:	6e 7f       	andi	r22, 0xFE	; 254
    15e2:	6e 5f       	subi	r22, 0xFE	; 254
    15e4:	7f 4f       	sbci	r23, 0xFF	; 255
    15e6:	8f 4f       	sbci	r24, 0xFF	; 255
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	af 4f       	sbci	r26, 0xFF	; 255
    15ec:	b1 e0       	ldi	r27, 0x01	; 1
    15ee:	3e d0       	rcall	.+124    	; 0x166c <__ultoa_invert+0x9c>
    15f0:	b4 e0       	ldi	r27, 0x04	; 4
    15f2:	3c d0       	rcall	.+120    	; 0x166c <__ultoa_invert+0x9c>
    15f4:	67 0f       	add	r22, r23
    15f6:	78 1f       	adc	r23, r24
    15f8:	89 1f       	adc	r24, r25
    15fa:	9a 1f       	adc	r25, r26
    15fc:	a1 1d       	adc	r26, r1
    15fe:	68 0f       	add	r22, r24
    1600:	79 1f       	adc	r23, r25
    1602:	8a 1f       	adc	r24, r26
    1604:	91 1d       	adc	r25, r1
    1606:	a1 1d       	adc	r26, r1
    1608:	6a 0f       	add	r22, r26
    160a:	71 1d       	adc	r23, r1
    160c:	81 1d       	adc	r24, r1
    160e:	91 1d       	adc	r25, r1
    1610:	a1 1d       	adc	r26, r1
    1612:	20 d0       	rcall	.+64     	; 0x1654 <__ultoa_invert+0x84>
    1614:	09 f4       	brne	.+2      	; 0x1618 <__ultoa_invert+0x48>
    1616:	68 94       	set
    1618:	3f 91       	pop	r19
    161a:	2a e0       	ldi	r18, 0x0A	; 10
    161c:	26 9f       	mul	r18, r22
    161e:	11 24       	eor	r1, r1
    1620:	30 19       	sub	r19, r0
    1622:	30 5d       	subi	r19, 0xD0	; 208
    1624:	31 93       	st	Z+, r19
    1626:	de f6       	brtc	.-74     	; 0x15de <__ultoa_invert+0xe>
    1628:	cf 01       	movw	r24, r30
    162a:	08 95       	ret
    162c:	46 2f       	mov	r20, r22
    162e:	47 70       	andi	r20, 0x07	; 7
    1630:	40 5d       	subi	r20, 0xD0	; 208
    1632:	41 93       	st	Z+, r20
    1634:	b3 e0       	ldi	r27, 0x03	; 3
    1636:	0f d0       	rcall	.+30     	; 0x1656 <__ultoa_invert+0x86>
    1638:	c9 f7       	brne	.-14     	; 0x162c <__ultoa_invert+0x5c>
    163a:	f6 cf       	rjmp	.-20     	; 0x1628 <__ultoa_invert+0x58>
    163c:	46 2f       	mov	r20, r22
    163e:	4f 70       	andi	r20, 0x0F	; 15
    1640:	40 5d       	subi	r20, 0xD0	; 208
    1642:	4a 33       	cpi	r20, 0x3A	; 58
    1644:	18 f0       	brcs	.+6      	; 0x164c <__ultoa_invert+0x7c>
    1646:	49 5d       	subi	r20, 0xD9	; 217
    1648:	31 fd       	sbrc	r19, 1
    164a:	40 52       	subi	r20, 0x20	; 32
    164c:	41 93       	st	Z+, r20
    164e:	02 d0       	rcall	.+4      	; 0x1654 <__ultoa_invert+0x84>
    1650:	a9 f7       	brne	.-22     	; 0x163c <__ultoa_invert+0x6c>
    1652:	ea cf       	rjmp	.-44     	; 0x1628 <__ultoa_invert+0x58>
    1654:	b4 e0       	ldi	r27, 0x04	; 4
    1656:	a6 95       	lsr	r26
    1658:	97 95       	ror	r25
    165a:	87 95       	ror	r24
    165c:	77 95       	ror	r23
    165e:	67 95       	ror	r22
    1660:	ba 95       	dec	r27
    1662:	c9 f7       	brne	.-14     	; 0x1656 <__ultoa_invert+0x86>
    1664:	00 97       	sbiw	r24, 0x00	; 0
    1666:	61 05       	cpc	r22, r1
    1668:	71 05       	cpc	r23, r1
    166a:	08 95       	ret
    166c:	9b 01       	movw	r18, r22
    166e:	ac 01       	movw	r20, r24
    1670:	0a 2e       	mov	r0, r26
    1672:	06 94       	lsr	r0
    1674:	57 95       	ror	r21
    1676:	47 95       	ror	r20
    1678:	37 95       	ror	r19
    167a:	27 95       	ror	r18
    167c:	ba 95       	dec	r27
    167e:	c9 f7       	brne	.-14     	; 0x1672 <__ultoa_invert+0xa2>
    1680:	62 0f       	add	r22, r18
    1682:	73 1f       	adc	r23, r19
    1684:	84 1f       	adc	r24, r20
    1686:	95 1f       	adc	r25, r21
    1688:	a0 1d       	adc	r26, r0
    168a:	08 95       	ret

0000168c <__prologue_saves__>:
    168c:	2f 92       	push	r2
    168e:	3f 92       	push	r3
    1690:	4f 92       	push	r4
    1692:	5f 92       	push	r5
    1694:	6f 92       	push	r6
    1696:	7f 92       	push	r7
    1698:	8f 92       	push	r8
    169a:	9f 92       	push	r9
    169c:	af 92       	push	r10
    169e:	bf 92       	push	r11
    16a0:	cf 92       	push	r12
    16a2:	df 92       	push	r13
    16a4:	ef 92       	push	r14
    16a6:	ff 92       	push	r15
    16a8:	0f 93       	push	r16
    16aa:	1f 93       	push	r17
    16ac:	cf 93       	push	r28
    16ae:	df 93       	push	r29
    16b0:	cd b7       	in	r28, 0x3d	; 61
    16b2:	de b7       	in	r29, 0x3e	; 62
    16b4:	ca 1b       	sub	r28, r26
    16b6:	db 0b       	sbc	r29, r27
    16b8:	0f b6       	in	r0, 0x3f	; 63
    16ba:	f8 94       	cli
    16bc:	de bf       	out	0x3e, r29	; 62
    16be:	0f be       	out	0x3f, r0	; 63
    16c0:	cd bf       	out	0x3d, r28	; 61
    16c2:	09 94       	ijmp

000016c4 <__epilogue_restores__>:
    16c4:	2a 88       	ldd	r2, Y+18	; 0x12
    16c6:	39 88       	ldd	r3, Y+17	; 0x11
    16c8:	48 88       	ldd	r4, Y+16	; 0x10
    16ca:	5f 84       	ldd	r5, Y+15	; 0x0f
    16cc:	6e 84       	ldd	r6, Y+14	; 0x0e
    16ce:	7d 84       	ldd	r7, Y+13	; 0x0d
    16d0:	8c 84       	ldd	r8, Y+12	; 0x0c
    16d2:	9b 84       	ldd	r9, Y+11	; 0x0b
    16d4:	aa 84       	ldd	r10, Y+10	; 0x0a
    16d6:	b9 84       	ldd	r11, Y+9	; 0x09
    16d8:	c8 84       	ldd	r12, Y+8	; 0x08
    16da:	df 80       	ldd	r13, Y+7	; 0x07
    16dc:	ee 80       	ldd	r14, Y+6	; 0x06
    16de:	fd 80       	ldd	r15, Y+5	; 0x05
    16e0:	0c 81       	ldd	r16, Y+4	; 0x04
    16e2:	1b 81       	ldd	r17, Y+3	; 0x03
    16e4:	aa 81       	ldd	r26, Y+2	; 0x02
    16e6:	b9 81       	ldd	r27, Y+1	; 0x01
    16e8:	ce 0f       	add	r28, r30
    16ea:	d1 1d       	adc	r29, r1
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	f8 94       	cli
    16f0:	de bf       	out	0x3e, r29	; 62
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	cd bf       	out	0x3d, r28	; 61
    16f6:	ed 01       	movw	r28, r26
    16f8:	08 95       	ret

000016fa <_exit>:
    16fa:	f8 94       	cli

000016fc <__stop_program>:
    16fc:	ff cf       	rjmp	.-2      	; 0x16fc <__stop_program>
